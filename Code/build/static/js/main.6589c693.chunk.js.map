{"version":3,"sources":["config.js","fonts/MyriadProRegular.otf","resetpassword/resetPasswordComponent.js","store/AuthStore.js","components/DisplayDocument/css/styles.module.css","components/DisplayDocument/css/styles_popup_box.module.css","me.png","components/notfound/notfound.js","icons/MassLogoIcon.js","Header/header.js","UserActionCategory.js","helpers.js","constants.js","Sidebar/index.js","components/Icons/backArrow.js","toast/index.js","Spinner/index.js","Layout/AuthLayoutHOC.js","components/Icons/editIcon.js","AppTextbox/index.js","MyToast/index.js","PaginatedTable/index.js","PaginatedTable/ReactTable.js","roles/rolemanagement.js","roles/index.js","Layout/LayoutHOC.js","components/login/Login.js","components/login/index.js","components/Icons/LockIcon.js","components/Icons/UnlockIcon.js","icons/ResetPasswordIcon.js","users/usermanagement.js","users/index.js","resetpassword/index.js","Claims/claimsprocessingcenter/index.js","Claims/claimsprocessingcenter/ClaimProcessingCenter.js","dashboard/customCard.js","dashboard/index.js","dashboard/Dashboard.js","Player/Home/index.js","Player/Home/Playersupport.js","Player/Reports/Home/index.js","Player/Reports/Home/PlayerReports.js","playerreporttable/playerreporttable.js","playerreporttable/index.js","playerreportscustom/index.js","playerreportscustom/PlayerReportsCustom.js","Claims/claimsupport/index.js","Claims/claimsupport/ClaimSupport.js","Claims/claimreportsqueries/index.js","Claims/claimreportsqueries/ClaimReportsQueries.js","Claims/rejectedClaim/index.js","Claims/rejectedClaim/rejectClaim.js","Claims/claimsearch/index.js","Claims/claimupdate/index.js","Claims/claimupdate/ClaimUpdate.js","Claims/claimresearch/index.js","Claims/claimresearch/ClaimResearch.js","TableComponent/index.js","Claims/claimdetailseditable/ClaimDetailsEditable.js","Claims/claimdetailseditable/index.js","Claims/claimdetailsreadonly/ClaimDetailsReadOnly.js","Claims/claimdetailsreadonly/index.js","Claims/claimreports/index.js","Claims/claimreports/ClaimReports.js","Claims/claimreportscustom/index.js","Claims/claimreportscustom/ClaimReportsCustom.js","components/sigcontainer/sigcontainer.js","Claims/claimDetails/index.js","Claims/claimDetails/ClaimDetails.js","Claims/claimPaymentHistory/index.js","Claims/claimPaymentHistory/ClaimPaymentHistory.js","components/widget/widget.js","Constants/SystemDashCategories.js","systemdashboard/index.js","systemdashboard/SystemDashboard.js","Constants/SystemStatsCategories.js","systemsearch/index.js","systemstats/index.js","systemstats/SystemStats.js","systemdetails/index.js","systemdetails/SystemDetails.js","Misc/ComingSoon/ComingSoon.js","Layout/MiscLayoutHOC.js","Misc/ComingSoon/index.js","Player/SearchBar/index.js","Player/Search/index.js","Player/Search/PlayerSearchGeneric.js","Player/Tabs/Details.js","Constants/KYCIdentificationOne.js","Constants/KYCIdentificationTwo.js","components/DisplayDocument/functions.js","service/EventEmiiter/index.js","components/DisplayDocument/index.js","Player/Tabs/KYCVerification.js","Player/Tabs/ConfirmEmail.js","Constants/UnlockPlayerReasonCodes.js","Constants/LockPlayerReasonCodes.js","Player/Tabs/LockUnlock.js","Ticket/SearchBar/index.js","Player/Tabs/TicketHistory.js","Constants/AddressStateCodes.js","Constants/GenderCodes.js","Player/Tabs/UpdateProfile.js","Event/SearchBar/index.js","Player/Tabs/EventHistory.js","Player/Tabs/ClaimHistory.js","Player/Tabs/EnableDisable.js","Player/Hub/index.js","Player/Hub/PlayerHub.js","users/AuditSearch/index.js","users/ActionAudit/index.js","users/ActionAudit/ActionAudit.js","SecurityHome/index.js","SecurityHome/SecurityHome.js","FrequentCasher/index.js","FrequentCasher/FrequentCasher.js","components/login/MFA/MFA.js","components/login/MFA/index.js","Admin/MFAPolicy/index.js","Admin/MFAPolicy/MFAPolicy.js","Admin/Settings/Tabs/MFABypassRule.js","Admin/Settings/Hub/index.js","Admin/Settings/Hub/SettingsHub.js","Finance/index.js","Finance/Finance.js","Finance/ACHActivity/index.js","Finance/ACHActivity/ACHActivity.js","Finance/ACHActivityBatchDetail/index.js","Finance/ACHActivityBatchDetail/ACHActivityBatchDetail.js","Finance/ACHActivityRejectDetail/index.js","Finance/ACHActivityRejectDetail/ACHActivityRejectDetail.js","components/lighttable/TableRow.js","components/lighttable/TableHead.js","components/lighttable/LightTable.js","Finance/DailyReconciliationReport/index.js","Finance/DailyReconciliationReport/DailyReconciliationReport.js","pages/src/components/Home/Location/index.tsx","pages/src/components/component/PrescriptionDetailedForm/index.tsx","pages/src/components/component/CouponsTiles/index.tsx","pages/src/components/Home/ChooseYourCoupon/index.tsx","pages/src/components/component/Coupon/index.tsx","pages/src/components/Home/CouponDetails/index.tsx","pages/src/components/Home/FindPrescriptionHome/index.tsx","pages/src/components/Home/index.tsx","routes.js","serviceWorker.js","store/PlayerStore.js","store/SettingsStore.js","store/ClaimStore.js","store/MiscellaneousStore.js","store/RootStore.js","index.js"],"names":["config","SERVER_BASE_URL","LOG_SERVER_BASE_URL","module","exports","ResetPasswordComponent","props","validatePasswordField","password","test","validateForm","state","confirmPassword","isValidPassword","setState","isValidate","warningMessage","handleSubmit","event","preventDefault","username","token","data","Buffer","from","toString","fetch","method","headers","body","JSON","stringify","then","response","json","res","error","errorMessage","message","history","push","catch","console","log","handleInputChange","value","stateName","this","match","params","className","src","onSubmit","e","Group","controlId","Control","type","placeholder","autoFocus","onChange","target","Text","block","bsSize","disabled","React","Component","AuthStore","rootStore","baseURL","startsWith","replace","socket","WebSocket","addEventListener","send","details","parse","miscellaneousStore","setFailedJobDetails","getPolicies","makeWSConnection","email","passwordAuthErrorMessage","otpAuthErrorMessage","accessToken","refreshToken","firstname","lastname","userid","OTPAccessToken","localStorage","setItem","undefined","userId","userName","userFullName","postLogin","otpAccessToken","OTP","getOTPAccessToken","getItem","getRefreshToken","getUserName","url","alert","clear","observable","persist","action","Notfound","MassLogoIcon","version","xmlns","width","height","viewBox","preserveAspectRatio","transform","fill","stroke","d","Header","UserActionCategory","UserAction","LOGIN","LOGOUT","RESET_USER_PASSWORD","ADD_USER","EDIT_USER","UPDATE_USER","DEACTIVATE_USER","DELETE_USER","USER_AUDIT_HISTORY_PAGE","USER_ACTION_HISTORY_SEARCH","EDIT_ROLE","UPDATE_ROLE","DELETE_ROLE","ADD_ROLE","SEARCH_PLAYER","PLAYER_DETAILS","UPDATE_PLAYER_PROFILE","RESET_PLAYER_PASSWORD","UNLOCK_PLAYER","LOCK_PLAYER","VERIFY_PLAYER","LAUNCH_EXPERIAN","TICKET_HISTORY","EVENT_HISTORY","SEARCH_TICKET_HISTORY","PLAYER_REPORTS_LOCKED_ACCOUNTS","PLAYER_REPORTS_IDOLOGY_FAILED_STATUS","PLAYER_REPORTS_NO_IDOLOGY_STATUS","CUSTOM_PLAYER_REPORT","DOWNLOAD_PLAYER_REPORT","PRINT_PLAYER_REPORT","SEARCH_CLAIM","READ_ONLY_CLAIM_DETAILS","UPDATE_CLAIM","PLAYER_MAINTENANCE","PLAYER_SERVICE_REPORTS","CLAIM_SUPPORT","PLAYER_SUPPORT","SYSTEM_DASHBOARD","USER_MANAGEMENT","ROLE_MANAGEMENT","LOCK_UNLOCK_PLAYER","FREQUENT_CASHER","CONFIRM_PLAYER_EMAIL","VIEW_CLAIMS","CLAIM_DETAILS","VIEW_PAYMENT_DETAILS","SUBMIT_PAYMENT_DETAILS","VIEW_W2G","ACH_ACTIVITY","ACH_BATCH_DETAILS","SHOW_BATCH_FILE_PII","SHOW_REJECT_FILE_PII","VIEW_REJECTED_CLAIMS","VIEW_ESIGNAURE","VIEW_ESIGNAURE_FAILED","VIEW_ESIGNAURE_EXPIRED","checkRenderPermissions","str","permissions","i","j","length","key","dotenv","Sidebar","inject","navigateToHome","handleAdminMenuItemClick","path","authStore","logout","playerStore","logAction","handleKnowledgeBaseMenuItemClick","toggleKnowledgeBaseMenu","downloadPDF","toggleAdminMenu","prevState","isAdminMenuOpen","isKnowledgeBaseMenuOpen","onClick","BackArrow","color","fill-rule","AppToast","showToast","isSuccessMessage","handleClose","aria-live","aria-atomic","Toast","onClose","show","delay","autohide","Body","Spinner","role","AuthLayoutHOC","WrappedComponent","observer","onBackButtonClick","isUpdate","showBackConfirm","clearTicketHistorySearchResults","clearUserAuditActionSearchResults","clearEventHistorySearchResults","goBack","onHomeButtonClick","handleUpdate","flag","handlePopup","handleToastClose","setToastErrorSuccessMessage","claimStore","resetToast","toggleCronJobToast","toggleNotification","handleDetailViewClick","window","outerWidth","showMainToast","mainErrorMessage","mainSuccessMessage","isSpinnerLoading","isLoading","selectedBatchId","selectedRejectReferenceNumber","successMessage","showNotificationToast","notificationErrorList","title","location","pathname","titleText","UserNameTitleText","selectedClaimId","paymentDetails","transactionId","map","item","index","href","showBackButton","onUpdate","defaultProps","EditIcon","onclick","AppTextbox","Form","MyToast","ReactTable","columns","tableHeader","column","dataField","text","label","classes","products","rowData","header","noDataMessage","options","firstPageText","prePageText","nextPageText","lastPageText","sizePerPageRenderer","currSizePerPage","onSizePerPageChange","option","isSelect","page","disablePageTitle","sizePerPageList","keyField","pagination","paginationFactory","bordered","noDataIndication","AddRole","onInputChange","roleName","roleId","policies","onCheckboxClick","isEditRole","p","allowed","Check","checked","isAllowed","id","Row","Col","RoleManagementComponent","fetchAllRoles","setRoles","showAddUserModal","showModal","onAddRoleClick","roleList","policyIds","filter","policy","xhrData","roleid","policyids","rolename","showSuccess","showError","onCancel","onDelete","showConfirmPopup","handleRoleChange","handleEditRole","cancelDeleteRole","deleteRole","policyId","_policies","forEach","selectedPolicy","find","addRole","getTableHeader","Button","variant","selectedId","roles","_tableHeader","findIndex","row","edit","isDisabled","isOneSelected","trim","innerHeight","_header","handleColumnCLick","Modal","size","onRoleChange","Footer","renderRoleManagement","class","LayoutHOC","LoginComponent","loginWithPassword","coapp-error-messagentrolId","LockIcon","UnlockIcon","disabledClassName","ResetPasswordIcon","AddUser","rolesList","showEmailError","confirmUserName","lastName","firstName","middleName","isEditUser","selected","UserManagementComponent","fetchAllUsers","setUsers","cancelUnlock","user","showUnlockModal","lockedUser","unlockUser","users","_users","handleEditUser","handleResetPassword","account","islocked","audit","handleAuditClick","userList","onAddUserClick","isValidEmail","newUser","middlename","isDeleteProcess","isDeactivateProcess","onDeactivate","_isValidEmail","resetPassword","selectedUserName","showResetPasswordPopup","hideResetPassword","setSelectedBackOfficeUserID","setSelectedBackOfficeUserName","selectedUser","cancelDeleteUser","deleteOrDeactivateUser","addNewUser","deleteConfirmMessage","resetPasswordConfirmMessage","centered","renderUserManagement","ResetPassword","ClaimProcessingCenterComponent","Table","responsive","CustomCard","iconPath","handleCallback","DashboardComponent","Name","navigateTo","PlayerSupportComponent","removeItem","renderPlayerSupport","PlayerReportsComponent","query","detail","renderPlayerReports","PlayerReportTable","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","csvExporter","ExportToCsv","handleSelectClick","downloadClicked","printClicked","setTableData","rows","idField","select","enabled","status","idcheckresult","idchecksource","reason","generateCsv","PlayerReportTableComponent","withRouter","PlayerReportsCustomComponent","isValid","isEmailValid","onYesClicked","handleSelectChange","val","Number","city","zipcode","enabledval","idcheckresultval","statusval","cognitostatusval","idchecksourceval","cognitostatus","obj","queryStr","enabledstr","getFieldValue","idcheckresultstr","statusstr","idchecksourcestr","cognitostr","toUpperCase","onSearch","ClaimSupportComponent","renderClaimSupport","ClaimReportsQueriesComponent","renderClaimReportsQueries","RejectClaimComponent","handleViewDetailClick","setSelectedClaim","navigateToClaimDetails","renderView","rejectedClaimsDetails","tableRows","toJS","view","isClaimCheck","indexOf","fetchRejectClaims","ClaimSearch","drawDate","ticketStatus","paymentStatus","handleSearchClick","ticketStatuses","paymentStatuses","maxDate","Date","isClearable","placeholderText","date","identifier","ClaimUpdateComponent","onToastClose","onSearchClick","queryParams","renderClaimUpdate","ClaimResearchComponent","renderClaimResearch","TableComponent","handleNavigation","navId","_off","tableOffset","children","totalRows","rowCount","navigationLength","lastIndex","startIndex","slice","aria-label","r","ClaimDetailsEditableComponent","fetchClaimDetails","ticketNumber","game","totalPrizeAmount","taxAmount","netAmount","wagerAmount","wagerType","statusDate","claimsAgent","reasonCode","handleCancel","renderClaimDetailsEditable","ClaimDetailsReadOnlyComponent","ClaimReportsComponent","renderClaimReports","ClaimReportsCustomComponent","SigContainer","addDefaultSrc","bind","ev","eSignatureURL","onError","ClaimDetailsComponent","showSigModal","handleW2GFormButtonClick","fetchW2GFormForClaim","handleESigFormButtonClick","handleClaimHistoryDetailClick","handlePaymentDetailClick","paymentData","setPaymentDetails","navigateToPaymentDetails","handleRepaymentButtonClick","handleRoutingInputChange","a","bankName","re","setSpinnerState","code","name","handleResubmitPayment","referenceNumber","routingNumber","accountNumber","selectedAccount","resubmitACHPayment","onYes","showConfirmModal","onNo","onAccountTypeChange","confirmRoutingNumber","confirmAccountNumber","accountTypes","fetchPaymentHistoryDetails","claimDetails","isSubmitDisabled","paymentHistoryTableRows","paymentHistoryData","selectedClaimDetails","claimHistoryTableHeader","claimHistoryTableRows","paymentHistoryTableHeader","eSignatureData","rejectedCounter","serialNumber","barcode","prizeAmountInCents","ticketSerialNumber","ticketBarcode","taxWithholding","offsetWithholding","netPaymentAmountInCents","canSeeESig","rejectedCount","canSeeW2G","isResubmitDisabled","isButtonEnabled","toFixed","maxlength","renderClaimDetails","ClaimPaymentHistoryComponent","setModalState","canSeeAccountData","amount","achAccount","achAccountType","achAccountNumber","achRoutingNumber","Widget","categories","SystemDashboardComponent","optionsHour","scales","xAxes","time","unit","ticks","fontColor","fontSize","gridLines","yAxes","legend","labels","optionsDay","zeroLineColor","optionsWeek","optionUptime","uptimeData","datasets","backgroundColor","hoverBackgroundColor","playerData","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","infrastructureData","playerLabel","infrastructureLabel","fetchSystemDetails","address","setSystemDetails","environemnt","apiErrors","errors","winner","nonrtc","regAccepted","regRejected","nonWinner","ticketScanVelocity","hits","hit","_source","category","incDataSetValues","eventDateTimeUTC","setHours","start","moment","subtract","end","startDate","utc","format","endDate","getTimeLabels","setDays","setWeeks","accepted","datetime","graph","getTime","x","y","inc","ts","dateDataPlayer","dateDataInfrastructure","unshift","playerOptions","infrastructureOptions","upTime","concat","redraw","SystemStatsCategories","SystemSearch","selectedCategory","searchText","tempStart","tempEnd","g","minDate","SystemStatsComponent","maintainAspectRatio","CSVoptions","categorySelected","queryDateRangeStart","queryDateRangeEnd","querySearchText","momentStartDate","momentEndDate","Object","values","temp","_id","element","eventDateTime","graphData","statsList","segments","startStr","substring","endStr","startMoment","endMoment","diffMS","diff","diffSegment","Math","ceil","valueOf","dateData","populateDataSet","SystemDetailsComponent","fileName","eventDescription","eventResult","context","sourceFile","description","logLine","logContext","ComingSoon","MiscLayoutHOC","ComingSoonComponent","PlayerSearch","phone","playerId","onClear","clearPlayerSearchResults","DOB","isValidPhone","isValidZip","PlayerSearchGenericComponent","setSelectedPlayerDetails","getPlayerDetails","endsWith","searchPlayers","setToast","address2","hasOwnProperty","address1","zip5","renderPlayerSearchResetPW","Details","selectedPlayerDetails","identity","gender","dateOfBirth","ssn","acceptedEmailCommunication","acceptedSmsCommunication","termsAcceptedDate","emailVerified","KYCIdentificationOne","KYCIdentificationTwo","axios","require","makeHttpCall","Error","getData","documents","EventEmitter","valuesOfDocumentType","DisplayDocument","triggerSetState","testIfImageIsAvailable","imageUrl","documentData","playersCurrentImage","statusCode","refreshDataForImages","refreshStatus","populateFields","showToastResponse","statusMessage","Promise","resolve","reject","count","imageType","documentTypeId","isData","getImageType","split","toggle","deleteImage","uploadId","eventEmitter","emit","getDocumentType","documentType","zoom","rotation","setDocumentType","popupRadioButtonResult","eventListenerAdded","componentName","addListener","ScrollElement","year","getMonth","document","getElementById","scrollIntoView","style","zIndex","position","top","left","ref","minHeight","styles","tabIndex","defaultValue","marginBottom","setDateFormat","createdAt","getDocumentTypeId","aria-pressesd","cursor","icon","faCaretDown","faCaretUp","backgroundSize","backgroundImage","backgroundRepeat","backgroundPosition","textAlign","alt","CircularProgress","aria-pressed","aria-describedby","display","faReply","marginRight","arial-label","faPlusCircle","faMinusCircle","stylesPopUp","getpopUpCheckButton","setDocumentTypeFromPopUp","popupActionSave","popupActionCancel","renderMountedPageWithData","IdentityCheckResult","KYCVerification","setShowPlayerVerifyModal","onSubmitCancel","onRejectCancel","showCancelPopup","isFieldsEdited","callbackToParent","navigateToFirstTab","APICallback","identification1","identification2","comment1","comment2","updateSSNAndVerifyPlayer","isSSNValid","isIdentificationValid","identification","handleSSNOnClick","updateUserDetails","handleSSNChange","newVal","substr","showPlayerVerifyModal","selectedPlayerID","identityCheckResult","ki","ConfirmEmail","setShowConfirmEmailModal","confirmPlayerEmail","showConfirmEmailModal","UnlockPlayerReasonCodes","LockPlayerReasonCodes","LockUnlock","setshowPlayerLockUnlockModal","comment","disablePlayer","enablePlayer","isReasonCodeValid","locked","showPlayerLockUnlockModal","rc","TicketSearch","setSelectedGameType","setSelectedWinStatus","setSelectedStatus","onFilter","handleFilterClick","onClearFilters","ClearTicketHistoryFilters","onNewSearchCallback","setTicketHistorySearchMode","onNewSearch","setDate","getDate","allGameTypes","allWinStatuses","allStatuses","selectedGameType","selectedWinStatus","selectedStatus","isTicketHistoryInSearchMode","popperPlacement","TicketHistory","criteria","searchTickets","onFilterClick","filterTicketHistoryResult","setTicketHistoryToast","ticketHistoryList","Timestamp","ticketHistoryTableHeader","ticketHistoryTableRows","showTicketHistoryToast","requestTimestamp","isNaN","prizeAmount","AddressStateCodes","GenderCodes","UpdateProfile","setShowUpdateModal","isPhoneNumberValid","isZipcodeValid","isAddr1Valid","addr1","isCityValid","isStateValid","addrState","handleEmailChange","updateUserEmail","handleCheckboxChange","handleDateChange","dateString","monthString","dayString","yearString","getFullYear","updatePlayerDateOfBirth","updatePlayer","date18YearAgo","setFullYear","showUpdateModal","EventSearch","setSelectedDeviceType","setSelectedEvent","ClearEventHistoryFilters","setEventHistorySearchMode","allDeviceTypes","allEvents","selectedDeviceType","selectedEvent","isEventHistoryInSearchMode","EventHistory","searchEvents","filterEventHistoryResult","setEventHistoryToast","eventHistoryList","eventHistoryTableHeader","eventHistoryTableRows","showEventHistoryToast","eventTimestamp","ClaimHistory","handleClaimDetailClick","claimData","fetchAllClaims","tableHeaders","EnableDisable","setShowPlayerEnableDisableModal","scanStatus","disablePlayerScan","enablePlayerScan","showPlayerEnableDisableModal","PlayerHubComponent","playerHubNavigateToFirstTab","handleSelect","setSelectedTabKey","tabKey","selectedTabKey","Tabs","activeKey","onSelect","Tab","eventKey","AuditSearch","actionsList","ActionAuditComponent","toUTCString","searchUserAuditActions","selectedBackofficeUserName","AuditActionsTableHeader","AuditActionsTableRows","timestamp","actions","comments","result","renderActionAudit","SecurityHomeComponent","renderSecurityHome","FrequentCasherComponent","handleAdd","isAdd","setShowFrequentCasherConfirmModal","handleRemove","onYesForAdd","AddFrequentCasher","onYesForRemove","RemoveFrequentCasher","isValidSSN","isLastNameAtLeastLength3","showFrequentCasherConfirmModal","renderFrequentCasher","MFAComponent","TOTP","loginWithTOTP","ResendOTP","requestOTP","maxLength","to","MFAPolicyComponent","settingsStore","deleteRule","deleteMFABypassRule","addRule","addMFABypassRule","inboundRules","inboundRule","rule","ip","setMFABypassRules","source","getMyIPAddress","saveMFABypassRules","setShowConfirmSaveModal","discardMFABypassRuleChanges","isIPAddressValid","IPAddress","blocks","isDescriptionValid","sources","getMFABypassRules","showConfirmSaveModal","renderMFAPolicy","MFABypassRule","editInboundRules","SettingsHubComponent","selectedIndex","renderSettingsHub","FinanceComponent","navigateToClaimTransactions","navigateToDailyReconciliationReport","ACHActivityComponent","clearTableData","batchNumber","rejectFileReference","sDate","eDate","getAchData","setStartDate","newDate","setStartEndDate","setEndDate","_batchNumber","isError","invalidBatchNumberError","setBatchNumber","setRejectFileReference","viewDetailsClick","batchnumber","setSelectedBatchId","setSelectedRejectReferenceNumber","renderACHActivity","ACHActivityBatchDetailComponent","transactionid","playerName","playerfirstname","playerlastname","showPopup","selectedBatch","onModalClose","fetchBatchDetails","batchDetails","selectedBatchDetails","batchDetailsTableHeader","batchDetailsTableRows","filecreationdatetime","filesubmissiondatetime","effectiveentrydate","settlementdate","routingnumber","accountnumber","renderBatchDetails","ACHActivityRejectDetailComponent","selectedRejectFile","fetchRejectFileDetails","rejectFileDetails","selectedRejectFileDetails","rejectFileTableHeader","rejectFileTableRows","processtimestamp","recievetimestamp","totalnumberofrecords","renderrejectFileDetails","TableRow","TableHeadItem","LightTable","theadData","tbodyData","customClass","h","TableHead","items","DailyReconciliationReportComponent","setReconDate","reconDate","rDate","getReconData","reconSetSelectedBatchId","reconSetSelectedRejectReferenceNumber","ESAValidations","mobileClaims","playerPayments","taxes","ACHTotal","returnedPayments","ACHRetries","paperCheckRetries","reconTableHeader","reconTableRows","renderDailyReconciliationReport","Location","language","prescriptionFromRoute","useState","locationsFromMutation","setLocationsFromMutation","getLocation","setLocation","reset","setReset","setWindowWidth","valueForInputValue","setValueForInputValue","getSizes","innerWidth","useEffect","clearInput","getAddressFromLatAndLng","lat","lng","latitude","longitude","bigdatacloud_api","process","locationUrl","myObj","ok","myLocation","postCode","postcode","locality","country","countryName","principalSubdivisionCode","valueMyLocation","err","warn","Response","htmlFor","keys","autoComplete","onFocus","list","random","toISOString","s","createLocationWithOutCommas","navigator","geolocation","getCurrentPosition","coords","form","component","prescriptions","PrescriptionDetailedForm","coupons","prescriptionName","setValuesForFilterCoupons","filterCoupons","Array","isArray","dosage","sort","b","strength","_text","localeCompare","quantity","parseFloat","search_name","CouponsTiles","couponsData","prescription","pricing","price","pharmacy","streetAddress","zipCode","ChooseYourCoupon","pharmacyText","couponData","drugs","locatedDrug","forms","locatedDrugForm","names","locatedDrugName","drugName","brandGenericIndicator","isSelected","quantities","locatedDrugQty","strengths","locatedDrugStrength","setCoupons","valuesForFilter","setValuesForFilter","arr","fillCoupon","assign","drug","Coupon","windowWidth","coupon","CouponDetails","phoneNumber","setPhoneNumber","pattern","arg0","sendPhobneNumberAndCoupon","FindPrescriptionHome","getPrescriptionDetails","setPrescriptionDetails","prescriptionsforDataList","setPrescriptionDetailsForPrescriptionDetailComponent","resetDataFromRoute","setResetDataFromRoute","ifPrescriptionDetailsExists","setIfPrescriptionDetailsExists","clicked","setPrescriptionsDataFromRoute","container","Home","router","asPath","routerHasPath","getPrescription","setPrescriptionUseState","setPrescription","PrivateRoute","rest","authed","render","Routes","exact","Boolean","hostname","PlayerStore","param","_selectedPlayerDetails","newDateOfBirth","setPlayerData","setTicketHistoryData","getAllGameTypesFromTicketHistoryResult","getAllWinStatusesFromTicketHistoryResult","getAllStatusesFromTicketHistoryResult","setTicketHistoryFilters","setEventHistoryData","getAllDeviceTypesFromEventHistoryResult","getAllEventTypesFromEventHistoryResult","setEventHistoryFilters","selectedBackofficeUserID","setUserAuditActionsData","verifyPlayer","TicketHistoryAPIResult","TicketHistoryFilteredResult","EventHistoryAPIResult","EventHistoryFilteredResult","player","verifyData","actionCategory","logline","candidate","every","Set","add","PlayerName","filterJSONObjectArrayOnCriteria","setTicketHistoryFilteredData","setEventHistoryFilteredData","getAllValuesForKeyFromJSONObjectArray","isSkip","file","Blob","fileURL","URL","createObjectURL","open","filename","blob","showFileNewTab","claim","activeFrom","claims","setClaimHistoryData","cb","playerFirstName","playerLastName","selectedClaimStatus","currState","prevStates","eSignatureUrl","stateTax","lineItems","amountInCents","offsetTax","claimReferenceNumber","rejectCount","setClaimDetails","transactions","setPaymentHistoryData","isFailed","userData","loading","success","SettingsStore","setMFABypassRules_UNMODIFIED","inboundRules_UNMODIFIED","splice","_inboundRules","myIPAddress","ClaimStore","setRejectedClaimData","ACHTotalVal","lightTableData","playerPaymentsVal","taxesVal","returnedPaymentsVal","ACHRetriesVal","paperCheckRetriesVal","itemizedReports","tempItemizedAmount","padStart","join","formattedTime","reportType","parseInt","batchReference","recordCount","tempESA","ESAValidation","tempMobile","RTCMobileClaims","tempPlayerPayments","tempTaxes","tempACHTotal","tempReturnedPayments","tempACHRetries","tempPaperCheckRetries","rejectreferencenumber","setData","setReconData","_startDate","_endDate","_reconDate","selectedBatchData","selectedRejectData","selectedRejectId","maksedroutingnumber","maskedaccountnumber","fileCreationDate","fileCreationTime","dateSubmitted","submittedTime","effectiveEntryDate","settlementDate","netamount","batchId","setBatchDetails","fileReceivedDate","fileReceivedTime","setRejectFileDetails","rejectedClaims","accountType","MiscellaneousStore","cronJobData","hydrate","create","storage","all","Root","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6589c693.chunk.js","sourcesContent":["const config = {\r\n    SERVER_BASE_URL: \"http://localhost:7000\",\r\n    LOG_SERVER_BASE_URL: \"http://localhost:7000\",\r\n   \r\n}\r\n\r\n/*const config = {\r\n    SERVER_BASE_URL: \"https://bko-prod-server.masslotteryservices.com\",\r\n    LOG_SERVER_BASE_URL: \"https://bko-prod-server.masslotteryservices.com\"\r\n}*/\r\n\r\n// const config = {\r\n//     SERVER_BASE_URL: \"https://bko-qa-server.masslotteryservices.com\",\r\n//     LOG_SERVER_BASE_URL: \"https://bko-qa-server.masslotteryservices.com\"\r\n// }\r\n\r\n/*const config = {\r\n    SERVER_BASE_URL: \"https://bko-uat-server.masslotteryservices.com\",\r\n    LOG_SERVER_BASE_URL: \"https://bko-uat-server.masslotteryservices.com\"\r\n}*/\r\n\r\nexport default config;","module.exports = __webpack_public_path__ + \"static/media/MyriadProRegular.17caf326.otf\";","import React from \"react\";\r\nimport config from \"../config\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport './resetPasswordComponent.css';\r\n\r\nclass ResetPasswordComponent extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {password: '', confirmPassword: '', username: null, token: null, isValidate: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match && this.props.match.params) {\r\n            const {username, token} = this.props.match.params;\r\n            this.setState({username: username, token: token});\r\n        }\r\n    }\r\n    validatePasswordField = (password) => {\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/g;\r\n        return regex.test(password);\r\n    }\r\n    validateForm = () => {\r\n        const {confirmPassword, password} = this.state;\r\n        if(confirmPassword !== '' && password !== '' && confirmPassword === password) {\r\n            const isValidPassword = this.validatePasswordField(password);\r\n            const invalidPasswordMessage = 'A Password MUST contain at least 8 characters, at least 1 Uppercase alphabet, at least 1 lowercase alphabet, at least 1 number, and at least 1 special character (@,$,!,%,*,?,&)';\r\n            this.setState({isValidate: isValidPassword, warningMessage: !isValidPassword ? invalidPasswordMessage : null})\r\n        } else {\r\n            this.setState({isValidate: false, warningMessage: null});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let {username, password, token} = this.state;\r\n        password = Buffer.from(password).toString('base64')\r\n        const data = {\r\n            username,\r\n            password,\r\n            token\r\n        }\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/setpassword`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else if (res && res.message) {\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    handleInputChange = (value, stateName) => {\r\n        this.setState({[stateName]: value}, ()=>this.validateForm());\r\n    }\r\n\r\n    render() {\r\n        const {errorMessage, confirmPassword, password, isValidate, warningMessage} = this.state;\r\n        // const isValidate = this.validateForm();\r\n        return (\r\n            <div className=\"login App-header\" >\r\n                <div className='login-panel'>\r\n                    <img src='/images/lottery_numbers_blue.png'/>\r\n                    <Form onSubmit={(e) => this.handleSubmit(e)} className='login-form'>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"NEW PASSWORD\"\r\n                                autoFocus\r\n                                value={password}\r\n                                onChange={e => this.handleInputChange(e.target.value, 'password')}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control\r\n                                placeholder=\"CONFIRM PASSWORD\"\r\n                                onChange={e => this.handleInputChange(e.target.value, 'confirmPassword')}\r\n                                value={confirmPassword}\r\n                                type=\"password\"\r\n                            />\r\n\r\n                            {errorMessage ?  <Form.Text className=\"app-error-message\">{errorMessage}</Form.Text> : null}\r\n                            {warningMessage ?  <Form.Text className=\"app-error-message\">{warningMessage}</Form.Text> : null}\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button\r\n                            block\r\n                            bsSize=\"large\"\r\n                            type=\"submit\"\r\n                            className='login-button'\r\n                            disabled={!isValidate}\r\n                        >\r\n                            RESET PASSWORD\r\n                        </Button>\r\n                    </Form>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPasswordComponent;\r\n","import React from \"react\";\r\nimport {persist} from \"mobx-persist\";\r\nimport {action, observable} from \"mobx\";\r\nimport config from \"../config\";\r\n\r\nexport class AuthStore {\r\n\r\n    rootStore = null;\r\n\r\n    // Password Login\r\n    @observable passwordAuthErrorMessage = null;\r\n    @persist @observable accessToken = null;\r\n    @persist @observable refreshToken = null;\r\n\r\n    // OTP Verify\r\n    @observable otpAuthErrorMessage = null;\r\n    @persist @observable otpAccessToken = null;\r\n\r\n    // User Details\r\n    @persist @observable userId = null;\r\n    @persist @observable userName = null;\r\n    @persist @observable userFullName = null;\r\n    @persist @observable userRole = null;\r\n    @persist @observable userPolicies = null;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    makeWSConnection() {\r\n        // Create WebSocket connection.\r\n        let baseURL = (config.SERVER_BASE_URL).toString();\r\n        if(baseURL.startsWith('https://')){\r\n            baseURL = baseURL.replace(\"https://\", \"\");\r\n        } else if(baseURL.startsWith('http://')) {\r\n            baseURL = baseURL.replace(\"http://\", \"\");\r\n        }\r\n        const socket = new WebSocket(`wss://${baseURL}`);\r\n\r\n        // Connection opened\r\n        socket.addEventListener('open',  (event) => {\r\n            socket.send('Hello Server!');\r\n            console.log('WebSocket Connected');\r\n        });\r\n\r\n        // Listen for messages\r\n        socket.addEventListener('message',  (event) => {\r\n            console.log('Message from server', event.data);\r\n            const details = JSON.parse(event.data);\r\n            debugger;\r\n            if(details && details.errorMessage) {\r\n                this.props.miscellaneousStore.setFailedJobDetails(details);\r\n            }\r\n        });\r\n\r\n        // Listen for possible errors\r\n        socket.addEventListener('error',  (event) =>{\r\n            console.log('Message from server ', event.data);\r\n        });\r\n    }\r\n\r\n    postLogin(props) {\r\n        this.getPolicies(props);\r\n        this.makeWSConnection();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     */\r\n    @action loginWithPassword(email, password, props) {\r\n\r\n        let data = {\r\n            \"username\": email,\r\n            \"password\": Buffer.from(password).toString('base64')\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/auth/login`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.passwordAuthErrorMessage = res.error;\r\n                } else {\r\n\r\n                    this.otpAuthErrorMessage = null;\r\n                    this.passwordAuthErrorMessage = null;\r\n\r\n                    const {accessToken, refreshToken, firstname, lastname, userid, OTPAccessToken} = res;\r\n                    localStorage.setItem('userName', email);\r\n                    if (accessToken !== undefined) {\r\n                        //this.setState({errorMessage: 'Authentication successful', accessToken, refreshToken});\r\n                        //this.passwordAuthErrorMessage = 'Authentication successful';\r\n                        localStorage.setItem('accessToken', accessToken);\r\n                        localStorage.setItem('refreshToken', refreshToken);\r\n                        localStorage.setItem('loggedInUserFullName', `${firstname} ${lastname}`);\r\n                        localStorage.setItem('loggedInUserID', userid);\r\n\r\n                        this.accessToken = accessToken;\r\n                        this.refreshToken = refreshToken;\r\n                        this.userId = userid;\r\n                        this.userName = email;\r\n                        this.userFullName = `${firstname} ${lastname}`\r\n                        this.postLogin(props);\r\n\r\n                    } else if (OTPAccessToken !== undefined) {\r\n                        //this.setState({errorMessage: 'Authentication successful'});\r\n                        //this.passwordAuthErrorMessage = 'Authentication successful';\r\n                        localStorage.setItem('OTPAccessToken', OTPAccessToken);\r\n                        this.otpAccessToken = OTPAccessToken;\r\n                        this.userName = email;\r\n                        props.history.push('/login/mfa');\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.passwordAuthErrorMessage = error.toString();\r\n            });\r\n\r\n        /*data = {\r\n            \"username\": email\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/querypolicies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    //this.setState({errorMessage: res.error});\r\n                    this.passwordAuthErrorMessage = res.error;\r\n                } else {\r\n                    localStorage.setItem('userpolicies', JSON.stringify(res));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                //this.setState({errorMessage: error.toString()});\r\n                this.passwordAuthErrorMessage = error.toString();\r\n            });*/\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userName\r\n     * @param TOTP\r\n     */\r\n    @action loginWithTOTP(OTP, props) {\r\n\r\n        let data = {\r\n            \"OTP\": OTP\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/auth/login/mfa`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${this.getOTPAccessToken()}`\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.otpAuthErrorMessage = res.error;\r\n                } else {\r\n\r\n                    this.otpAuthErrorMessage = null;\r\n                    this.passwordAuthErrorMessage = null;\r\n\r\n                    const {accessToken, refreshToken, firstname, lastname, userid, userName} = res;\r\n                    // this.setState({errorMessage: 'Authentication successful', accessToken, refreshToken});\r\n                    localStorage.setItem('accessToken', accessToken);\r\n                    localStorage.setItem('refreshToken', refreshToken);\r\n                    //localStorage.setItem('userName', userName);\r\n                    localStorage.setItem('loggedInUserFullName', `${firstname} ${lastname}`);\r\n                    localStorage.setItem('loggedInUserID', userid);\r\n                    //this.props.history.push('/dashboard', {userName: email});\r\n\r\n                    this.accessToken = accessToken;\r\n                    this.refreshToken = refreshToken;\r\n                    this.userId = userid;\r\n                    //this.userName = email;\r\n                    this.userFullName = `${firstname} ${lastname}`\r\n                    this.postLogin(props);\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.otpAuthErrorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @action requestOTP() {\r\n\r\n        const token = localStorage.getItem('OTPAccessToken');\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/auth/otp`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.otpAuthErrorMessage = res.error;\r\n                } else if (res && res.message) {\r\n                    this.otpAuthErrorMessage = res.message;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @action logout(props) {\r\n\r\n        const token = this.getRefreshToken();\r\n        const username = this.getUserName();\r\n        const url = `${config.SERVER_BASE_URL}/v1/auth/logout`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({username: username, token: token}),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    alert(res.error);\r\n                } else {\r\n                    //this.navigateToHome();\r\n                    localStorage.clear();\r\n                    props.history.push('/');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Error:', error);\r\n            });\r\n    }\r\n\r\n    @action getPolicies(props) {\r\n\r\n        const data = {\r\n            \"username\": localStorage.getItem('userName')\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/querypolicies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    //this.setState({errorMessage: res.error});\r\n                    this.passwordAuthErrorMessage = res.error;\r\n                } else {\r\n                    // props.history.push('/dashboard');\r\n                    localStorage.setItem('userpolicies', JSON.stringify(res));\r\n                    props.history.push('/dashboard', {userName: this.userName});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                //this.setState({errorMessage: error.toString()});\r\n                this.passwordAuthErrorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action getAccessToken() {\r\n        return this.accessToken;\r\n    }\r\n\r\n    getRefreshToken() {\r\n        return this.refreshToken;\r\n    }\r\n\r\n    getOTPAccessToken() {\r\n        return this.otpAccessToken;\r\n    }\r\n\r\n    getUserName() {\r\n        return this.userName;\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"document-image-outer-container\":\"styles_document-image-outer-container__3umBP\",\"player-document-info-players-document-label-container\":\"styles_player-document-info-players-document-label-container__3cx8m\",\"player-document-info-players-document-text\":\"styles_player-document-info-players-document-text__2_JZZ\",\"player-document-info-players-document-selection-text\":\"styles_player-document-info-players-document-selection-text__38IoQ\",\"player-document-info-players-document-selection\":\"styles_player-document-info-players-document-selection__9Gva_\",\"player-document-info-players-document-details-labels-container\":\"styles_player-document-info-players-document-details-labels-container__3VwMa\",\"player-document-info-players-document-details-labels-text-upload-date\":\"styles_player-document-info-players-document-details-labels-text-upload-date__wJNzD\",\"player-document-info-players-document-details-labels-text\":\"styles_player-document-info-players-document-details-labels-text__Ccma0\",\"document-image-outer-container-hr\":\"styles_document-image-outer-container-hr__2emke\",\"player-document-info-players-document-details-content-container\":\"styles_player-document-info-players-document-details-content-container__1wpyS\",\"player-document-info-players-document-details-content-text-upload-date\":\"styles_player-document-info-players-document-details-content-text-upload-date__2XZEU\",\"player-document-info-players-document-details-content-text\":\"styles_player-document-info-players-document-details-content-text__1Y9uK\",\"player-document-info-players-document-details-content-select\":\"styles_player-document-info-players-document-details-content-select__3wqc3\",\"player-document-info-players-document-details-content-delete\":\"styles_player-document-info-players-document-details-content-delete__1vRx5\",\"player-document-info-players-document-details-content-button-hide-show\":\"styles_player-document-info-players-document-details-content-button-hide-show__2eY0V\",\"document-image-container\":\"styles_document-image-container__2I2Wv\",\"document-image-src-container\":\"styles_document-image-src-container__1vjOs\",\"document-image-src-controll-container\":\"styles_document-image-src-controll-container__1Qy6o\",\"rotateimg0\":\"styles_rotateimg0__2wCA7\",\"rotateimg90\":\"styles_rotateimg90__hrHhb\",\"rotateimg180\":\"styles_rotateimg180__1Zd_a\",\"rotateimg270\":\"styles_rotateimg270__1-J4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"document-image-pop-up-outer-container\":\"styles_popup_box_document-image-pop-up-outer-container__2j7W4\",\"document-image-pop-up-container\":\"styles_popup_box_document-image-pop-up-container__2E_sp\",\"document-image-container\":\"styles_popup_box_document-image-container__1ICf9\",\"document-image-src-container\":\"styles_popup_box_document-image-src-container__37Y3q\",\"document-image-src-controll-container\":\"styles_popup_box_document-image-src-controll-container__2nDg7\",\"document-image-pop-up-actions\":\"styles_popup_box_document-image-pop-up-actions__19NHb\",\"document-image-pop-up-actions-radio-buttons-container\":\"styles_popup_box_document-image-pop-up-actions-radio-buttons-container__3tsje\",\"document-image-pop-up-actions-radio-select-container\":\"styles_popup_box_document-image-pop-up-actions-radio-select-container__2D9ry\",\"document-image-pop-up-actions-radio-container\":\"styles_popup_box_document-image-pop-up-actions-radio-container__M9N8J\",\"player-document-info-players-document-details-content-select\":\"styles_popup_box_player-document-info-players-document-details-content-select__3gzqT\",\"player-document-info-players-document-details-content-button-hide-show\":\"styles_popup_box_player-document-info-players-document-details-content-button-hide-show__K_hSy\",\"rotateimg0\":\"styles_popup_box_rotateimg0__31a-j\",\"rotateimg90\":\"styles_popup_box_rotateimg90__2nyKG\",\"rotateimg180\":\"styles_popup_box_rotateimg180__2ZF2s\",\"rotateimg270\":\"styles_popup_box_rotateimg270__KunUq\"};","module.exports = __webpack_public_path__ + \"static/media/me.f1c533ae.png\";","import React from 'react';\r\n\r\nfunction Notfound() {\r\n  return (    \r\n    <div>\t\r\n      Page Not found \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\r\nimport './iconStyle.css';\r\n\r\nconst MassLogoIcon = (props) => {\r\n    return (\r\n        <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"210px\" height=\"70px\" viewBox=\"0 0 686.000000 223.000000\"\r\n preserveAspectRatio=\"xMidYMid meet\">\r\n\r\n<g transform=\"translate(0.000000,223.000000) scale(0.100000,-0.100000)\"\r\nfill=\"#173E67\" stroke=\"none\">\r\n<path d=\"M5519 2211 c-74 -14 -146 -60 -266 -173 l-52 -48 -2548 -1 c-1947 0\r\n-2556 -3 -2583 -12 -24 -8 -41 -23 -52 -47 -17 -32 -18 -84 -18 -648 0 -672\r\n-1 -666 59 -696 27 -14 269 -16 2408 -16 1308 0 2383 -4 2390 -8 6 -4 40 -45\r\n75 -92 123 -164 217 -285 252 -325 l35 -40 94 0 c111 0 108 -2 200 119 84 110\r\n95 120 113 105 8 -6 38 -46 68 -88 29 -42 70 -92 91 -110 l38 -33 158 4 c180\r\n3 191 8 244 93 17 26 44 63 60 83 28 30 38 35 97 41 79 8 94 20 150 114 53 88\r\n83 112 149 121 63 8 116 31 129 56 17 32 42 242 37 319 -5 88 -25 213 -40 255\r\n-9 25 -94 145 -193 274 -15 19 -40 42 -58 53 -88 54 -226 -15 -226 -112 0 -67\r\n15 -93 170 -287 72 -91 69 -115 -46 -288 -95 -145 -220 -238 -356 -266 -102\r\n-21 -208 14 -264 88 -38 49 -44 91 -27 186 28 157 9 208 -152 427 -116 158\r\n-122 178 -86 250 22 43 64 82 149 139 132 90 158 151 150 347 -7 141 -21 176\r\n-79 199 -51 20 -200 29 -270 17z m229 -124 c26 -27 27 -31 26 -130 -1 -56 -6\r\n-114 -12 -129 -6 -15 -40 -49 -74 -75 -99 -75 -212 -189 -236 -237 -43 -85\r\n-22 -150 98 -306 157 -205 173 -243 147 -359 -23 -102 -21 -143 9 -203 31 -61\r\n115 -147 170 -173 55 -26 165 -31 241 -11 103 26 228 94 305 165 80 74 190\r\n233 219 317 31 88 17 125 -98 262 -29 34 -69 87 -89 117 -32 48 -36 59 -26 80\r\n15 32 55 42 87 21 14 -9 46 -49 72 -89 25 -40 65 -98 90 -130 46 -62 54 -88\r\n73 -243 12 -99 2 -215 -24 -278 -15 -35 -18 -37 -116 -52 -53 -8 -94 -47 -152\r\n-143 -40 -65 -64 -81 -124 -81 -19 0 -47 -6 -62 -14 -31 -16 -117 -102 -157\r\n-155 -14 -19 -31 -38 -37 -43 -20 -12 -194 -9 -223 4 -27 12 -108 114 -164\r\n205 -28 46 -37 53 -64 53 -43 0 -46 -3 -114 -95 -139 -187 -187 -216 -256\r\n-156 -34 30 -152 179 -265 334 -29 39 -63 85 -75 100 l-22 28 -2363 -1 c-1787\r\n0 -2368 3 -2385 12 -47 25 -46 12 -47 600 l0 556 31 26 31 26 2540 0 2540 0\r\n66 63 c87 81 165 145 194 157 13 5 67 9 121 7 91 -3 99 -5 125 -30z\"/>\r\n<path d=\"M210 1620 l0 -90 70 0 70 0 2 -312 3 -313 103 -3 102 -3 0 316 0 315\r\n50 0 50 0 2 -312 3 -313 102 -3 103 -3 2 163 3 163 85 0 85 0 3 -163 2 -163\r\n98 3 97 3 3 403 2 402 -100 0 -100 0 0 -145 0 -145 -90 0 -90 0 0 145 0 145\r\n-330 0 -330 0 0 -90z\"/>\r\n<path d=\"M1880 1305 l0 -405 200 0 200 0 0 66 0 66 49 -36 c88 -65 134 -80\r\n241 -80 131 0 192 24 281 113 89 89 113 150 114 281 0 83 -4 103 -28 154 -15\r\n32 -27 60 -27 62 0 2 27 4 60 4 l60 0 0 -315 0 -315 100 0 100 0 0 315 0 315\r\n85 0 85 0 0 -315 0 -316 98 3 97 3 3 313 2 312 65 0 65 0 0 90 0 90 -420 0\r\n-420 0 0 -75 c0 -41 -2 -75 -4 -75 -2 0 -21 16 -42 36 -22 20 -68 51 -104 68\r\n-59 28 -73 31 -165 31 -92 0 -106 -3 -167 -32 -136 -64 -218 -187 -226 -338\r\n-4 -76 5 -122 43 -207 6 -16 0 -18 -69 -18 l-76 0 0 305 0 305 -100 0 -100 0\r\n0 -405z m799 167 c64 -39 94 -98 89 -178 -7 -109 -73 -175 -182 -182 -80 -5\r\n-139 25 -180 91 -59 95 -26 225 69 275 72 37 134 35 204 -6z\"/>\r\n<path d=\"M3760 1310 l0 -400 220 0 221 0 -3 93 -3 92 -117 3 -118 3 0 64 0 65\r\n120 0 120 0 0 95 0 95 -120 0 -120 0 0 55 0 55 120 0 120 0 0 90 0 90 -220 0\r\n-220 0 0 -400z\"/>\r\n<path d=\"M4232 1308 l3 -403 103 -3 102 -3 0 116 c0 63 3 115 8 115 4 -1 41\r\n-51 82 -113 l75 -112 123 -3 c67 -1 122 0 122 3 0 3 -40 62 -90 131 -49 69\r\n-90 129 -90 132 1 4 24 21 53 37 66 38 117 128 117 206 0 28 4 48 9 45 4 -3\r\n30 -54 57 -113 l49 -108 5 -165 5 -165 108 -3 107 -3 0 161 0 161 106 232 c58\r\n128 108 238 111 245 4 9 -19 12 -93 12 l-99 0 -65 -125 c-36 -69 -67 -125 -70\r\n-125 -3 0 -32 56 -64 125 l-59 125 -104 0 c-115 0 -109 4 -85 -59 3 -9 -9 -4\r\n-29 11 -53 41 -99 48 -307 48 l-192 0 2 -402z m322 212 c33 -12 66 -66 66\r\n-106 0 -61 -60 -104 -147 -104 l-33 0 0 110 0 110 44 0 c25 0 56 -4 70 -10z\"/>\r\n<path d=\"M1292 1303 l3 -398 220 0 220 0 3 93 3 92 -121 0 -120 0 0 65 0 65\r\n120 0 120 0 0 95 0 94 -122 3 -123 3 0 55 0 55 123 3 122 3 0 84 0 85 -225 0\r\n-225 0 2 -397z\"/>\r\n</g>\r\n</svg>\r\n    )\r\n}\r\n\r\nexport default MassLogoIcon;\r\n","import React from \"react\";\r\nimport './header.css';\r\nimport MassLogoIcon from \"../icons/MassLogoIcon\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='app-header'>\r\n            <MassLogoIcon />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","export const UserActionCategory = {\r\n    PAGE_VIEW: 'Page View',\r\n    TAB_VIEW: 'Tab View',\r\n    API_CALL: 'API Call',\r\n    BUTTON_CLICK: 'Button Click',\r\n    FILTER_RESULTS: 'Filter Results'\r\n}\r\n\r\nexport const UserAction = {\r\n    LOGIN:'Login',\r\n    LOGOUT:'Logout',\r\n    RESET_USER_PASSWORD:'Reset User Password',\r\n    ADD_USER:'Add User',\r\n    EDIT_USER:'Edit User',\r\n    UPDATE_USER:'Update User',\r\n    DEACTIVATE_USER:'Deactivate User',\r\n    DELETE_USER:'Delete User',\r\n    USER_AUDIT_HISTORY_PAGE:'User Audit History Page',\r\n    USER_ACTION_HISTORY_SEARCH:'User Action History Search',\r\n    EDIT_ROLE:'Edit Role',\r\n    UPDATE_ROLE:'Update Role',\r\n    DELETE_ROLE:'Delete Role',\r\n    ADD_ROLE:'Add Role',\r\n    SEARCH_PLAYER:'Search Player',\r\n    PLAYER_DETAILS:'Player Details',\r\n    UPDATE_PLAYER_PROFILE:'Update Player Profile',\r\n    RESET_PLAYER_PASSWORD:'Reset Player Password',\r\n    UNLOCK_PLAYER:'Unlock Player',\r\n    LOCK_PLAYER:'Lock Player',\r\n    VERIFY_PLAYER:'Verify Player',\r\n    LAUNCH_EXPERIAN:'Launch Experian',\r\n    TICKET_HISTORY:'Ticket History',\r\n    EVENT_HISTORY:'Event History',\r\n    SEARCH_TICKET_HISTORY:'Search Ticket History',\r\n    PLAYER_REPORTS_LOCKED_ACCOUNTS:'Player Reports - Locked Accounts',\r\n    PLAYER_REPORTS_IDOLOGY_FAILED_STATUS:'Player Reports - Idology Failed Status',\r\n    PLAYER_REPORTS_NO_IDOLOGY_STATUS:'Player Reports - No Idology Status',\r\n    CUSTOM_PLAYER_REPORT:'Custom Player Report',\r\n    DOWNLOAD_PLAYER_REPORT:'Download Player Report',\r\n    PRINT_PLAYER_REPORT:'Print Player Report',\r\n    SEARCH_CLAIM:'Search Claim',\r\n    READ_ONLY_CLAIM_DETAILS:'Read-Only Claim Details',\r\n    UPDATE_CLAIM:'Update Claim',\r\n    PLAYER_MAINTENANCE:'Player Maintenance',\r\n    PLAYER_SERVICE_REPORTS:'Player Service Reports',\r\n    CLAIM_SUPPORT:'Claim Support',\r\n    PLAYER_SUPPORT:'Player Support',\r\n    SYSTEM_DASHBOARD:'System Dashboard',\r\n    USER_MANAGEMENT:'User Management',\r\n    ROLE_MANAGEMENT:'Role Management',\r\n    LOCK_UNLOCK_PLAYER:'Lock Unlock Player',\r\n    FREQUENT_CASHER:'Frequent Casher',\r\n    CONFIRM_PLAYER_EMAIL:'Confirm Player Email',\r\n    VIEW_CLAIMS:'View Claims',\r\n    CLAIM_DETAILS:'Claim Details',\r\n    VIEW_PAYMENT_DETAILS:'View Payment Details',\r\n    SUBMIT_PAYMENT_DETAILS:'Submit Payment',\r\n    VIEW_W2G:\"View W2G\",\r\n    ACH_ACTIVITY:\"ACH Activity\",\r\n    ACH_BATCH_DETAILS:\"ACH Batch Details\",\r\n    SHOW_BATCH_FILE_PII:\"Show Batch File PII\",\r\n    SHOW_REJECT_FILE_PII:\"Show Reject File PII\",\r\n    VIEW_REJECTED_CLAIMS:\"View Rejected Claims Queue\",\r\n    VIEW_ESIGNAURE: \"View E-Signature\",\r\n    VIEW_ESIGNAURE_FAILED: \"View E-Signature Failed\",\r\n    VIEW_ESIGNAURE_EXPIRED: \"View E-Signature Expired\",\r\n\r\n}","export function checkRenderPermissions(str, permissions) {\r\n\r\n    if (permissions) {\r\n        for (var i = 0, j = permissions.length; i < j; i++) {\r\n            for (var key in permissions[i]) {\r\n                if (permissions[i][key] == str) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","export const permissions = {\r\n    PROCESS_CLAIMS:\"Can process Claims\",\r\n    UPDATE_CLAIMS:\"Can update Claims\",\r\n    DO_CLAIM_RESEARCH:\"Can do Claim Research\",\r\n    CAN_SEE_REJECT_CLAIMS:\"Can see Rejected Claims\",\r\n    CAN_SEE_REJECT_CLAIMS_DETAILS:\"Can see Rejected Claims Details\",\r\n    CAN_SEE_CHECK_REQUEST_CLAIMS:\"Can see Check Request\",\r\n    SEE_CLAIM_REPORTS_QUERIES:\"Can see Claim Reports/Queries\",\r\n    SEE_PLAYER_SUPPORT:\"Can see Player Support*\",\r\n    SEE_PLAYER_VERIFICATION:\"Can see Player Verification Services\",\r\n    RESET_PLAYER_PASSWORD:\"Can reset Player password\",\r\n    UNLOCK_PLAYER_ACCOUNT:\"Can unlock Player account\",\r\n    ENABLE_PLAYER_SCANS:\"Can enable Player scans\",\r\n    SEE_PLAYER_SERVICE_REPORTS:\"Can see Player Service Reports\",\r\n    UPDATE_PLAYER:\"Can Update Player Profile\",\r\n    SEE_CLAIM_SUPPORT:\"Can see Claim Support*\",\r\n    CAN_SEE_TICKET_STATUS_CLAIMED_CLAIM_REPORT:\"Can see Ticket Status Claimed Claim Report\",\r\n    CAN_SEE_DRAW_DATE_7_DAYS_CLAIM_REPORT:\"Can see Draw Date 7 Days Claim Report\",\r\n    CAN_SEE_DRAW_DATE_30_DAYS_CLAIM_REPORT:\"Can see Draw Date 30 Days Claim Report\",\r\n    CAN_SEE_CUSTOM_CLAIM_REPORT:\"Can see Custom Claim Report\",\r\n    CAN_SEE_SYSTEM_SUPPORT:\"Can see System*\",\r\n    CAN_SEE_PLAYER_TICKET_HISTORY:\"Can see Player Ticket History\",\r\n    CAN_SEE_PLAYER_EVENT_HISTORY:\"Can see Player Event History\",\r\n    CAN_SEE_USER_AUDIT_ACTIONS:\"Can see User Audit Actions\",\r\n    CAN_ACCESS_SECURITY_MODULE:\"Can access Security Module*\",\r\n    CAN_ACCESS_FREQUENT_CASHER_MODULE:\"Can access Frequent Casher Module\",\r\n    CAN_ACCESS_FINANCE_PAYMENTS_MODULE:\"Can access Finance & Payments module*\",\r\n    CAN_ACCESS_ANALYTICS_MODULE:\"Can access Analytics module*\",\r\n    CAN_ACCESS_USER_MANAGEMENT:\"Can access User Management*\",\r\n    CAN_CREATE_USER_ACCOUNT:\"Can create User account\",\r\n    CAN_EDIT_USER_ACCOUNT:\"Can edit User account\",\r\n    CAN_RESET_USER_PASSWORD:\"Can reset User password\",\r\n    CAN_DEACTIVATE_USER_ACCOUNT:\"Can deactivate User account\",\r\n    CAN_REACTIVATE_USER_ACCOUNT:\"Can reactivate User account\",\r\n    CAN_DELETE_USER_ACCOUNT:\"Can delete User account\",\r\n    CAN_ACCESS_ROLE_MANAGEMENT:\"Can access Role Management*\",\r\n    CAN_UNLOCK_USER_ACCOUNT:\"Can Unlock User account\",\r\n    CAN_ADD_ROLE:\"Can add Role\",\r\n    CAN_EDIT_ROLE:\"Can edit Role\",\r\n    CAN_DELETE_ROLE:\"Can delete Role\",\r\n    CAN_UPDATE_PLAYER_SSN:\"Can update Player SSN\",\r\n    CAN_CONFIRM_PLAYER_EMAIL:\"Can confirm Player Email\",\r\n    CAN_ACCESS_SETTINGS:\"Can access Settings*\",\r\n    CAN_SEE_MFA_BYPASS_RULES:\"Can see MFA Bypass Rules\",\r\n    CAN_EDIT_MFA_BYPASS_RULES:\"Can edit MFA Bypass Rules\",\r\n    CAN_VIEW_DOWNLOAD_ADMINISTRATOR_USER_GUIDE:\"Can view/download Administrator User Guide\",\r\n    CAN_VIEW_DOWNLOAD_PLAYER_SUPPORT_USER_GUIDE:\"Can view/download Player Support User Guide\",\r\n    CAN_VIEW_DOWNLOAD_ANDROID_APP_USER_GUIDE:\"Can view/download Android App User Guide\",\r\n    CAN_VIEW_DOWNLOAD_TROUBLESHOOTING_GUIDE:\"Can view/download Troubleshooting Guide\",\r\n    CAN_VIEW_DOWNLOAD_TECHNICAL_DOCUMENTATION:\"Can view/download Technical Documentation\",\r\n    CAN_SEE_CLAIMS:\"Can see Claims\",\r\n    CAN_SEE_CLAIM_DETAILS:\"Can see Claim Details\",\r\n    CAN_SEE_CLAIM_W2G:\"Can see Claim W2G Form\",\r\n    CAN_RESUBMIT_PAYMENT:\"Can Resubmit Payment\",\r\n    CAN_SEE_ACH_ACTIVITY:\"Can see ACH Activity\",\r\n    CAN_SEE_DAILY_RECONCILIATION:\"Can see Daily Reconciliation Report\",\r\n    CAN_SEE_BATCH_REJECT_FILE_DETAILS:\"Can see Batch/Reject file details\",\r\n    CAN_SEE_BATCH_MASKED_DETAIL:\"Can see Batch Masked PII details\",\r\n    CAN_SEE_REJECT_MASKED_DETAIL:\"Can see Reject Masked PII details\",\r\n    CAN_SEE_CLAIM_TRANSACTION_DETAILS:\"Can see Claim Transaction History details\",\r\n    CAN_SEE_CLAIM_TRANSACTION_PII:\"Can see Claim Transaction Account Information\",\r\n    CAN_SEE_E_SIGNATURE:\"Can see E-Signature\",\r\n}\r\n\r\nexport const timeOfDayFormat = 'HH:mm';","import React from \"react\";\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport './sidebar.css';\r\nimport dotenv from 'dotenv'\r\nimport {inject} from \"mobx-react\";\r\nimport {checkRenderPermissions} from \"../helpers\";\r\nimport {permissions} from \"../constants\";\r\n\r\ndotenv.config()\r\n\r\n@inject('playerStore', 'authStore')\r\nclass Sidebar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAdminMenuOpen: false,\r\n            isKnowledgeBaseMenuOpen: false\r\n        }\r\n    }\r\n\r\n    navigateToHome = () => {\r\n        localStorage.clear();\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleAdminMenuItemClick = (event, path) => {\r\n        event.preventDefault();\r\n        if (path === 'logout') {\r\n            this.props.authStore.logout(this.props);\r\n        } else {\r\n\r\n            if (path === '/usermanagement')\r\n                this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.USER_MANAGEMENT);\r\n            else if (path === '/rolemanagement')\r\n                this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.ROLE_MANAGEMENT);\r\n\r\n            this.props.history.push(path);\r\n        }\r\n\r\n    }\r\n\r\n    handleKnowledgeBaseMenuItemClick = (event, path) => {\r\n        event.preventDefault();\r\n        if (path === 'administratoruserguide') {\r\n            this.toggleKnowledgeBaseMenu()\r\n            this.props.playerStore.downloadPDF(path)\r\n        } else if (path === 'playersupportuserguide') {\r\n            this.toggleKnowledgeBaseMenu()\r\n            this.props.playerStore.downloadPDF(path)\r\n        } else if (path === 'androidappuserguide') {\r\n            this.toggleKnowledgeBaseMenu()\r\n            this.props.playerStore.downloadPDF(path)\r\n        } else if (path === 'troubleshootingguide') {\r\n            this.toggleKnowledgeBaseMenu()\r\n            this.props.playerStore.downloadPDF(path)\r\n        } else if (path === 'technicaldocumentation') {\r\n            this.toggleKnowledgeBaseMenu()\r\n            this.props.playerStore.downloadPDF(path)\r\n        }\r\n    }\r\n\r\n    toggleAdminMenu = () => {\r\n        this.setState(prevState => ({isAdminMenuOpen: !prevState.isAdminMenuOpen, isKnowledgeBaseMenuOpen: false}))\r\n    }\r\n\r\n    toggleKnowledgeBaseMenu = () => {\r\n        this.setState(prevState => ({\r\n            isKnowledgeBaseMenuOpen: !prevState.isKnowledgeBaseMenuOpen,\r\n            isAdminMenuOpen: false\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {isAdminMenuOpen, isKnowledgeBaseMenuOpen} = this.state\r\n        return (\r\n            <div className='sidebar-menu'>\r\n\r\n                <div className=\"dd-wrapper\">\r\n                    <div className=\"dd-header\" onClick={() => this.toggleAdminMenu()}>\r\n                        <div className=\"dd-header-title\">\r\n                            <img src='/icons/admin.png'/>\r\n                            <div className='dd-label'>Admin</div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        isAdminMenuOpen &&\r\n                        <div className=\"dd-list\">\r\n                            {checkRenderPermissions(permissions.CAN_ACCESS_USER_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-item\"\r\n                                     onClick={event => this.handleAdminMenuItemClick(event, \"/usermanagement\")}>\r\n                                    User Management\r\n                                </div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_ACCESS_ROLE_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-item\"\r\n                                     onClick={event => this.handleAdminMenuItemClick(event, \"/rolemanagement\")}>\r\n                                    Role Management\r\n                                </div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_ACCESS_SETTINGS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-item\"\r\n                                     onClick={event => this.handleAdminMenuItemClick(event, \"/admin/settings\")}>\r\n                                    Settings\r\n                                </div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_ACCESS_USER_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                            checkRenderPermissions(permissions.CAN_ACCESS_ROLE_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                            checkRenderPermissions(permissions.CAN_ACCESS_SETTINGS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <hr className='separator'/> : null}\r\n                            <div className=\"dd-list-item\"\r\n                                 onClick={event => this.handleAdminMenuItemClick(event, \"logout\")}>\r\n                                Logout\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className=\"dd-header\" onClick={() => this.toggleKnowledgeBaseMenu()}>\r\n                        {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_ADMINISTRATOR_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                        checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_PLAYER_SUPPORT_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                        checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_ANDROID_APP_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                        checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_TROUBLESHOOTING_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                        checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_TECHNICAL_DOCUMENTATION, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                            <div className=\"dd-header-title\">\r\n                                <img src='/icons/knowledge-base.svg'/>\r\n                                <div className='dd-label'>Knowledge Base</div>\r\n                            </div> : null}\r\n                    </div>\r\n                    {\r\n                        isKnowledgeBaseMenuOpen && <div className=\"dd-list\">\r\n                            {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_ADMINISTRATOR_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                            checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_PLAYER_SUPPORT_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                            checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_ANDROID_APP_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-item-header\" disabled>User Guides</div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_ADMINISTRATOR_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-sub-item\"\r\n                                     onClick={event => this.handleKnowledgeBaseMenuItemClick(event, \"administratoruserguide\")}>\r\n                                    Administrator User Guide\r\n                                </div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_PLAYER_SUPPORT_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-sub-item\"\r\n                                     onClick={event => this.handleKnowledgeBaseMenuItemClick(event, \"playersupportuserguide\")}>\r\n                                    Player Support User Guide\r\n                                </div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_ANDROID_APP_USER_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-sub-item\"\r\n                                     onClick={event => this.handleKnowledgeBaseMenuItemClick(event, \"androidappuserguide\")}>\r\n                                    Android App User Guide\r\n                                </div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_TROUBLESHOOTING_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ||\r\n                            checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_TECHNICAL_DOCUMENTATION, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-item-header\" disabled>Other</div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_TROUBLESHOOTING_GUIDE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-sub-item\"\r\n                                     onClick={event => this.handleKnowledgeBaseMenuItemClick(event, \"troubleshootingguide\")}>\r\n                                    Troubleshooting Guide\r\n                                </div> : null}\r\n                            {checkRenderPermissions(permissions.CAN_VIEW_DOWNLOAD_TECHNICAL_DOCUMENTATION, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                <div className=\"dd-list-sub-item\"\r\n                                     onClick={event => this.handleKnowledgeBaseMenuItemClick(event, \"technicaldocumentation\")}>\r\n                                    Technical Documentation\r\n                                </div> : null}\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"img-wrapper\">\r\n                    <img src=\"/images/lottery_numbers_blue.png\"></img>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport './backArrow.css'\r\n\r\nconst BackArrow = (props) => {\r\n    return <svg width=\"60px\" height=\"50px\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-left\" fill={props.color || '#000000'}\r\n         xmlns=\"http://www.w3.org/2000/svg\" onClick={props.onClick}>\r\n        <path fill-rule=\"evenodd\"\r\n              d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\"/>\r\n        <path fill-rule=\"evenodd\" d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n    </svg>\r\n};\r\n\r\nexport default BackArrow;\r\n","import React from \"react\";\r\nimport './AppToast.css'\r\nimport {Toast} from \"react-bootstrap\";\r\n\r\nclass AppToast extends React.Component {\r\n\r\n    render() {\r\n        const {showToast, message, isSuccessMessage, handleClose} = this.props;\r\n        const className = isSuccessMessage ? 'success-message' : 'error-message'\r\n        return (\r\n            <div aria-live=\"polite\" aria-atomic=\"true\" className={`${className} custom-toast`}>\r\n                <div>\r\n                    <Toast onClose={() => handleClose()} show={showToast} delay={5000} autohide>\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>few seconds ago</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppToast;\r\n","import React from \"react\";\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='app-spinner text-secondary'>\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Toast} from 'react-bootstrap';\r\nimport Header from \"../Header/header\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport './AuthLayoutHOC.css';\r\nimport BackArrow from \"../components/Icons/backArrow\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport AppToast from \"../toast\";\r\nimport Spinner from \"../Spinner\";\r\nimport config from \"../config\";\r\n\r\n\r\nconst AuthLayoutHOC = (WrappedComponent) => {\r\n\r\n    @inject('playerStore', 'claimStore', 'authStore', 'miscellaneousStore')\r\n    @observer\r\n    class HOC extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                isUpdate: false,\r\n                showBackConfirm: false,\r\n            }\r\n        }\r\n\r\n        onBackButtonClick = () => {\r\n            if (this.state.isUpdate) {\r\n                this.setState({showBackConfirm: true});\r\n            } else {\r\n                this.props.playerStore.clearTicketHistorySearchResults()\r\n                this.props.playerStore.clearUserAuditActionSearchResults()\r\n                this.props.playerStore.clearEventHistorySearchResults()\r\n                this.props.history.goBack();\r\n            }\r\n        }\r\n\r\n        onHomeButtonClick = () => {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n        handleUpdate = (flag) => {\r\n            this.setState({isUpdate: flag});\r\n        }\r\n\r\n        handlePopup = (flag) => {\r\n            flag ? this.props.history.goBack() : this.setState({showBackConfirm: false});\r\n        }\r\n\r\n        handleToastClose = () => {\r\n            this.props.playerStore.setToastErrorSuccessMessage(false, '', '');\r\n            this.props.claimStore.resetToast();\r\n        }\r\n        toggleCronJobToast = (details) => {\r\n            this.props.miscellaneousStore.toggleNotification(details)\r\n        }\r\n        handleDetailViewClick = (event, details) => {\r\n            alert('Details page under construction');\r\n        }\r\n\r\n        render() {\r\n            const customWidth = `${window.outerWidth - 255}px`;\r\n            const customStyle = {width: customWidth}\r\n            const {showBackConfirm} = this.state;\r\n            const {showMainToast, mainErrorMessage, mainSuccessMessage, isSpinnerLoading} = this.props.playerStore;\r\n            const {isLoading, selectedBatchId, selectedRejectReferenceNumber, showToast, errorMessage, successMessage} = this.props.claimStore;\r\n            const {showNotificationToast, notificationErrorList} = this.props.miscellaneousStore;\r\n            let title = this.props.title || 'Title'\r\n            if (this.props.history.location.pathname.startsWith('/player/hub')) {\r\n                title = this.props.playerStore.titleText || 'Title';\r\n            } else if (this.props.history.location.pathname.startsWith('/user/audit')) {\r\n                title = this.props.playerStore.UserNameTitleText || 'Title';\r\n            } else if (this.props.history.location.pathname.startsWith(`/claim/${this.props.playerStore.selectedClaimId}/paymenthistory`)) {\r\n                title = `Transaction ${this.props.playerStore.paymentDetails.transactionId}`;\r\n            } else if (this.props.history.location.pathname.startsWith(`/claim/${this.props.playerStore.selectedClaimId}`)) {\r\n                title = `Claim ${this.props.playerStore.selectedClaimId}`;\r\n            } else if (this.props.history.location.pathname.startsWith('/finance/claims/batch/details')) {\r\n                title = `Batch ${selectedBatchId}`;\r\n            } else if (this.props.history.location.pathname.startsWith('/finance/claims/reject/details')) {\r\n                title = `Reject File ${selectedRejectReferenceNumber}`;\r\n            }\r\n            return (\r\n                <div className='auth-app'>\r\n                    <Header/>\r\n                    {isSpinnerLoading || isLoading ? <Spinner /> : null}\r\n                    {notificationErrorList && notificationErrorList.length\r\n                        ? <div\r\n                            className='cron-job-toast'\r\n                        >\r\n                            {\r\n                                notificationErrorList.map((item, index) => {\r\n                                    return <Toast show={showNotificationToast} onClose={() => this.toggleCronJobToast(item)} key={index}>\r\n                                        <Toast.Header>\r\n                                            <strong className=\"mr-auto\">{item.title}</strong>\r\n                                        </Toast.Header>\r\n                                        <Toast.Body>\r\n                                            <div>{item.errorMessage}</div>\r\n                                            <a onClick={(e) => this.handleDetailViewClick(e, item)} href='javascript:void(0)'>Click here for more details</a>\r\n                                        </Toast.Body>\r\n                                    </Toast>\r\n                                })\r\n                            }\r\n\r\n                        </div>\r\n                        : null\r\n                    }\r\n                    <div className='auth-app-sidebar'>\r\n                        <div className='auth-app-sidebar-wrapper'>\r\n                            <div className='home-button'>\r\n                                <div className=\"home-button-header\"/*onClick={() => this.toggleList()}*/>\r\n                                    <div className=\"dd-header-title\">\r\n                                        <img src='/icons/home-Icon.svg' onClick={() => this.onHomeButtonClick()}/>\r\n                                        <div className='dd-label' onClick={() => this.onHomeButtonClick()}>Home</div>\r\n                                        {/*{listOpen*/}\r\n                                        {/*    ? <FaAngleUp />*/}\r\n                                        {/*    : <FaAngleDown />*/}\r\n                                        {/*}*/}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <Sidebar {...this.props} />\r\n                            <div className=\"vertical-separator\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='auth-app-center-panel'>\r\n                        <div className='app-center-panel-wrapper'>\r\n                            {showMainToast ?\r\n                                <AppToast showToast={showMainToast}\r\n                                         message={mainSuccessMessage ? mainSuccessMessage : mainErrorMessage}\r\n                                         isSuccessMessage={mainSuccessMessage !== null}\r\n                                         handleClose={() => this.handleToastClose()}/> : null}\r\n                             {showToast ?\r\n                                <AppToast showToast={showToast}\r\n                                         message={successMessage ? successMessage : errorMessage}\r\n                                         isSuccessMessage={successMessage !== null}\r\n                                         handleClose={() => this.handleToastClose()}/> : null}\r\n                            <div className='page-title'>\r\n                                <h2 className='title-text'>{title}</h2>\r\n                            </div>\r\n                            <div className='page-info-bar'>\r\n                                {\r\n                                    this.props.showBackButton\r\n                                        ? <div className='back-arrow'>\r\n                                            <BackArrow color='#FFFFFF' onClick={() => this.onBackButtonClick()}/>\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                            <WrappedComponent showBackConfirm={showBackConfirm} handlePopup={this.handlePopup}\r\n                                              onUpdate={this.handleUpdate} {...this.props}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n                ;\r\n        }\r\n    }\r\n\r\n    return HOC;\r\n\r\n};\r\n\r\nAuthLayoutHOC.defaultProps = {\r\n    showBackButton: true\r\n}\r\nAuthLayoutHOC.propTypes = {\r\n    showBackButton: PropTypes.bool\r\n}\r\nexport default AuthLayoutHOC;","import React from \"react\";\r\nimport './editIcon.css'\r\n\r\nconst EditIcon = (props) => {\r\n    return <svg\r\n        className=\"bi bi-pencil-square app-edit-icon\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 16 16\"\r\n        fill={props.color || '#000000'}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={props.onclick}\r\n    >\r\n        <path\r\n            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n        <path fill-rule=\"evenodd\"\r\n              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n    </svg>\r\n};\r\n\r\nexport default EditIcon;\r\n","import React from \"react\";\r\nimport './AppTextbox.css'\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nclass AppTextbox extends React.Component {\r\n\r\n    render() {\r\n        const {type, controlId, placeholder, value, disabled, onChange} = this.props;\r\n        return (\r\n            <Form.Group controlId={controlId} className=\"app-textbox\" >\r\n                <Form.Control type={type} placeholder={placeholder} value={value} disabled={disabled} onChange={onChange} {...this.props}/>\r\n            </Form.Group>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppTextbox;\r\n","import React from \"react\";\r\nimport './MyToast.css'\r\nimport {Toast} from \"react-bootstrap\";\r\n\r\nclass MyToast extends React.Component {\r\n\r\n    render() {\r\n        const {showToast, message, isSuccessMessage, handleClose} = this.props;\r\n        const className = isSuccessMessage ? 'success-msg' : 'error-msg'\r\n        return (\r\n            <div aria-live=\"polite\" aria-atomic=\"true\" className={`${className} my-toast`}>\r\n                <div>\r\n                    <Toast onClose={() => handleClose()} show={showToast} delay={5000} autohide>\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>few seconds ago</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyToast;\r\n","import React from \"react\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport './PaginatedTable.css';\r\n\r\nclass PaginatedTable  extends  React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableOffset: 1,\r\n            pageCount: 10\r\n        }\r\n    }\r\n    handleNextClick = () => {\r\n        const offset = this.state.tableOffset + 1;\r\n        this.setState({tableOffset: offset});\r\n    }\r\n    handlePrevClick = () => {\r\n        const offset = this.state.tableOffset - 1;\r\n        this.setState({tableOffset: offset});\r\n    }\r\n    handleNavigation = (e, navId) => {\r\n        e.preventDefault();\r\n        const _off = Number(navId);\r\n        this.setState({tableOffset: _off});\r\n    }\r\n    handleSelectChange = (event) => {\r\n        this.setState({pageCount: Number(event.target.value), tableOffset: 1})\r\n    }\r\n    render() {\r\n        const {tableHeader, rowData, header, handleColumnCLick, children, className} = this.props;\r\n        const totalRows = [];\r\n        const {tableOffset, pageCount} = this.state;\r\n        const rowCount = rowData.length;\r\n        if(rowCount > pageCount) {\r\n            const navigationLength = rowData.length / pageCount;\r\n            for(let i=0; i < navigationLength; i++) {\r\n                totalRows.push(i+1);\r\n            }\r\n        }\r\n        let tableRows = [];\r\n        if(rowCount) {\r\n            const lastIndex = tableOffset * pageCount;\r\n            const startIndex = lastIndex - pageCount;\r\n            tableRows = rowData.slice(startIndex, lastIndex)\r\n        }\r\n        let showNext = false;\r\n        let showPrev = false;\r\n        if(rowCount > pageCount * 5) {\r\n            showNext = true;\r\n            showPrev = true;\r\n        }\r\n\r\n        return (\r\n            rowData && rowData.length\r\n                ? <div className={`custom-table ${className || ''}`}>\r\n                    <div className='table-header-dropdown'>\r\n                        <label className='table-dropdown-label'>Show</label>\r\n                        <select value={pageCount} onChange={(e) => this.handleSelectChange(e)}>\r\n                            <option value='10' selected={pageCount === 10}>10</option>\r\n                            <option value='25' selected={pageCount === 25}>25</option>\r\n                            <option value='50' selected={pageCount === 50}>50</option>\r\n                            <option value='100' selected={pageCount === 100}>100</option>                            \r\n                            <option value='250' selected={pageCount === 250}>250</option>\r\n                        </select>\r\n                        <label className='table-dropdown-label'>Entries</label>\r\n                    </div>\r\n\r\n                    {header ? <div className='table-header'>{header}</div> : null}\r\n                    <Table className='app-table' >\r\n                        <thead>\r\n                        <tr>\r\n                            {\r\n                                tableHeader && tableHeader.map(header => {\r\n                                    return <th key={header.key} style={{width: header.width || '10%'}}>{header.label}</th>\r\n                                })\r\n                            }\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                        {\r\n                            tableRows && tableRows.map((row, index) => {\r\n                                return <tr key={index}>\r\n                                    {\r\n                                        tableHeader.map(column => {\r\n                                            return <td>{row[column.key]}</td>\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                    <nav aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination justify-content-end\">\r\n                            {totalRows && totalRows.length\r\n                                ?<li className={`page-item ${tableOffset === 1 ? 'disabled' : ''}`}>\r\n                                    <a className=\"page-link\" onClick={this.handlePrevClick}>Previous</a>\r\n                                </li>\r\n                                : null\r\n                            }\r\n                            {\r\n                              totalRows.map((r, index) => {\r\n                                    return <li\r\n                                        className={`page-item ${index +1 === tableOffset ? 'active': ''}`}\r\n                                        onClick={(e) => this.handleNavigation(e, index+1)}\r\n                                    >\r\n                                        <a className=\"page-link\" href=\"#\">\r\n                                            {index+1}\r\n                                        </a>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                            {totalRows && totalRows.length\r\n                                ?<li className={`page-item ${tableOffset === totalRows.length ? 'disabled': ''}`}>\r\n                                    <a className=\"page-link\" onClick={this.handleNextClick}>Next</a>\r\n                                </li>\r\n                                : null\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    {\r\n                        children || null\r\n                    }\r\n                </div>\r\n                : null\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaginatedTable;\r\n","import React from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport './ReactTable.css';\r\n\r\nclass ReactTable extends React.Component {\r\n\r\n    render() {\r\n        const columns = this.props.tableHeader.map(column => {\r\n            return {\r\n                dataField: column.key,\r\n                text: column.label,\r\n                classes: column.classes || ''\r\n            }\r\n        });\r\n        const products = this.props.rowData;\r\n        const header = this.props.header;\r\n        const noDataMessage = this.props.noDataMessage || 'Table is Empty';\r\n        const indication = () => noDataMessage;\r\n\r\n        const sizePerPageRenderer = ({\r\n                                         options,\r\n                                         currSizePerPage,\r\n                                         onSizePerPageChange\r\n                                     }) => (\r\n            <div className=\"btn-group\" role=\"group\">\r\n                {\r\n                    options.map((option) => {\r\n                        const isSelect = currSizePerPage === `${option.page}`;\r\n                        return (\r\n                            <button\r\n                                key={ option.text }\r\n                                type=\"button\"\r\n                                onClick={ () => onSizePerPageChange(option.page) }\r\n                                className={ `btn ${isSelect ? 'btn-secondary' : 'btn-warning'}` }\r\n                            >\r\n                                { option.text }\r\n                            </button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n        const options = {\r\n            // paginationSize: 5,\r\n            // pageStartIndex: 1,\r\n            // // alwaysShowAllBtns: true, // Always show next and previous button\r\n            // // withFirstAndLast: false, // Hide the going to First and Last page button\r\n            // // hideSizePerPage: true, // Hide the sizePerPage dropdown always\r\n            // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\r\n            firstPageText: 'First',\r\n            prePageText: 'Back',\r\n            nextPageText: 'Next',\r\n            lastPageText: 'Last',\r\n            // nextPageTitle: 'First page',\r\n            // prePageTitle: 'Pre page',\r\n            // firstPageTitle: 'Next page',\r\n            // lastPageTitle: 'Last page',\r\n            // showTotal: false,\r\n            sizePerPageRenderer,\r\n            disablePageTitle: true,\r\n            sizePerPageList: [{\r\n                text: '5', value: 5\r\n            }, {\r\n                text: '10', value: 10\r\n            }, {\r\n                text: '25', value: 25\r\n            }, {\r\n                text: 'All', value: products.length\r\n            }] // A numeric array is also available. the purpose of above example is custom the text\r\n        };\r\n        return (\r\n            <div className='react-table'>\r\n                {header ? <div className='table-header'>{header}</div> : null}\r\n                <BootstrapTable keyField='id'\r\n                            data={ products }\r\n                            columns={ columns }\r\n                            pagination={ paginationFactory(options) }\r\n                            bordered={false}\r\n                            classes={this.props.className}\r\n                            noDataIndication={ indication }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactTable;\r\n","import React from \"react\";\r\nimport {Button, Col, Form, Modal} from \"react-bootstrap\";\r\nimport './rolemanagement.css';\r\nimport EditIcon from \"../components/Icons/editIcon\";\r\nimport AppTextbox from \"../AppTextbox/index\"\r\nimport dotenv from 'dotenv'\r\nimport config from \"../config\";\r\nimport PaginatedTable from \"../PaginatedTable\";\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport MyToast from \"../MyToast\";\r\nimport {inject} from \"mobx-react\";\r\nimport {checkRenderPermissions} from \"../helpers\";\r\nimport {permissions} from \"../constants\";\r\nimport ReactTable from \"../PaginatedTable/ReactTable\";\r\n\r\ndotenv.config()\r\n\r\n@inject('playerStore', 'authStore')\r\nclass AddRole extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleInputChange = (event, stateName) => {\r\n        this.props.onInputChange(stateName, event.target.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {roleId, roleName, policies, isEditRole, onCheckboxClick} = this.props;\r\n\r\n        const tableHeader = [\r\n            {key: 'category', label: 'Module', width: '25%'},\r\n            {key: 'description', label: 'Policy', width: '30%'},\r\n            {key: 'allowed', label: 'Allowed', width: '25%'}\r\n        ];\r\n        const rowData = policies.map(p => {\r\n            p.allowed = <Form.Check checked={p.isAllowed} onClick={() => onCheckboxClick(p.id)}/>\r\n            return p;\r\n        });\r\n\r\n        return (\r\n            <div className='container'>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <AppTextbox controlId='formGroupRoleName'\r\n                                        placeholder='Role Name'\r\n                                        value={roleName}\r\n                                        onChange={(e) => this.handleInputChange(e, 'roleName')}\r\n                            />\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <ReactTable tableHeader={tableHeader} rowData={rowData} className='edit-role-table'/>\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nclass RoleManagement extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roleList: [],\r\n            showModal: false,\r\n            selectedId: 0,\r\n            roleId: '',\r\n            roleName: '',\r\n            policies: [],\r\n            isEditRole: false,\r\n            showConfirmPopup: false,\r\n            tableHeader: [\r\n                {key: 'roleid', label: 'Role ID'},\r\n                {key: 'rolename', label: 'Role Name'}\r\n            ],\r\n            showSuccess: false,\r\n            successMessage: '',\r\n            errorMessage: '',\r\n            showError: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // Call API to fetch roles\r\n        this.fetchAllRoles();\r\n    }\r\n\r\n    fetchAllRoles = () => {\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/allroles`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setRoles(res);\r\n            })\r\n            .catch((error) => {\r\n                alert('Error:', error);\r\n            });\r\n    }\r\n\r\n    setRoles(response) {\r\n        const roles = response;\r\n\r\n        let _tableHeader = JSON.parse(JSON.stringify(this.state.tableHeader));\r\n\r\n        if (checkRenderPermissions(permissions.CAN_EDIT_ROLE, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'edit') === -1) {\r\n                _tableHeader.push({key: 'edit', label: 'Edit'});\r\n            }\r\n            roles.forEach(role => role.edit =\r\n                <EditIcon color='#FFFFFF' onclick={() => this.handleEditRole(role.roleid, role.rolename)}/>)\r\n        }\r\n\r\n        this.setState({roleList: roles, tableHeader: _tableHeader});\r\n    }\r\n\r\n\r\n    showAddUserModal = () => {\r\n        this.setState({\r\n            showModal: true,\r\n            isEditRole: false,\r\n            roleId: 0,\r\n            roleName: '',\r\n            policies: '',\r\n        });\r\n    }\r\n\r\n    onAddRoleClick = (e) => {\r\n        e.preventDefault();\r\n        const {roleId, roleName, policies, roleList, isEditRole} = this.state;\r\n        const policyIds = policies.filter(policy => policy.isAllowed).map(p => p.id);\r\n        if (isEditRole) {\r\n            const xhrData = {roleid: roleId, policyids: policyIds, rolename: roleName};\r\n            const data = localStorage.getItem('userName');\r\n\r\n            const url = `${config.SERVER_BASE_URL}/v1/roles/update`;\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(xhrData),\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    this.setState({\r\n                        isEditRole: false,\r\n                        showModal: false,\r\n                        roleName: '',\r\n                        successMessage: res.message,\r\n                        showSuccess: true\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({errorMessage: error, showError: true})\r\n                });\r\n\r\n            fetch(`${config.SERVER_BASE_URL}/v1/users/querypolicies`, {\r\n                method: 'POST', // or 'PUT'\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({username: data}),\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res && res.error) {\r\n                        this.setState({errorMessage: res.error});\r\n                    } else {\r\n                        localStorage.setItem('userpolicies', JSON.stringify(res));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    this.setState({errorMessage: error.toString()});\r\n                });\r\n        } else {\r\n            const xhrData = {policyids: policyIds, rolename: roleName};\r\n            const url = `${config.SERVER_BASE_URL}/v1/roles/create`;\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(xhrData),\r\n            })\r\n                .then(res => {\r\n                    this.setState({\r\n                        policies: [],\r\n                        isEditRole: false,\r\n                        showModal: false,\r\n                        roleName: ''\r\n                    }, () => this.fetchAllRoles())\r\n                })\r\n                .catch((error) => {\r\n                    alert('Error:', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    onDelete = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showConfirmPopup: true});\r\n    }\r\n\r\n    handleInputChange = (stateName, value) => {\r\n        this.setState({[stateName]: value});\r\n    }\r\n    handleRoleChange = (role) => {\r\n        this.setState({roleId: role.roleId})\r\n    }\r\n    handleEditRole = (roleId, roleName) => {\r\n        const url = `${config.SERVER_BASE_URL}/v1/users/getpoliciesbyroleid?roleid=${roleId}`;\r\n        fetch(url, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setState({policies: res, isEditRole: true, showModal: true, roleName: roleName, roleId: roleId})\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error, showError: true})\r\n            });\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.EDIT_ROLE, roleName);\r\n    }\r\n    cancelDeleteRole = () => {\r\n        this.setState({showConfirmPopup: false});\r\n    }\r\n    deleteRole = () => {\r\n        const {roleId} = this.state;\r\n        //Delete API call\r\n\r\n        const xhrData = {roleid: roleId};\r\n\r\n        const url = `${config.SERVER_BASE_URL}/v1/roles/delete`;\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(xhrData),\r\n        })\r\n            .then(response => response.json())\r\n            .then((res) => {\r\n                if (res.error) {\r\n                    this.setState({\r\n                        isEditRole: false, showModal: false, roleName: '', roleId: '', showConfirmPopup: false,\r\n                        errorMessage: res.error, showError: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        successMessage: res.message, showSuccess: true,\r\n                        isEditRole: false, showModal: false, roleName: '', roleId: '', showConfirmPopup: false\r\n                    }, () => this.fetchAllRoles());\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error, showError: true})\r\n            });\r\n\r\n    }\r\n\r\n    onCheckboxClick = policyId => {\r\n        let _policies = this.state.policies;\r\n        _policies.forEach(p => delete p.allowed);\r\n        _policies = JSON.parse(JSON.stringify(_policies));\r\n        // const roleId = this.state.roleId;\r\n        // const selectedRole = _rolesList.find(role => role.roleid === roleId);\r\n        const selectedPolicy = _policies.find(policy => policy.id === policyId);\r\n        selectedPolicy.isAllowed = !selectedPolicy.isAllowed;\r\n        this.setState({policies: _policies});\r\n    }\r\n    addRole = () => {\r\n        const url = `${config.SERVER_BASE_URL}/v1/users/allpolicies`;\r\n        fetch(url, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                res.forEach(p => p.isAllowed = false);\r\n                this.setState({policies: res, isEditRole: false, showModal: true, roleName: '', roleId: ''})\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error, showError: true})\r\n            });\r\n    }\r\n    getTableHeader = () => {\r\n        return (\r\n            <div className='role-table-header'>\r\n                <div>Role Management</div>\r\n                {checkRenderPermissions(permissions.CAN_ADD_ROLE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <Button variant='primary' onClick={this.addRole}>Add Role</Button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleToastClose = (stateName) => {\r\n        this.setState({[stateName]: false})\r\n    }\r\n\r\n    renderRoleManagement() {\r\n\r\n        const {showModal, roleId, roleName, policies, roleList, isEditRole, showConfirmPopup, tableHeader, showSuccess, successMessage, errorMessage, showError} = this.state;\r\n        let isDisabled = true;\r\n        const isOneSelected = policies.findIndex(p => p.isAllowed);\r\n        if (!isEditRole && roleName.trim() && isOneSelected !== -1) {\r\n            isDisabled = false;\r\n        } else if (isEditRole && roleName.trim() && isOneSelected !== -1) {\r\n            isDisabled = false;\r\n        }\r\n\r\n        const customHeight = `${window.innerHeight - 162}px`;\r\n        const customStyle = {height: customHeight}\r\n\r\n        const _header = this.getTableHeader();\r\n        return (\r\n\r\n            <div className='role-management app-center-body'>\r\n                {\r\n                    showSuccess\r\n                        ? <MyToast showToast={showSuccess} message={successMessage} isSuccessMessage={true}\r\n                                   handleClose={() => this.handleToastClose('showSuccess')}/>\r\n                        : null\r\n                }\r\n                {\r\n                    errorMessage && showError\r\n                        ? <MyToast showToast={showError} message={errorMessage} isSuccessMessage={false}\r\n                                   handleClose={() => this.handleToastClose('showError')}/>\r\n                        : null\r\n                }\r\n                <div className='role-management-child'>\r\n                    <ReactTable header={_header} tableHeader={tableHeader} rowData={roleList}\r\n                                handleColumnCLick={this.handleEditRole}/>\r\n                    <Modal size='lg' show={showModal} className={`${showConfirmPopup ? 'hide-user-popup' : ''} role-modal`}>\r\n                        <Modal.Header>\r\n                            <h5>{isEditRole ? 'Edit Role' : 'Add Role'}</h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <AddRole\r\n                                roleName={roleName}\r\n                                roleId={roleId}\r\n                                policies={policies}\r\n                                onInputChange={this.handleInputChange}\r\n                                onRoleChange={this.handleRoleChange}\r\n                                isEditRole={isEditRole}\r\n                                onCheckboxClick={this.onCheckboxClick}\r\n                            />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            {checkRenderPermissions(permissions.CAN_DELETE_ROLE, JSON.parse(localStorage.getItem('userpolicies'))) && isEditRole ?\r\n                                <Button variant='danger' onClick={(e) => this.onDelete(e)}>Delete Role</Button> : null}\r\n                            <Button variant='secondary' onClick={(e) => this.onCancel(e)}>Cancel</Button>\r\n                            <Button disabled={isDisabled} variant='primary' onClick={(e) => this.onAddRoleClick(e)}>\r\n                                {isEditRole ? 'Update' : 'Add Role'}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={showConfirmPopup} className='delete-popup'>\r\n                        <Modal.Header>\r\n                            <strong>Do you really want to delete<br/>{roleName} ?</strong>\r\n                        </Modal.Header>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.cancelDeleteRole(e)}>No</Button>\r\n                            <Button variant='danger' onClick={(e) => this.deleteRole(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_ACCESS_ROLE_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderRoleManagement();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default RoleManagement;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport RoleManagement from \"./rolemanagement\";\r\n\r\nconst RoleManagementComponent = AuthLayoutHOC(RoleManagement);\r\n\r\nexport default RoleManagementComponent;","import React from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport './LayoutHoc.css';\r\nimport {inject} from \"mobx-react\";\r\n\r\n\r\nconst LayoutHOC = (WrappedComponent) => {\r\n\r\n    @inject('authStore')\r\n    class HOC extends React.Component {\r\n\r\n        render() {\r\n\r\n            return (\r\n                <div className='my-app'>\r\n                    <Header />\r\n                    <div className='my-app-center-panel'>\r\n                        <WrappedComponent {...this.props}/>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return HOC;\r\n\r\n};\r\n\r\nexport default LayoutHOC;","import React from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport dotenv from 'dotenv'\r\nimport \"./Login.css\";\r\nimport {observer} from \"mobx-react\";\r\n\r\ndotenv.config()\r\n\r\n@observer\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {email: \"\", password: \"\", accessToken: null, refreshToken: null};\r\n    }\r\n\r\n    validateForm = () => {\r\n        return this.state.email.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {email, password} = this.state;\r\n        this.props.authStore.loginWithPassword(email, password, this.props);\r\n    }\r\n\r\n    handleInputChange = (value, stateName) => {\r\n        this.setState({[stateName]: value});\r\n    }\r\n\r\n    render() {\r\n        const {email, password} = this.state;\r\n        const {passwordAuthErrorMessage} = this.props.authStore;\r\n        const isValidate = this.validateForm();\r\n        return (\r\n            <div className=\"login App-header\">\r\n                <div className='login-panel'>\r\n                    <img src='/images/lottery_numbers_blue.png'/>\r\n                    <Form onSubmit={this.handleSubmit} className='login-form'>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Email Address\"\r\n                                autoFocus\r\n                                value={email}\r\n                                onChange={e => this.handleInputChange(e.target.value, 'email')}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group coapp-error-messagentrolId=\"formBasicPassword\">\r\n                            <Form.Control\r\n                                placeholder=\"Password\"\r\n                                onChange={e => this.handleInputChange(e.target.value, 'password')}\r\n                                type=\"password\"\r\n                            />\r\n                            {passwordAuthErrorMessage ? <Form.Text className=\"app-error-message\">{passwordAuthErrorMessage}</Form.Text> : null}\r\n                        </Form.Group>\r\n\r\n                        <Button block bsSize=\"large\" type=\"submit\" className='login-button'>\r\n                            Login\r\n                        </Button>\r\n                        {/*<div className='app-forgot-password'>*/}\r\n                        {/*    <Link to=\"/forgotpassword\" className=\"app-forgot-password-title\">*/}\r\n                        {/*        Forgot password?*/}\r\n                        {/*    </Link>*/}\r\n                        {/*</div>*/}\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import LayoutHOC from \"../../Layout/LayoutHOC\";\r\nimport Login from \"./Login\";\r\n\r\nconst LoginComponent = LayoutHOC(Login);\r\n\r\nexport default LoginComponent;\r\n","import React from \"react\";\r\nimport './lockIcon.css';\r\n\r\nconst LockIcon = (props) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className='bi bi-lock lock-icon' width=\"24px\" height=\"24px\" viewBox=\"0 0 16 16\"  fill={props.color || '#FFFFFF'} onClick={props.onclick}>\r\n            <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2zM5 8h6a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default LockIcon;\r\n","import React from \"react\";\r\nimport './lockIcon.css';\r\n\r\nconst UnlockIcon = (props) => {\r\n    const {isDisabled} = props;\r\n    const disabledClassName = isDisabled ? 'inactive' : '';\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={`bi bi-unlock unlock-icon ${disabledClassName}`} width=\"24px\" height=\"24px\" viewBox=\"0 0 16 16\"  fill={props.color || '#FFFFFF'} onClick={props.onclick}>\r\n            <path d=\"M11 1a2 2 0 0 0-2 2v4a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h5V3a3 3 0 0 1 6 0v4a.5.5 0 0 1-1 0V3a2 2 0 0 0-2-2zM3 8a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1H3z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default UnlockIcon;\r\n","import React from \"react\";\r\nimport './iconStyle.css';\r\n\r\nconst ResetPasswordIcon = (props) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className='reset-password-icon' height='24px' width='24px' viewBox=\"0 0 1151.04 1333.33\"  fill={props.color || '#FFFFFF'} onClick={props.onclick}>\r\n            <path d=\"M468.17 676.45L351.45 881.88l21.82 81.44 80.86-21.67-16.4-61.22 67-17.95-17.95-67 56.33-3.68 2.35-65.35c34.78 11.78 73.69 13.71 112.28 3.37 101.08-27.09 161.89-128.1 135.76-225.57-26.12-97.48-129.28-154.56-230.36-127.48-101.07 27.08-161.87 128.09-135.75 225.58 7.65 28.54 21.91 53.6 40.77 74.11zm217.51 611.85c10.15 10.67 9.72 27.54-.94 37.69-10.67 10.15-27.54 9.72-37.69-.94L561.58 1235c-9.74-10.23-9.74-26.19-.3-36.43l85.45-93.06c9.98-10.84 26.85-11.54 37.7-1.57 10.84 9.98 11.54 26.85 1.57 37.69l-35.98 39.17c169.94-30.38 289.05-113.89 361.31-220.96 50.61-74.99 78.46-161.65 84.88-249.75 6.43-88.46-8.65-178.24-43.94-259.09-56.17-128.72-163.63-234.93-316.96-276.98-14.19-3.86-22.55-18.5-18.69-32.68 3.86-14.19 18.5-22.55 32.68-18.69 170.33 46.71 289.6 164.44 351.83 307.04 38.77 88.85 55.37 187.31 48.32 284.15-7.07 97.19-37.87 192.91-93.85 275.85-83.04 123.03-221.06 217.76-418.62 247.28l48.69 51.31zM467.29 45.04c-10.15-10.67-9.72-27.54.94-37.69 10.67-10.15 27.55-9.72 37.69.94l85.46 90.05c9.74 10.23 9.74 26.19.3 36.43l-85.45 93.06c-9.98 10.84-26.85 11.54-37.69 1.57-10.84-9.98-11.54-26.85-1.57-37.69l38.66-42.09c-141.74 16.98-259.6 94.15-339.42 200.03-54.87 72.79-91.77 158.98-106.15 248.46-14.33 89.16-6.3 181.62 28.58 267.29 50.53 124.06 157.93 234.28 336.1 300.24 13.84 5.07 20.94 20.41 15.87 34.25-5.07 13.84-20.41 20.94-34.24 15.87-193.9-71.79-311.36-193.16-367.22-330.31C.5 790.56-8.41 688.28 7.43 589.76 23.21 491.55 63.6 397.1 123.6 317.5c90.96-120.66 227.04-207.57 391.09-222.49l-47.41-49.96zm154.3 444.65c-18.04 4.83-28.76 23.39-23.92 41.44 4.83 18.05 23.4 28.76 41.44 23.93 18.05-4.84 28.76-23.39 23.93-41.44-4.83-18.05-23.39-28.76-41.44-23.93z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordIcon;\r\n","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport EditIcon from \"../components/Icons/editIcon\";\r\nimport LockIcon from \"../components/Icons/LockIcon\";\r\nimport UnlockIcon from \"../components/Icons/UnlockIcon\";\r\nimport './usermanagement.css';\r\nimport AppTextbox from \"../AppTextbox\";\r\nimport config from \"../config\";\r\nimport ResetPasswordIcon from \"../icons/ResetPasswordIcon\";\r\nimport {checkRenderPermissions} from \"../helpers\";\r\nimport {permissions} from \"../constants\";\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport MyToast from \"../MyToast\";\r\nimport {inject} from \"mobx-react\";\r\nimport ReactTable from \"../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore', 'authStore')\r\nclass AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: []\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event, stateName) => {\r\n        this.props.onInputChange(stateName, event.target.value)\r\n    }\r\n    handleRoleChange = (e) => {\r\n        const value = e.target.value;\r\n        this.props.onRoleChange(value);\r\n    }\r\n\r\n    render() {\r\n        const {roles, selectedId} = this.state;\r\n        const {rolesList} = this.props;\r\n        const {showEmailError, userName, confirmUserName, lastName, firstName, middleName, role, roleId, isEditUser} = this.props;\r\n        return (\r\n            <div className='container'>\r\n                <AppTextbox controlId='userName'\r\n                            type=\"email\" placeholder='Email' value={userName} disabled={isEditUser}\r\n                            onChange={(e) => this.handleInputChange(e, 'userName')}/>\r\n                {\r\n                    showEmailError ? <div className='invalid-email'>Invalid email</div> : null\r\n                }\r\n\r\n                {\r\n                    !isEditUser\r\n                        ? <AppTextbox controlId='confirmUserName' type=\"text\" placeholder='Confirm Email'\r\n                                      value={confirmUserName}\r\n                                      disabled={isEditUser}\r\n                                      onChange={(e) => this.handleInputChange(e, 'confirmUserName')}/>\r\n                        : null\r\n                }\r\n\r\n\r\n                <AppTextbox controlId='firstName'\r\n                            type=\"text\" placeholder='First Name' value={firstName}\r\n                            onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"First Name\"\r\n                           value={firstName}\r\n                           onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                </div>*/}\r\n\r\n                <AppTextbox controlId='middleName'\r\n                            type=\"text\" placeholder='Middle Name' value={middleName}\r\n                            onChange={(e) => this.handleInputChange(e, 'middleName')}/>\r\n\r\n                {/*<div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"middleName\" placeholder=\"Middle Name\"\r\n                           value={middleName}\r\n                           onChange={(e) => this.handleInputChange(e, 'middleName')}/>\r\n                </div>*/}\r\n\r\n                <AppTextbox controlId='lastName'\r\n                            type=\"text\" placeholder='Last Name' value={lastName}\r\n                            onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n\r\n                {/*<div className=\"form-group\">*/}\r\n                {/*    <input type=\"text\" className=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" value={lastName}*/}\r\n                {/*           onChange={(e) => this.handleInputChange(e, 'lastName')}/>*/}\r\n                {/*</div>*/}\r\n                <select className=\"form-control user-dropdown\" id=\"role\" onChange={(e) => this.handleRoleChange(e)}>\r\n                    <option value=''>Select a Role</option>\r\n                    {\r\n                        rolesList.map((role, index) => {\r\n                            return <option selected={role.roleid === roleId} value={role.roleid} key={index}\r\n                                           id={role.roleid}>{role.rolename}</option>\r\n                        })\r\n                    }\r\n                </select>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: '',\r\n            userList: [],\r\n            tableHeader: [\r\n                {key: 'id', label: 'User ID'},\r\n                {key: 'username', label: 'User Name'},\r\n                {key: 'rolename', label: 'Role'}\r\n            ],\r\n            showModal: false,\r\n            selectedId: 0,\r\n            firstName: '',\r\n            middleName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            roleId: '',\r\n            isEditUser: false,\r\n            showConfirmPopup: false,\r\n            rolesList: [],\r\n            id: '',\r\n            showEmailError: false,\r\n            isValidEmail: false,\r\n            showResetPasswordPopup: false,\r\n            confirmUserName: null,\r\n            selectedUserName: null,\r\n            successMessage: null,\r\n            showSuccess: false,\r\n            showError: false,\r\n            isDeleteProcess: false,\r\n            isDeactivateProcess: false,\r\n            showUnlockModal: false,\r\n            lockedUser: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.fetchAllUsers();\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/allroles`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setRoles(res);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n    }\r\n\r\n    fetchAllUsers = () => {\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/allusers`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setUsers(res);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n    }\r\n\r\n    setRoles = (roles) => {\r\n        this.setState({rolesList: roles});\r\n    }\r\n\r\n    cancelUnlock = (user) => {\r\n        this.setState({showUnlockModal: false, lockedUser: null});\r\n    }\r\n    showUnlockModal = (user) => {\r\n        this.setState({showUnlockModal: true, lockedUser: user});\r\n    }\r\n    unlockUser = (user) => {\r\n        const {lockedUser} = this.state;\r\n        this.setState({showUnlockModal: false, lockedUser: null},\r\n            () => this.props.playerStore.unlockUser(lockedUser, this.fetchAllUsers)\r\n        );\r\n    }\r\n\r\n    setUsers = (users) => {\r\n\r\n        const _users = users.filter(user => user.username !== localStorage.getItem('userName'));\r\n        let _tableHeader = JSON.parse(JSON.stringify(this.state.tableHeader));\r\n\r\n        if (checkRenderPermissions(permissions.CAN_EDIT_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'edit') === -1) {\r\n                _tableHeader.push({key: 'edit', label: 'Edit'})\r\n            }\r\n            _users.forEach(user => {\r\n                user.edit = <EditIcon color='#FFFFFF' onclick={() => this.handleEditUser(user.username)}/>\r\n            });\r\n        }\r\n\r\n        if (checkRenderPermissions(permissions.CAN_RESET_USER_PASSWORD, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'password') === -1) {\r\n                _tableHeader.push({key: 'password', label: 'Password'})\r\n            }\r\n            _users.forEach(user => {\r\n                user.password =\r\n                    <ResetPasswordIcon color='#FFFFFF' onclick={() => this.handleResetPassword(user.username)}/>\r\n            });\r\n        }\r\n\r\n        if (checkRenderPermissions(permissions.CAN_UNLOCK_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'account') === -1) {\r\n                _tableHeader.push({key: 'account', label: 'Account'});\r\n            }\r\n            _users.forEach(user => {\r\n                user.account = user.islocked ? <LockIcon onclick={() => this.showUnlockModal(user)}/> : <UnlockIcon isDisabled={true}/>;\r\n            });\r\n        }\r\n\r\n        if (checkRenderPermissions(permissions.CAN_SEE_USER_AUDIT_ACTIONS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'audit') === -1) {\r\n                _tableHeader.push({key: 'audit', label: 'Audit'})\r\n            }\r\n            _users.forEach(user => {\r\n                user.audit =\r\n                    <a onClick={(e) => this.handleAuditClick(e, user.id, user.username)} href=''\r\n                       className='select-link'>Audit</a>\r\n            });\r\n        }\r\n\r\n        this.setState({userList: _users, tableHeader: _tableHeader});\r\n    }\r\n\r\n    showAddUserModal = () => {\r\n        this.setState({\r\n            showModal: true,\r\n            isEditUser: false,\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            userName: '',\r\n            confirmUserName: '',\r\n            role: '',\r\n            roleId: 0,\r\n        });\r\n    }\r\n\r\n    onAddUserClick = (e) => {\r\n        e.preventDefault();\r\n        const {firstName, middleName, lastName, userName, confirmUserName, roleId, isEditUser, id, isValidEmail} = this.state;\r\n        if (!isValidEmail && !isEditUser) {\r\n            this.setState({showEmailError: true});\r\n        } else {\r\n\r\n            const newUser = {\r\n                username: userName,\r\n                confirmUserName: confirmUserName,\r\n                roleid: roleId,\r\n                firstname: firstName,\r\n                middlename: middleName,\r\n                lastname: lastName,\r\n            };\r\n            let url = `${config.SERVER_BASE_URL}/v1/users/register`;\r\n            if (isEditUser) {\r\n                newUser.id = id;\r\n                url = `${config.SERVER_BASE_URL}/v1/user/update`;\r\n            }\r\n            const message = isEditUser ? 'User updated successfully.' : 'Email with instructions to setup a password is sent to the user'\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newUser),\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        this.setState({showModal: false, errorMessage: res.error, showError: true})\r\n                    } else {\r\n                        this.setState({\r\n                            isEditUser: false,\r\n                            showModal: false,\r\n                            successMessage: message,\r\n                            showSuccess: true\r\n                        }, () => this.fetchAllUsers());\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({showError: true, errorMessage: error.toString()})\r\n                });\r\n        }\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    onDelete = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showConfirmPopup: true, isDeleteProcess: true, isDeactivateProcess: false});\r\n    }\r\n    onDeactivate = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showConfirmPopup: true, isDeleteProcess: false, isDeactivateProcess: true});\r\n    }\r\n\r\n    handleInputChange = (stateName, value) => {\r\n        let _isValidEmail = this.state.isValidEmail;\r\n        if (stateName === 'userName') {\r\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\r\n                _isValidEmail = true;\r\n            } else {\r\n                _isValidEmail = false\r\n            }\r\n        }\r\n        this.setState({[stateName]: value, isValidEmail: _isValidEmail, showEmailError: false});\r\n    }\r\n\r\n    handleRoleChange = (role) => {\r\n        this.setState({roleId: role})\r\n    }\r\n\r\n\r\n    resetPassword = (e) => {\r\n        // CALL RESET API /v1/users/resetpassword\r\n        e.preventDefault();\r\n        const data = {username: this.state.selectedUserName};\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/resetpassword`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error, showError: true});\r\n                } else {\r\n                    this.setState({\r\n                        showSuccess: true,\r\n                        successMessage: 'Email has been sent with instructions to reset the password.'\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.setState({errorMessage: error.toString(), showError: true});\r\n            });\r\n        this.setState({showResetPasswordPopup: false, selectedUserName: null});\r\n    }\r\n    hideResetPassword = () => {\r\n        this.setState({showResetPasswordPopup: false, selectedUserName: null});\r\n    }\r\n    handleResetPassword = (username) => {\r\n        this.setState({showResetPasswordPopup: true, selectedUserName: username});\r\n    }\r\n\r\n    handleAuditClick = (event, userid, username) => {\r\n        event.preventDefault();\r\n        this.props.playerStore.setSelectedBackOfficeUserID(userid);\r\n        this.props.playerStore.setSelectedBackOfficeUserName(username);\r\n        this.props.history.push(`/user/audit/${userid}`);\r\n    }\r\n\r\n    handleEditUser = (username) => {\r\n\r\n        const selectedUser = this.state.userList.find(user => user.username === username);\r\n        if (selectedUser) {\r\n            const {firstname, middlename, lastname, username, roleid, id} = selectedUser;\r\n            this.setState({\r\n                id: id,\r\n                firstName: firstname,\r\n                lastName: lastname,\r\n                middleName: middlename,\r\n                userName: username,\r\n                roleId: roleid,\r\n                showModal: true,\r\n                isEditUser: true,\r\n                successMessage: 'test'\r\n            })\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.EDIT_USER, username);\r\n        }\r\n    }\r\n    cancelDeleteUser = () => {\r\n        this.setState({showConfirmPopup: false});\r\n    }\r\n    deleteOrDeactivateUser = () => {\r\n\r\n        const {id, isDeactivateProcess, userName} = this.state;\r\n        // let _userList = userList;\r\n        // _userList = _userList.filter(user => user.userName !== userName);\r\n        // this.setState({userList: _userList, showConfirmPopup: false, showModal: false});\r\n\r\n        let url = `${config.SERVER_BASE_URL}/v1/user/delete`;\r\n        let method = 'DELETE';\r\n        if (isDeactivateProcess) {\r\n            url = `${config.SERVER_BASE_URL}/v1/users/deactivate`;\r\n            method = 'POST';\r\n        }\r\n        fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({userid: id, username: userName}),\r\n        })\r\n            .then(response => response.json())\r\n            .then((res) => {\r\n                if (res.error) {\r\n                    this.setState({isEditUser: false, showModal: false, showConfirmPopup: false});\r\n                } else {\r\n                    this.setState({\r\n                        isEditUser: false,\r\n                        showModal: false,\r\n                        showConfirmPopup: false,\r\n                        successMessage: res.message,\r\n                        showSuccess: true\r\n                    }, () => this.fetchAllUsers());\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n\r\n\r\n    }\r\n    addNewUser = () => {\r\n        this.setState({\r\n            isEditUser: false, showModal: true, firstName: '', middleName: '', lastName: '',\r\n            userName: '', confirmUserName: '', roleId: ''\r\n        });\r\n    }\r\n    getTableHeader = () => {\r\n        return (\r\n            <div className='user-table-header'>\r\n                <div>User Management</div>\r\n                {checkRenderPermissions(permissions.CAN_CREATE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <Button variant='primary' onClick={this.addNewUser}>Add User</Button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleToastClose = (stateName) => {\r\n        this.setState({[stateName]: false})\r\n    }\r\n\r\n    renderUserManagement() {\r\n\r\n        const {\r\n            showEmailError, showModal, roleId, role, firstName, middleName, lastName, userName, userList, tableHeader,\r\n            isEditUser, showConfirmPopup, rolesList, showResetPasswordPopup, confirmUserName,\r\n            showSuccess, successMessage, showError, errorMessage, isDeactivateProcess, isDeleteProcess, showUnlockModal,\r\n            lockedUser } = this.state;\r\n        const deleteConfirmMessage =\r\n            <div>{`Do you really want to ${isDeleteProcess ? 'delete' : 'deactivate'}`}<br/>{userName}</div>;\r\n        const resetPasswordConfirmMessage = <div>Are you sure you want to reset this User’s password?</div>;\r\n        let isDisabled = true;\r\n        if (!isEditUser && firstName.trim() && lastName.trim() && userName.trim() && confirmUserName && roleId && userName === confirmUserName) {\r\n            isDisabled = false;\r\n        } else if (isEditUser && firstName.trim() && lastName.trim() && userName && roleId) {\r\n            isDisabled = false;\r\n        }\r\n        const customHeight = `${window.innerHeight - 162}px`;\r\n        const _header = this.getTableHeader();\r\n        const customStyle = {height: customHeight}\r\n        return (\r\n            <div className='user-management app-center-body'>\r\n                {\r\n                    showSuccess\r\n                        ? <MyToast showToast={showSuccess} message={successMessage} isSuccessMessage={true}\r\n                                   handleClose={() => this.handleToastClose('showSuccess')}/>\r\n                        : null\r\n                }\r\n                {\r\n                    errorMessage && showError\r\n                        ? <MyToast showToast={showError} message={errorMessage} isSuccessMessage={false}\r\n                                   handleClose={() => this.handleToastClose('showError')}/>\r\n                        : null\r\n                }\r\n                <div className='user-management-child'>\r\n                    <ReactTable header={_header} tableHeader={tableHeader} rowData={userList}\r\n                                handleColumnCLick={this.handleEditUser} className='fixed_header'/>\r\n                    <Modal show={showModal} className={showConfirmPopup ? 'hide-user-popup' : ''}>\r\n                        <Modal.Header>\r\n                            <h5>{isEditUser ? 'Edit User' : 'Add User'}</h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <AddUser\r\n                                userName={userName}\r\n                                confirmUserName={confirmUserName}\r\n                                lastName={lastName}\r\n                                firstName={firstName}\r\n                                middleName={middleName}\r\n                                showEmailError={showEmailError}\r\n                                rolesList={rolesList}\r\n                                role={role}\r\n                                roleId={roleId}\r\n                                onInputChange={this.handleInputChange}\r\n                                onRoleChange={this.handleRoleChange}\r\n                                isEditUser={isEditUser}\r\n                            />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            {isEditUser\r\n                                ? <>\r\n                                    {checkRenderPermissions(permissions.CAN_DEACTIVATE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                        <Button variant='warning' onClick={(e) => this.onDeactivate(e)}>Deactivate\r\n                                            User</Button> : null}\r\n                                    {checkRenderPermissions(permissions.CAN_DELETE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                        <Button variant='danger' onClick={(e) => this.onDelete(e)}>Delete\r\n                                            User</Button> : null}\r\n                                </>\r\n                                : null\r\n                            }\r\n                            <Button variant='secondary' onClick={(e) => this.onCancel(e)}>Cancel</Button>\r\n                            <Button disabled={isDisabled} variant='primary' onClick={(e) => this.onAddUserClick(e)}>\r\n                                {isEditUser ? 'Update' : 'Add User'}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n\r\n                    <Modal show={showConfirmPopup} className='delete-popup'>\r\n                        <Modal.Header>\r\n                            <strong>{deleteConfirmMessage}</strong>\r\n                        </Modal.Header>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.cancelDeleteUser(e)}>No</Button>\r\n                            <Button disabled={isDisabled} variant='danger'\r\n                                    onClick={(e) => this.deleteOrDeactivateUser(e)}>\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={showResetPasswordPopup} className='reset-password-popup' centered={true}>\r\n                        <Modal.Header>\r\n                            <strong>{resetPasswordConfirmMessage}</strong>\r\n                        </Modal.Header>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.hideResetPassword(e)}>No</Button>\r\n                            <Button variant='danger' onClick={(e) => this.resetPassword(e)}>\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={showUnlockModal} className='' centered={true}>\r\n                        <Modal.Header>\r\n                            <div>Do you really want to unlock {lockedUser && lockedUser.username}?</div>\r\n                        </Modal.Header>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.cancelUnlock(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.unlockUser(e)}>\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_ACCESS_USER_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderUserManagement();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserManagement;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport UserManagement from \"./usermanagement\";\r\n\r\nconst UserManagementComponent = AuthLayoutHOC(UserManagement);\r\n\r\nexport default UserManagementComponent;","import React from \"react\";\r\nimport LayoutHOC from \"../Layout/LayoutHOC\";\r\nimport ResetPasswordComponent from \"./resetPasswordComponent\";\r\n\r\nconst ResetPassword = LayoutHOC(ResetPasswordComponent);\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimProcessingCenter from \"./ClaimProcessingCenter\";\r\n\r\nconst ClaimProcessingCenterComponent = AuthLayoutHOC(ClaimProcessingCenter);\r\n\r\nexport default ClaimProcessingCenterComponent;","import React from \"react\";\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nclass ClaimProcessingCenter extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='app-center-body'>\r\n                <Table responsive>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Table heading</th>\r\n                        <th>Table heading</th>\r\n                        <th>Table heading</th>\r\n                        <th>Table heading</th>\r\n                        <th>Table heading</th>\r\n                        <th>Table heading</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClaimProcessingCenter;\r\n","import React from \"react\";\r\nimport './Dashboard.css';\r\n\r\nclass CustomCard extends React.Component {\r\n    render() {\r\n        const {title, iconPath, handleCallback} = this.props;\r\n\r\n        return (\r\n            <div className='dashboard-card' onClick={handleCallback}>\r\n               {iconPath &&  <div className='dashboard-card-icon'> <img src={iconPath} /></div>}\r\n                <div className='dashboard-card-label'>{title}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomCard;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst DashboardComponent = AuthLayoutHOC(Dashboard);\r\n\r\nexport default DashboardComponent;\r\n","import React from \"react\";\r\nimport CustomCard from './customCard';\r\nimport './Dashboard.css'\r\nimport {checkRenderPermissions} from '../helpers';\r\nimport {permissions} from '../constants';\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport {inject} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\nclass Dashboard extends React.Component {\r\n\r\n    Name = \"Dashboard\";\r\n\r\n    navigateTo = (path) => {\r\n\r\n        if (path === '/claimsupport')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.CLAIM_SUPPORT);\r\n        else if (path === '/playersupport')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.PLAYER_SUPPORT);\r\n        else if (path === '/system/dashboard')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SYSTEM_DASHBOARD);\r\n\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='app-center-body'>\r\n                {checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Claim Support'\r\n                        handleCallback={() => this.navigateTo('/claimsupport')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.SEE_PLAYER_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Player Support'\r\n                        handleCallback={() => this.navigateTo('/playersupport')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_ACCESS_FINANCE_PAYMENTS_MODULE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Finance / Payments'\r\n                        handleCallback={() => this.navigateTo('/finance')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_SEE_SYSTEM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='System Support'\r\n                        handleCallback={() => this.navigateTo('/system/dashboard')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_ACCESS_SECURITY_MODULE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Security'\r\n                        handleCallback={() => this.navigateTo('/security/home')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_ACCESS_ANALYTICS_MODULE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Analytics'\r\n                        handleCallback={() => this.navigateTo('/comingsoon')}\r\n                    /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport PlayerSupport from \"./Playersupport\";\r\n\r\nconst PlayerSupportComponent = AuthLayoutHOC(PlayerSupport);\r\n\r\nexport default PlayerSupportComponent;\r\n","import React from \"react\";\r\nimport CustomCard from '../../dashboard/customCard';\r\nimport './Playersupport.css'\r\nimport {checkRenderPermissions} from '../../helpers';\r\nimport {permissions} from '../../constants';\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport {inject} from \"mobx-react\";\r\n\r\n@inject('playerStore', 'authStore')\r\nclass Playersupport extends React.Component {\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem('searchFirstName');\r\n        localStorage.removeItem('searchLastName');\r\n        localStorage.removeItem('phone');\r\n        localStorage.removeItem('email');\r\n    }\r\n\r\n    navigateTo = (path) => {\r\n\r\n        if (path === '/player/search')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.PLAYER_MAINTENANCE);\r\n        else if (path === '/playerreports')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.PLAYER_SERVICE_REPORTS);\r\n\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    renderPlayerSupport() {\r\n        return (\r\n            <div className='app-center-body'>\r\n                {true ?\r\n                    <CustomCard\r\n                        title='Player Maintenance'\r\n                        handleCallback={() => this.navigateTo('/player/search')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.SEE_PLAYER_SERVICE_REPORTS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Player Services Reports'\r\n                        handleCallback={() => this.navigateTo('/playerreports')}\r\n                    /> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.SEE_PLAYER_SUPPORT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderPlayerSupport();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default Playersupport;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../../Layout/AuthLayoutHOC\";\r\nimport PlayerReports from \"./PlayerReports\";\r\n\r\nconst PlayerReportsComponent = AuthLayoutHOC(PlayerReports);\r\n\r\nexport default PlayerReportsComponent;\r\n","import React from \"react\";\r\nimport CustomCard from '../../../dashboard/customCard';\r\nimport './PlayerReports.css'\r\nimport {UserAction, UserActionCategory} from \"../../../UserActionCategory\";\r\nimport {inject} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\nclass Playerreports extends React.Component {\r\n\r\n    navigateTo = (path, query) => {\r\n\r\n        if (path === '/playerreports/locked')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.PLAYER_REPORTS_LOCKED_ACCOUNTS);\r\n        else if (path === '/playerreports/idfailed')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.PLAYER_REPORTS_IDOLOGY_FAILED_STATUS);\r\n        else if (path === '/playerreports/noidcheck')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.PLAYER_REPORTS_NO_IDOLOGY_STATUS);\r\n        else if (path === '/playerreports/custom')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.CUSTOM_PLAYER_REPORT);\r\n\r\n        if(query != ''){\r\n            this.props.history.push({pathname: path, state: { detail: query }});\r\n        }\r\n        else{\r\n            this.props.history.push(path);\r\n        }\r\n    }\r\n    renderPlayerReports(){\r\n        return(\r\n            <div className='app-center-body'>\r\n                { true /*checkRenderPermissions(permissions.UPDATE_PLAYER, JSON.parse(localStorage.getItem('userpolicies')))*/ ?\r\n                <CustomCard\r\n                    title='Locked Accounts'\r\n                    //iconPath='/icons/claims_pencil.png'\r\n                    handleCallback={() => this.navigateTo('/playerreports/locked', '?limit=100&accountenabled=false')}\r\n                /> : null}\r\n                { true /*checkRenderPermissions(permissions.RESET_PLAYER_PASSWORD, JSON.parse(localStorage.getItem('userpolicies')))*/ ?\r\n                <CustomCard\r\n                    title='Failed Identity Verification'\r\n                    //iconPath='/icons/report_folders.png'\r\n                    handleCallback={() => this.navigateTo('/playerreports/idfailed', '?limit=100&IDcheckresult=Failed')}\r\n                /> : null}\r\n                { true /*checkRenderPermissions(permissions.UNLOCK_PLAYER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies')))*/?\r\n                <CustomCard\r\n                    title='Incomplete Player Registration'\r\n                    //iconPath='/icons/report_folders.png'\r\n                    handleCallback={() => this.navigateTo('/playerreports/noidcheck', '?limit=100&IDchecksource=')}\r\n                /> : null}\r\n                { true /*checkRenderPermissions(permissions.SEE_PLAYER_VERIFICATION, JSON.parse(localStorage.getItem('userpolicies')))*/?\r\n                    <CustomCard\r\n                        title='Custom'\r\n                        //iconPath='/icons/question_mark.png'\r\n                        handleCallback={() => this.navigateTo('/playerreports/custom', '')}\r\n                /> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if( true /*checkRenderPermissions(permissions.SEE_PLAYER_SUPPORT, JSON.parse(localStorage.getItem('userpolicies')))*/ ){\r\n            renderObj = this.renderPlayerReports();\r\n        }\r\n        else{\r\n            renderObj = <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n                renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default Playerreports;","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from \"../config\";\r\nimport {ExportToCsv} from 'export-to-csv';\r\nimport './playerreporttable.css';\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport {inject} from \"mobx-react\";\r\nimport ReactTable from \"../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore', 'authStore')\r\nclass PlayerReportTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: [],\r\n            tableHeader: []\r\n        }\r\n\r\n        var data = [\r\n            {\r\n                firstName: 'Test',\r\n                lastName: 'User',\r\n                email: 'test@test.com',\r\n                enabled: 'Enabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            }\r\n        ]\r\n\r\n\r\n        this.setTableData(data);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var data = null;\r\n\r\n        if (this.props.location.state == undefined){\r\n            this.props.history.push('/playerreports');\r\n        }\r\n        else\r\n        {\r\n            var query = this.props.location.state.detail;\r\n\r\n            let url = `${config.SERVER_BASE_URL}/v1/players/customreports${query}`;\r\n            fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        console.log(res.error);\r\n                    } else {\r\n                        this.setTableData(res);\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    console.log(data);\r\n                    this.setTableData(data);\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({showError: true, errorMessage: error.toString()})\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    options = {\r\n        fieldSeparator: ',',\r\n        quoteStrings: '\"',\r\n        decimalSeparator: '.',\r\n        showLabels: true,\r\n        showTitle: true,\r\n        title: 'User List Export',\r\n        useTextFile: false,\r\n        useBom: true,\r\n        useKeysAsHeaders: true,\r\n        // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\r\n    };\r\n\r\n    csvExporter = new ExportToCsv(this.options);\r\n\r\n    fetchTableData(query) {\r\n        var testData = [\r\n            {\r\n                firstName: 'Test',\r\n                lastName: 'User',\r\n                email: 'test@test.com',\r\n                enabled: 'Enabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            }\r\n        ]\r\n\r\n        let url = `${config.SERVER_BASE_URL}/v1/players/customreports${query}`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    console.log(res.error);\r\n                } else {\r\n                    console.log(res);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n    }\r\n\r\n    handleSelectClick = (event, id) => {\r\n        event.preventDefault();\r\n        this.props.history.push(`/comingsoon`);\r\n    }\r\n\r\n    getTableHeader = (userList) => {\r\n        return (\r\n            <div className='player-table-header'>\r\n                <div></div>\r\n                <div>\r\n                    <Button className='report-table-btn'\r\n                            onClick={() => this.downloadClicked(userList)}>Download</Button>\r\n                    <Button className='report-table-btn' onClick={() => this.printClicked()}>Print</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setTableData = (data) => {\r\n        const rows = data.map((d, index) => {\r\n            d.idField = index + 1;\r\n            d.select = <a onClick={(e) => this.handleSelectClick(e, d.id)} href='' className='select-link'>VIEW</a>;\r\n            return d;\r\n        });\r\n        const tableHeader = [\r\n            {key: 'firstName', label: 'First'},\r\n            {key: 'lastName', label: 'Last'},\r\n            {key: 'email', label: 'email'},\r\n            {key: 'enabled', label: 'Account Locked?'},\r\n            {key: 'status', label: 'Player Identity Status'},\r\n            {key: 'idcheckresult', label: 'Identity Check Result'},\r\n            {key: 'idchecksource', label: 'Identity Check Source'},\r\n            {key: 'reason', label: 'Player Registration Status'},\r\n            {key: 'select', label: ''}\r\n        ];\r\n\r\n        //this.setState({tableHeader: tableHeader, userList: rows}, () => console.log(this.state));\r\n        this.state.tableHeader = tableHeader;\r\n        this.state.userList = rows;\r\n    }\r\n\r\n    downloadClicked(data) {\r\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.DOWNLOAD_PLAYER_REPORT);\r\n        this.csvExporter.generateCsv(data);\r\n    }\r\n\r\n    printClicked() {\r\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.PRINT_PLAYER_REPORT);\r\n        // useReactToPrint({content: () => this.state});\r\n    }\r\n\r\n    render() {\r\n        //const {firstName, lastName, email} = this.state;\r\n\r\n        const {tableHeader, userList} = this.state;\r\n        const _header = this.getTableHeader(userList);\r\n\r\n        return (\r\n            <div className='report-container'>\r\n                <ReactTable header={_header} tableHeader={tableHeader} rowData={userList} className='report-table'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerReportTable;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport PlayerReportTable from \"./playerreporttable\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst PlayerReportTableComponent = AuthLayoutHOC(PlayerReportTable);\r\n\r\nexport default withRouter(PlayerReportTableComponent);","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport PlayerReportsCustom from \"./PlayerReportsCustom\";\r\n\r\nconst PlayerReportsCustomComponent = AuthLayoutHOC(PlayerReportsCustom);\r\n\r\nexport default PlayerReportsCustomComponent;","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport './PlayerReportsCustom.css';\r\nimport AppToast from \"../toast\";\r\nimport AppTextbox from \"../AppTextbox\";\r\n\r\nclass PlayerReportsCustom extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            city: '',\r\n            state: '',\r\n            zipcode: '',\r\n            enabledval: 3,\r\n            idcheckresultval: 3,\r\n            statusval: 4,\r\n            cognitostatusval: 8,\r\n            idchecksourceval: 3,\r\n            enabled: [{\r\n                id: 1,\r\n                value: 'Yes'\r\n            }, {\r\n                id: 2,\r\n                value: 'No'\r\n            }, {\r\n                id: 3,\r\n                value: ''\r\n            }],\r\n            idcheckresult: [{\r\n                id: 1,\r\n                value: 'Passed'\r\n            }, {\r\n                id: 2,\r\n                value: 'Failed'\r\n            }, {\r\n                id: 3,\r\n                value: ''\r\n            }],\r\n            status: [{\r\n                id: 1,\r\n                value: 'Registration Incomplete'\r\n            }, {\r\n                id: 2,\r\n                value: 'Valid Identity'\r\n            }, {\r\n                id: 3,\r\n                value: 'Invalid Identity'\r\n            }, {\r\n                id: 4,\r\n                value: ''\r\n            }],\r\n            cognitostatus: [{\r\n                id: 1,\r\n                value: 'Unconfirmed'\r\n            }, {\r\n                id: 2,\r\n                value: 'Confirmed'\r\n            }, {\r\n                id: 3,\r\n                value: 'Archived'\r\n            }, {\r\n                id: 4,\r\n                value: 'Compromised'\r\n            }, {\r\n                id: 5,\r\n                value: 'Unknown'\r\n            }, {\r\n                id: 6,\r\n                value: 'Reset Required'\r\n            }, {\r\n                id: 7,\r\n                value: 'Force Change Password'\r\n            }, {\r\n                id: 8,\r\n                value: ''\r\n            }],\r\n            idchecksource: [{\r\n                id: 1,\r\n                value: 'Experian'\r\n            }, {\r\n                id: 2,\r\n                value: 'Back Office'\r\n            }, {\r\n                id: 3,\r\n                value: ''\r\n            }]\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName'\r\n            || stateName === 'city' || stateName === 'state' || stateName === 'county') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else if (stateName === 'cellPhone') {\r\n            const re = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || (re.test(e.target.value) && e.target.value.length <= 10)) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else if (stateName === 'email') {\r\n            const isValid = this.isEmailValid(e.target.value);\r\n            this.setState({[stateName]: e.target.value, isValidEmail: !!isValid});\r\n        } else if (stateName === 'zipcode') {\r\n            const regExp = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value) && e.target.value.length <= 5)) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n    handleToastClose = (stateName) => {\r\n        if (this.state.onYesClicked) {\r\n            this.props.history.goBack();\r\n        } else {\r\n            this.setState({showSuccess: false, successMessage: '', showToast: false})\r\n        }\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = Number(e.target.value);\r\n        this.setState({[stateName]: val});\r\n    }\r\n\r\n    navigateTo = (path, query) => {\r\n        console.log(query);\r\n        this.props.history.push({pathname: path, state: { detail: query }});\r\n    }\r\n\r\n    getFieldValue(obj, key){\r\n        return obj.find((e) => e.id === key).value;\r\n    }\r\n\r\n    onSearch(){\r\n        var queryStr = '?limit=100';\r\n        console.log('state');\r\n        console.log(this.state);\r\n\r\n        var enabledstr = this.getFieldValue(this.state.enabled, this.state.enabledval);\r\n        var idcheckresultstr = this.getFieldValue(this.state.idcheckresult, this.state.idcheckresultval);\r\n        var statusstr = this.getFieldValue(this.state.status, this.state.statusval);\r\n        var idchecksourcestr = this.getFieldValue(this.state.idchecksource, this.state.idchecksourceval);\r\n        var cognitostr = this.getFieldValue(this.state.cognitostatus, this.state.cognitostatusval);\r\n\r\n        if(this.state.firstName != \"\"){\r\n            queryStr += \"&firstname=\";\r\n            queryStr += this.state.firstName;\r\n        }\r\n        if(this.state.lastName != \"\"){\r\n            queryStr += \"&lastname=\";\r\n            queryStr += this.state.lastName;\r\n        }\r\n        if(this.state.zipcode != \"\"){\r\n            queryStr += \"&zipcode=\";\r\n            queryStr += this.state.zipcode;\r\n        }\r\n        if(this.state.state != \"\"){\r\n            queryStr += \"&state=\";\r\n            queryStr += this.state.state;\r\n        }\r\n        if(this.state.city != \"\"){\r\n            queryStr += \"&city=\";\r\n            queryStr += this.state.city;\r\n        }\r\n        if(enabledstr != \"\"){\r\n            queryStr += \"&accountenabled=\";\r\n\r\n            if(enabledstr === \"Yes\"){\r\n                queryStr += \"Disabled\";\r\n            } else{\r\n                queryStr += \"Enabled\";\r\n            }\r\n        }\r\n        if(idcheckresultstr != \"\"){\r\n            queryStr += \"&IDcheckresult=\";\r\n            if (idchecksourcestr === \"Passed\") {\r\n                queryStr += \"PASS\";\r\n            } else {\r\n                queryStr += \"FAIL\";\r\n            }\r\n        }\r\n        if(idchecksourcestr != \"\"){\r\n            queryStr += \"&IDchecksource=\";\r\n            if(idchecksourcestr === \"Experian\") {\r\n                queryStr += \"EXPERIAN\";\r\n            } else {\r\n                queryStr += \"BACK OFFICE\";\r\n            }\r\n        }\r\n        if(statusstr != \"\"){\r\n            queryStr += \"&status=\"\r\n            if (statusstr === \"Registration Incomplete\") {\r\n                queryStr += \"NO_IDENTITY\";\r\n            } else if (statusstr === \"Invalid Identification\") {\r\n                queryStr += \"INVALID_IDENTITY\";\r\n            } else {\r\n                queryStr += \"VALID_IDENTITY\";\r\n            }\r\n        }\r\n        if(cognitostr != \"\"){\r\n            queryStr += \"&cognitostatus=\";\r\n            if (cognitostr === \"Reset Required\") {\r\n                queryStr += \"RESET_REQUIRED\";\r\n            } else if (cognitostr === \"Force Changed Password\") {\r\n                queryStr += \"FORCE_CHANGE_PASSWORD\";\r\n            } else {\r\n                queryStr += cognitostr.toUpperCase();\r\n            }\r\n            queryStr += cognitostr;\r\n        }\r\n\r\n        this.navigateTo('/playerreports/customtable', queryStr);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            showToast, showSuccess, successMessage, firstName, lastName, city, state, zipcode, enabledval, idcheckresultval, statusval, cognitostatusval, idchecksourceval, enabled, idcheckresult, status, cognitostatus, idchecksource\r\n        } = this.state;\r\n        let isDisabled = true;\r\n\r\n        if(lastName || city || state || zipcode || enabledval!=3 || idcheckresultval!=3 || statusval!=4 || cognitostatusval!=8 || idchecksourceval!=3){\r\n            isDisabled = false;\r\n        }\r\n\r\n        return (\r\n                <div class='player-report-container container-fluid'>\r\n                    {showToast\r\n                        ? <AppToast showToast={showSuccess} message={successMessage} isSuccessMessage={true}\r\n                                    handleClose={() => this.handleToastClose('showSuccess')}/>\r\n                        : null\r\n                    }\r\n\r\n                    <div className='player-reports-panel'>\r\n                        <div className='player-reports-child '>\r\n                            <div className='row'>\r\n                                <div className='col-2'>\r\n                                    <div className='player-reports-label'>First Name</div>\r\n                                        <AppTextbox type='text' placeholder='Enter First Name' value={firstName}\r\n                                                    onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-reports-label'>Last Name</div>\r\n                                    <AppTextbox type='text' placeholder='Enter Last Name' value={lastName}\r\n                                                onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-reports-label'>City</div>\r\n                                    <AppTextbox type='text' placeholder='Enter City' value={city}\r\n                                                onChange={(e) => this.handleInputChange(e, 'city')}/>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-reports-label'>State</div>\r\n                                    <AppTextbox type='text' placeholder='Enter State' value={state}\r\n                                                onChange={(e) => this.handleInputChange(e, 'state')}/>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-reports-label'>Zip Code</div>\r\n                                    <AppTextbox type='text' placeholder='Enter Zip Code' value={zipcode}\r\n                                                onChange={(e) => this.handleInputChange(e, 'zipcode')}/>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-details-label'>Account Locked?</div>\r\n                                    <select value={enabledval} onChange={(e) => this.handleSelectChange(e, 'enabledval')}>\r\n                                        {\r\n                                            enabled.map(val => {\r\n                                                return <option value={val.id}>{val.value}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-2'>\r\n                                    <div className='player-details-label'>Identity Check Result</div>\r\n                                    <select value={idcheckresultval} onChange={(e) => this.handleSelectChange(e, 'idcheckresultval')}>\r\n                                        {\r\n                                            idcheckresult.map(val => {\r\n                                                return <option value={val.id}>{val.value}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-details-label'>Player Identity Status</div>\r\n                                    <select value={statusval} onChange={(e) => this.handleSelectChange(e, 'statusval')}>\r\n                                        {\r\n                                            status.map(val => {\r\n                                                return <option value={val.id}>{val.value}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-details-label'>Identity Verification Source</div>\r\n                                    <select value={idchecksourceval} onChange={(e) => this.handleSelectChange(e, 'idchecksourceval')}>\r\n                                        {\r\n                                            idchecksource.map(val => {\r\n                                                return <option value={val.id}>{val.value}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Player Registration Status</div>\r\n                                    <select value={cognitostatusval} onChange={(e) => this.handleSelectChange(e, 'cognitostatusval')}>\r\n                                        {\r\n                                            cognitostatus.map(val => {\r\n                                                return <option value={val.id}>{val.value}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className = 'col-1 report-search-container'>\r\n                                    <Button disabled={isDisabled} className='report-search-btn' onClick={() => this.onSearch()}>\r\n                                        Search\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerReportsCustom;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimSupport from \"./ClaimSupport\";\r\n\r\nconst ClaimSupportComponent = AuthLayoutHOC(ClaimSupport);\r\n\r\nexport default ClaimSupportComponent;","import React from \"react\";\r\nimport CustomCard from '../../dashboard/customCard';\r\nimport './ClaimSupport.css';\r\n\r\nimport {checkRenderPermissions} from '../../helpers';\r\nimport {permissions} from '../../constants';\r\n\r\nclass ClaimSupport extends React.Component {\r\n\r\n    navigateTo = (path) => {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    renderClaimSupport() {\r\n        return (\r\n            <div className='app-center-body'>\r\n                {checkRenderPermissions(permissions.PROCESS_CLAIMS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Process Claims'\r\n                        handleCallback={() => this.navigateTo('/comingsoon')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.DO_CLAIM_RESEARCH, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Claim Research'\r\n                        handleCallback={() => this.navigateTo('/claim/research')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.UPDATE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Update Claim'\r\n                        handleCallback={() => this.navigateTo('/claim/update')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.SEE_CLAIM_REPORTS_QUERIES, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Reports/Queries'\r\n                        handleCallback={() => this.navigateTo('/claim/reports')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_SEE_REJECT_CLAIMS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Rejected Claims Queue'\r\n                        handleCallback={() => this.navigateTo('/claim/reject')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_SEE_CHECK_REQUEST_CLAIMS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Claims Check Request'\r\n                        handleCallback={() => this.navigateTo('/claim/check')}\r\n                    /> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        let renderObj;\r\n\r\n        if (true) {\r\n            renderObj = this.renderClaimSupport();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClaimSupport;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimReportsQueries from \"./ClaimReportsQueries\";\r\n\r\nconst ClaimReportsQueriesComponent = AuthLayoutHOC(ClaimReportsQueries);\r\n\r\nexport default ClaimReportsQueriesComponent;","import React from \"react\";\r\nimport './ClaimReportsQueries.css';\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\n\r\n\r\nclass ClaimReportsQueries extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    renderClaimReportsQueries() {\r\n\r\n        return (\r\n            <div className='container-fluid'>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if(checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) &&\r\n            checkRenderPermissions(permissions.SEE_CLAIM_REPORTS_QUERIES, JSON.parse(localStorage.getItem('userpolicies')))){\r\n            renderObj = this.renderClaimReportsQueries();\r\n        }\r\n        else{\r\n            renderObj = <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ClaimReportsQueries;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport RejectClaim from \"./rejectClaim\";\r\n\r\nconst RejectClaimComponent = AuthLayoutHOC(RejectClaim);\r\n\r\nexport default RejectClaimComponent;","import React from 'react';\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\nimport {toJS} from \"mobx\";\r\nimport AppToast from \"../../toast\";\r\nimport Spinner from \"../../Spinner\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\n\r\nimport './rejectClaim.css';\r\n\r\n@inject('playerStore', 'claimStore')\r\n@observer\r\nclass RejectClaim extends  React.Component {\r\n\r\n    componentDidMount() {\r\n        const userName = localStorage.getItem('loggedInUserFullName') || '';\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.VIEW_REJECTED_CLAIMS, '', '');\r\n        const isClaimCheck = window.location.href.indexOf('claim/check') !== -1;\r\n        this.props.claimStore.fetchRejectClaims(isClaimCheck);\r\n    }\r\n\r\n    handleViewDetailClick = (data) => {\r\n        this.props.playerStore.setSelectedClaim(data, this.navigateToClaimDetails, true);\r\n        // this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SHOW_BATCH_FILE_PII, 'Transaction ID: '+target, 'User Name: '+userName);\r\n    }\r\n    navigateToClaimDetails = (data) => {\r\n        const id  = this.props.playerStore.selectedClaimId;\r\n        this.props.history.push(`/claim/${id}`);\r\n    }\r\n\r\n    renderView = () => {\r\n        const {rejectedClaimsDetails} = this.props.claimStore;\r\n        if(rejectedClaimsDetails === null) {\r\n            return (\r\n                <div className='search-claim-container container-fluid'>\r\n                    <Spinner />\r\n                </div>\r\n            )\r\n        }\r\n        const {tableHeader, tableRows} = rejectedClaimsDetails;\r\n        const rows = toJS(JSON.parse(JSON.stringify(tableRows)));\r\n        const headers = toJS(JSON.parse(JSON.stringify(tableHeader)));\r\n        if(headers.length > 0 && rows.length > 0 &&\r\n            checkRenderPermissions(permissions.CAN_SEE_REJECT_CLAIMS_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            headers.push({key: 'view', label: ''});\r\n            rows.forEach(row => {\r\n                row.view = <a onClick={() => this.handleViewDetailClick(row)} className='reject-link'>View</a>\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className='reject-claim-container container-fluid'>\r\n                <div className='reject-claim-panel'>\r\n                    {\r\n                        headers && headers.length > 0\r\n                            ? <ReactTable tableHeader={headers} rowData={rows} className='search-claim-data-table'/>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        let renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) &&\r\n            checkRenderPermissions(permissions.CAN_SEE_REJECT_CLAIMS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderView();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default RejectClaim;\r\n","import React from \"react\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nclass ClaimSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            drawDate: null,\r\n            ticketStatus: '',\r\n            paymentStatus: '',\r\n            ticketStatuses: [{\r\n                id: 0,\r\n                value: 'Select'\r\n            }, {\r\n                id: 1,\r\n                value: 'TicketStatus1'\r\n            }, {\r\n                id: 2,\r\n                value: 'TicketStatus2'\r\n            }, {\r\n                id: 3,\r\n                value: 'TicketStatus3'\r\n            }, {\r\n                id: 4,\r\n                value: 'TicketStatus4'\r\n            }, {\r\n                id: 5,\r\n                value: 'TicketStatus5'\r\n            }],\r\n            paymentStatuses: [{\r\n                id: 0,\r\n                value: 'Select'\r\n            }, {\r\n                id: 1,\r\n                value: 'PaymentStatus1'\r\n            }, {\r\n                id: 2,\r\n                value: 'PaymentStatus2'\r\n            }, {\r\n                id: 3,\r\n                value: 'PaymentStatus3'\r\n            }, {\r\n                id: 4,\r\n                value: 'PaymentStatus4'\r\n            }, {\r\n                id: 5,\r\n                value: 'PaymentStatus5'\r\n            }]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = Number(e.target.value);\r\n        this.setState({[stateName]: val});\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {firstName, lastName, drawDate, ticketStatus, paymentStatus} = this.state;\r\n        this.props.handleSearchClick(firstName, lastName, drawDate, ticketStatus, paymentStatus);\r\n    }\r\n\r\n    render() {\r\n        const {firstName, lastName, drawDate, ticketStatus, paymentStatus, ticketStatuses, paymentStatuses} = this.state;\r\n\r\n        // Conditions to activate the [Search]\r\n        let isDisabled = true;\r\n        if (paymentStatus) {\r\n            isDisabled = false\r\n        } else if (ticketStatus) {\r\n            isDisabled = false\r\n        } else if (drawDate) {\r\n            isDisabled = false\r\n        } else if (lastName) {\r\n            isDisabled = false\r\n        } else if (firstName) {\r\n            if (lastName || drawDate || ticketStatus || paymentStatus) {\r\n                isDisabled = false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='claim-search-label'>First Name</div>\r\n                        <AppTextbox type='text' placeholder='First Name ' value={firstName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Last Name</div>\r\n                        <AppTextbox type='text' placeholder='Last Name ' value={lastName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Draw Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"Draw Date\"\r\n                                    selected={drawDate}\r\n                                    onChange={date => this.setState({drawDate: date})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Ticket Status</div>\r\n                        <select value={ticketStatus} onChange={(e) => this.handleSelectChange(e, 'ticketStatus')}>\r\n                            {\r\n                                ticketStatuses.map(identifier => {\r\n                                    return <option value={identifier.id}>{identifier.value}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Payment Status</div>\r\n                        <select value={paymentStatus} onChange={(e) => this.handleSelectChange(e, 'paymentStatus')}>\r\n                            {\r\n                                paymentStatuses.map(identifier => {\r\n                                    return <option value={identifier.id}>{identifier.value}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <Button disabled={isDisabled} className='claim-search-btn' onClick={() => this.onSearch()}>\r\n                            Search\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ClaimSearch;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimUpdate from \"./ClaimUpdate\";\r\n\r\nconst ClaimUpdateComponent = AuthLayoutHOC(ClaimUpdate);\r\n\r\nexport default ClaimUpdateComponent;","import React from \"react\";\r\nimport './ClaimUpdate.css';\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport config from \"../../config\";\r\nimport ClaimSearch from \"../claimsearch\";\r\nimport AppToast from \"../../toast\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n\r\nclass ClaimUpdate extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: [],\r\n            tableHeader: [],\r\n            showToast: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onToastClose = () => {\r\n        this.setState({showToast: false});\r\n    }\r\n\r\n    handleSelectClick = (event, id) => {\r\n        event.preventDefault();\r\n        this.props.history.push(`/claim/edit/${id}`);\r\n    }\r\n\r\n    setTableData = (data) => {\r\n        if (data.length === 0) {\r\n            this.setState({showToast: true, userList: [], tableHeader: []});\r\n        } else {\r\n            const rows = data.map((d, index) => {\r\n                d.idField = index + 1;\r\n                d.select = checkRenderPermissions(permissions.UPDATE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <a onClick={(e) => this.handleSelectClick(e, d.id)} href=''\r\n                       className='select-link'>Update</a> : null;\r\n                return d;\r\n            });\r\n\r\n            const tableHeader = [\r\n                {key: 'ticketnumber', label: 'Ticket#'},\r\n                {key: 'firstname', label: 'First Name'},\r\n                {key: 'lastname', label: 'Last Name'},\r\n                {key: 'drawdate', label: 'Draw date'},\r\n                {key: 'ticketstatus', label: 'Ticket Status'},\r\n                {key: 'select', label: 'Update'}\r\n            ];\r\n            this.setState({tableHeader: tableHeader, userList: rows});\r\n        }\r\n    }\r\n\r\n    onSearchClick = (firstName = '', lastName = '', drawDate = '', ticketStatus = '', paymentStatus = '') => {\r\n\r\n        let queryParams = 'limit=50';\r\n        if (firstName && firstName !== '') {\r\n            queryParams += `&firstname=${firstName}`\r\n        }\r\n        if (lastName && lastName !== '') {\r\n            queryParams += `&lastname=${lastName}`\r\n        }\r\n        if (drawDate && drawDate !== '') {\r\n            queryParams += `&drawdate=${drawDate}`\r\n        }\r\n        if (ticketStatus && ticketStatus !== '') {\r\n            queryParams += `&ticketstatus=${ticketStatus}`\r\n        }\r\n        if (paymentStatus && paymentStatus !== '') {\r\n            queryParams += `&paymentstatus=${paymentStatus}`\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/claim/search?${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else {\r\n                    this.setTableData(res);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    renderClaimUpdate() {\r\n        const {tableHeader, userList, showToast} = this.state;\r\n        const msg = 'No Results found.';\r\n        return (\r\n            <div className='claim-search-container container-fluid'>\r\n                <div className='claim-search-panel claim-search-child'>\r\n                    <ClaimSearch handleSearchClick={this.onSearchClick}/>\r\n                </div>\r\n                {\r\n                    userList && userList.length > 0 && tableHeader\r\n                        ? <ReactTable tableHeader={tableHeader} rowData={userList} className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {\r\n                    showToast ? <AppToast showToast={showToast} message={msg} isSuccessMessage={true}\r\n                                          handleClose={this.onToastClose}/> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) &&\r\n            checkRenderPermissions(permissions.UPDATE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderClaimUpdate();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ClaimUpdate;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimResearch from \"./ClaimResearch\";\r\n\r\nconst ClaimResearchComponent = AuthLayoutHOC(ClaimResearch);\r\n\r\nexport default ClaimResearchComponent;","import React from \"react\";\r\nimport './ClaimResearch.css';\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport AppToast from \"../../toast\";\r\nimport ClaimSearch from \"../claimsearch\";\r\nimport config from \"../../config\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\nclass ClaimResearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: [],\r\n            tableHeader: [\r\n                {key: 'ticketnumber', label: 'Ticket#'},\r\n                {key: 'firstname', label: 'First Name'},\r\n                {key: 'lastname', label: 'Last Name'},\r\n                {key: 'drawdate', label: 'Draw date'},\r\n                {key: 'ticketstatus', label: 'Ticket Status'},\r\n                {key: 'select', label: 'View'}\r\n            ],\r\n            showToast: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onToastClose = () => {\r\n        this.setState({showToast: false});\r\n    }\r\n\r\n    handleSelectClick = (event, id) => {\r\n        event.preventDefault();\r\n        this.props.history.push(`/claim/view/${id}`);\r\n    }\r\n\r\n    setTableData = (data) => {\r\n        if (data.length === 0) {\r\n            this.setState({showToast: true, userList: [], tableHeader: []});\r\n        } else {\r\n            const rows = data.map((d, index) => {\r\n                d.idField = index + 1;\r\n                d.select = checkRenderPermissions(permissions.DO_CLAIM_RESEARCH, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <a onClick={(e) => this.handleSelectClick(e, d.id)} href='' className='select-link'>View</a> : null;\r\n                return d;\r\n            });\r\n\r\n            this.setState({userList: rows});\r\n        }\r\n    }\r\n\r\n    onSearchClick = (firstName = '', lastName = '', drawDate = '', ticketStatus = '', paymentStatus = '') => {\r\n\r\n        let queryParams = 'limit=50';\r\n        if (firstName && firstName !== '') {\r\n            queryParams += `&firstname=${firstName}`\r\n        }\r\n        if (lastName && lastName !== '') {\r\n            queryParams += `&lastname=${lastName}`\r\n        }\r\n        if (drawDate && drawDate !== '') {\r\n            queryParams += `&drawdate=${drawDate}`\r\n        }\r\n        if (ticketStatus && ticketStatus !== '') {\r\n            queryParams += `&ticketstatus=${ticketStatus}`\r\n        }\r\n        if (paymentStatus && paymentStatus !== '') {\r\n            queryParams += `&paymentstatus=${paymentStatus}`\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/claim/search?${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else {\r\n                    this.setTableData(res);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    renderClaimResearch() {\r\n        const {tableHeader, userList, showToast} = this.state;\r\n        const msg = 'No Results found.';\r\n        return (\r\n            <div className='claim-search-container container-fluid'>\r\n                <div className='claim-search-panel claim-search-child'>\r\n                    <ClaimSearch handleSearchClick={this.onSearchClick}/>\r\n                </div>\r\n                {\r\n                    userList && userList.length > 0 && tableHeader\r\n                        ? <ReactTable tableHeader={tableHeader} rowData={userList} className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {\r\n                    showToast ? <AppToast showToast={showToast} message={msg} isSuccessMessage={true}\r\n                                          handleClose={this.onToastClose}/> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) &&\r\n            checkRenderPermissions(permissions.DO_CLAIM_RESEARCH, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderClaimResearch();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ClaimResearch;\r\n","import React from \"react\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport './TableComponent.css';\r\n\r\nclass TableComponent  extends  React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableOffset: 1\r\n        }\r\n    }\r\n    handleNavigation = (e, navId) => {\r\n        e.preventDefault();\r\n        const _off = Number(navId);\r\n        this.setState({tableOffset: _off});\r\n    }\r\n    render() {\r\n        const {tableHeader, rowData, header, handleColumnCLick, children, className} = this.props;\r\n        const totalRows = [];\r\n        const {tableOffset} = this.state;\r\n        const rowCount = rowData.length;\r\n        if(rowCount > 5) {\r\n            const navigationLength = rowData.length / 5;\r\n            for(let i=0; i < navigationLength; i++) {\r\n                totalRows.push(i+1);\r\n            }\r\n        }\r\n        let tableRows = [];\r\n        if(rowCount) {\r\n            const lastIndex = tableOffset * 5;\r\n            const startIndex = lastIndex - 5;\r\n            tableRows = rowData.slice(startIndex, lastIndex)\r\n        }\r\n        let showNext = false;\r\n        let showPrev = false;\r\n        if(rowCount > 25) {\r\n            showNext = true;\r\n            showPrev = true;\r\n        }\r\n\r\n        return (\r\n            <div className={`custom-table ${className || ''}`}>\r\n                {header ? <div className='table-header'>{header}</div> : null}\r\n                <div className='my-table'>\r\n                <Table className='app-table' >\r\n                    <thead>\r\n                    <tr>\r\n                        {\r\n                            tableHeader && tableHeader.map(header => {\r\n                                return <th key={header.key}>{header.label}</th>\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                    {\r\n                        tableRows && tableRows.map((row, index) => {\r\n                            return <tr key={index}>\r\n                                {\r\n                                    tableHeader.map(column => {\r\n                                        return <td>{row[column.key]}</td>\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                <nav aria-label=\"Page navigation example\">\r\n                    <ul className=\"pagination justify-content-end\">\r\n                        {\r\n                            totalRows.map((r, index) => {\r\n                                return <li\r\n                                    className={`page-item ${index +1 === tableOffset ? 'active': ''}`}\r\n                                    onClick={(e) => this.handleNavigation(e, index+1)}\r\n                                >\r\n                                    <a className=\"page-link\" href=\"#\">\r\n                                        {index+1}\r\n                                    </a>\r\n                                </li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n                </div>\r\n                {\r\n                    children || null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableComponent;\r\n","import React from \"react\";\r\nimport './ClaimDetailsEditable.css';\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport config from \"../../config\";\r\nimport AppToast from \"../../toast\";\r\nimport TableComponent from \"../../TableComponent\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport {inject} from \"mobx-react\";\r\n\r\ninject('authStore')\r\nclass ClaimDetailsEditable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: 'Ryan',\r\n            lastName: 'Olsen',\r\n            ticketNumber: '123',\r\n            drawDate: '1990-12-25',\r\n            game: 'LuckyDraw',\r\n            ticketStatus: 'Pending',\r\n            totalPrizeAmount: '4000',\r\n            taxAmount: '50',\r\n            netAmount: '4500',\r\n            wagerAmount: '50',\r\n            wagerType: 'Sample',\r\n            paymentStatus: 'Pending',\r\n            showSuccess: false,\r\n            successMessage: '',\r\n            showToast: false,\r\n            userList: [],\r\n            tableHeader: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = (this.props.match.params.id);\r\n        this.setState({}, () => this.fetchClaimDetails(id));\r\n        const res = [\r\n            {\r\n                status: 'status1',\r\n                statusDate: '2020-12-01',\r\n                claimsAgent: 'Ryan Feller',\r\n                reasonCode: 'reason code1',\r\n            },\r\n            {\r\n                status: 'status2',\r\n                statusDate: '2020-06-01',\r\n                claimsAgent: 'John Olsen',\r\n                reasonCode: 'reason code1',\r\n            },\r\n            {\r\n                status: 'status3',\r\n                statusDate: '2020-04-01',\r\n                claimsAgent: 'Sam Wyatt',\r\n                reasonCode: 'reason code1',\r\n            },\r\n        ];\r\n        this.setTableData(res);\r\n    }\r\n\r\n    fetchClaimDetails = (id) => {\r\n        fetch(`${config.SERVER_BASE_URL}/v1/claim/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else {\r\n                    //this.setPlayerDetails(res[0]);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    setTableData = (data) => {\r\n        /*if (data.length === 0) {\r\n            this.setState({showToast: true, userList: [], tableHeader: []});\r\n        } else {\r\n            const rows = data.map((d, index) => {\r\n                d.idField = index + 1;\r\n                d.select = <a onClick={(e) => this.handleSelectClick(e, d.id)} href='' className='select-link'>View</a>;\r\n                return d;\r\n            });\r\n\r\n            const tableHeader = [\r\n                {key: 'ticketnumber', label: 'Ticket#'},\r\n                {key: 'firstname', label: 'First Name'},\r\n                {key: 'lastname', label: 'Last Name'},\r\n                {key: 'drawdate', label: 'Draw date'},\r\n                {key: 'ticketstatus', label: 'Ticket Status'},\r\n                {key: 'select', label: 'View'}\r\n            ];\r\n            this.setState({tableHeader: tableHeader, userList: rows});\r\n        }*/\r\n\r\n        const tableHeader = [\r\n            {key: 'status', label: 'Status'},\r\n            {key: 'statusDate', label: 'Status Date'},\r\n            {key: 'claimsAgent', label: 'Claims Agent'},\r\n            {key: 'reasonCode', label: 'Reason Code'}\r\n        ];\r\n        this.setState({tableHeader: tableHeader, userList: data});\r\n\r\n    }\r\n\r\n    renderClaimDetailsEditable() {\r\n        const {\r\n            showToast, showSuccess, successMessage,\r\n            firstName, lastName, ticketNumber, drawDate, game,\r\n            ticketStatus, totalPrizeAmount, taxAmount, netAmount,\r\n            wagerAmount, wagerType, paymentStatus,\r\n            tableHeader, userList\r\n        } = this.state;\r\n        return (\r\n            <div className='player-details-container container-fluid '>\r\n                {showToast\r\n                    ? <AppToast showToast={showSuccess} message={successMessage} isSuccessMessage={true}\r\n                                handleClose={() => this.handleToastClose('showSuccess')}/>\r\n                    : null\r\n                }\r\n                <div className='claim-details-panel'>\r\n                    <div className='claim-details-child '>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Ticket#</div>\r\n                                <div className='claim-details-value'>{ticketNumber}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>First Name</div>\r\n                                <AppTextbox type='text' placeholder='Enter First Name' value={firstName}\r\n                                            onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Last Name</div>\r\n                                <AppTextbox type='text' placeholder='Enter Last Name' value={lastName}\r\n                                            onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Ticket Status</div>\r\n                                <div className='claim-details-value'>{ticketStatus}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Draw Date</div>\r\n                                <div className='claim-details-value'>{drawDate}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Game</div>\r\n                                <div className='claim-details-value'>{game}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Total Prize Amount</div>\r\n                                <AppTextbox type='text' placeholder='Enter Total Prize Amount' value={totalPrizeAmount}\r\n                                            onChange={(e) => this.handleInputChange(e, 'totalPrizeAmount')}/>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Tax Amount</div>\r\n                                <AppTextbox type='text' placeholder='Enter Tax Amount' value={taxAmount}\r\n                                            onChange={(e) => this.handleInputChange(e, 'taxAmount')}/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Net Amount</div>\r\n                                <AppTextbox type='text' placeholder='Enter Net Amount' value={netAmount}\r\n                                            onChange={(e) => this.handleInputChange(e, 'netAmount')}/>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Wager Amount</div>\r\n                                <AppTextbox type='text' placeholder='Enter Wager Amount' value={wagerAmount}\r\n                                            onChange={(e) => this.handleInputChange(e, 'wagerAmount')}/>\r\n                            </div>\r\n\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Wager Type</div>\r\n                                <div className='claim-details-value'>{wagerType}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Payment Status</div>\r\n                                <div className='claim-details-value'>{paymentStatus}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <TableComponent tableHeader={tableHeader} rowData={userList} className='search-table'/>\r\n                        </div>\r\n                    </div>\r\n                    <hr className='separator'/>\r\n                    <div className='row claim-button-row'>\r\n                        <div className='offset-6 col-3 button-column'>\r\n                            <Button disabled={false} className='claim-details-btn'\r\n                                    onClick={() => this.handleSubmit()}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                        <div className='col-3 button-column'>\r\n                            <Button className='claim-details-btn ' onClick={() => this.handleCancel()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) &&\r\n            checkRenderPermissions(permissions.UPDATE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderClaimDetailsEditable();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ClaimDetailsEditable;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimDetailsEditable from \"./ClaimDetailsEditable\";\r\n\r\nconst ClaimDetailsEditableComponent = AuthLayoutHOC(ClaimDetailsEditable);\r\n\r\nexport default ClaimDetailsEditableComponent;","import React from \"react\";\r\nimport './ClaimDetailsReadOnly.css';\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport AppToast from \"../../toast\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport config from \"../../config\";\r\nimport TableComponent from \"../../TableComponent\";\r\nimport {inject} from \"mobx-react\";\r\n\r\ninject('authStore')\r\nclass ClaimDetailsReadOnly extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: 'Ryan',\r\n            lastName: 'Olsen',\r\n            ticketNumber: '123',\r\n            drawDate: '1990-12-25',\r\n            game: 'LuckyDraw',\r\n            ticketStatus: 'Pending',\r\n            totalPrizeAmount: '4000',\r\n            taxAmount: '50',\r\n            netAmount: '4500',\r\n            wagerAmount: '50',\r\n            wagerType: 'Sample',\r\n            paymentStatus: 'Pending',\r\n            showSuccess: false,\r\n            successMessage: '',\r\n            showToast: false,\r\n            userList: [],\r\n            tableHeader: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = (this.props.match.params.id);\r\n        this.setState({}, () => this.fetchClaimDetails(id));\r\n        const res = [\r\n            {\r\n                status: 'status1',\r\n                statusDate: '2020-12-01',\r\n                claimsAgent: 'Ryan Feller',\r\n                reasonCode: 'reason code1',\r\n            },\r\n            {\r\n                status: 'status2',\r\n                statusDate: '2020-06-01',\r\n                claimsAgent: 'John Olsen',\r\n                reasonCode: 'reason code1',\r\n            },\r\n            {\r\n                status: 'status3',\r\n                statusDate: '2020-04-01',\r\n                claimsAgent: 'Sam Wyatt',\r\n                reasonCode: 'reason code1',\r\n            },\r\n        ];\r\n        this.setTableData(res);\r\n    }\r\n\r\n    fetchClaimDetails = (id) => {\r\n        fetch(`${config.SERVER_BASE_URL}/v1/claim/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else {\r\n                    //this.setPlayerDetails(res[0]);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    setTableData = (data) => {\r\n        /*if (data.length === 0) {\r\n            this.setState({showToast: true, userList: [], tableHeader: []});\r\n        } else {\r\n            const rows = data.map((d, index) => {\r\n                d.idField = index + 1;\r\n                d.select = <a onClick={(e) => this.handleSelectClick(e, d.id)} href='' className='select-link'>View</a>;\r\n                return d;\r\n            });\r\n\r\n            const tableHeader = [\r\n                {key: 'ticketnumber', label: 'Ticket#'},\r\n                {key: 'firstname', label: 'First Name'},\r\n                {key: 'lastname', label: 'Last Name'},\r\n                {key: 'drawdate', label: 'Draw date'},\r\n                {key: 'ticketstatus', label: 'Ticket Status'},\r\n                {key: 'select', label: 'View'}\r\n            ];\r\n            this.setState({tableHeader: tableHeader, userList: rows});\r\n        }*/\r\n\r\n        const tableHeader = [\r\n            {key: 'status', label: 'Status'},\r\n            {key: 'statusDate', label: 'Status Date'},\r\n            {key: 'claimsAgent', label: 'Claims Agent'},\r\n            {key: 'reasonCode', label: 'Reason Code'}\r\n        ];\r\n        this.setState({tableHeader: tableHeader, userList: data});\r\n\r\n    }\r\n\r\n    renderClaimReportsQueries() {\r\n\r\n        const {\r\n            showToast, showSuccess, successMessage,\r\n            firstName, lastName, ticketNumber, drawDate, game,\r\n            ticketStatus, totalPrizeAmount, taxAmount, netAmount,\r\n            wagerAmount, wagerType, paymentStatus,\r\n            tableHeader, userList\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='player-details-container container-fluid '>\r\n                {showToast\r\n                    ? <AppToast showToast={showSuccess} message={successMessage} isSuccessMessage={true}\r\n                                handleClose={() => this.handleToastClose('showSuccess')}/>\r\n                    : null\r\n                }\r\n                <div className='claim-details-panel'>\r\n                    <div className='claim-details-child '>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Ticket#</div>\r\n                                <div className='claim-details-value'>{ticketNumber}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>First Name</div>\r\n                                <div className='claim-details-value'>{firstName}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Last Name</div>\r\n                                <div className='claim-details-value'>{lastName}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>Ticket Status</div>\r\n                                <div className='claim-details-value'>{ticketStatus}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>drawDate</div>\r\n                                <div className='claim-details-value'>{drawDate}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>game</div>\r\n                                <div className='claim-details-value'>{game}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>totalPrizeAmount</div>\r\n                                <div className='claim-details-value'>{totalPrizeAmount}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>taxAmount</div>\r\n                                <div className='claim-details-value'>{taxAmount}</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>netAmount</div>\r\n                                <div className='claim-details-value'>{netAmount}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>wagerAmount</div>\r\n                                <div className='claim-details-value'>{wagerAmount}</div>\r\n                            </div>\r\n\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>wagerType</div>\r\n                                <div className='claim-details-value'>{wagerType}</div>\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <div className='claim-details-label'>paymentStatus</div>\r\n                                <div className='claim-details-value'>{paymentStatus}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <TableComponent tableHeader={tableHeader} rowData={userList} className='search-table'/>\r\n                        </div>\r\n                    </div>\r\n                    <hr className='separator'/>\r\n                    <div className='row claim-button-row'>\r\n                        <div className='col-3 button-column'>\r\n                            <Button className='claim-details-btn ' onClick={() => this.handleCancel()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) &&\r\n            checkRenderPermissions(permissions.DO_CLAIM_RESEARCH, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderClaimReportsQueries();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ClaimDetailsReadOnly;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimDetailsReadOnly from \"./ClaimDetailsReadOnly\";\r\n\r\nconst ClaimDetailsReadOnlyComponent = AuthLayoutHOC(ClaimDetailsReadOnly);\r\n\r\nexport default ClaimDetailsReadOnlyComponent;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimReports from \"./ClaimReports\";\r\n\r\nconst ClaimReportsComponent = AuthLayoutHOC(ClaimReports);\r\n\r\nexport default ClaimReportsComponent;\r\n","import React from \"react\";\r\nimport CustomCard from '../../dashboard/customCard';\r\nimport './ClaimReports.css'\r\nimport {checkRenderPermissions} from '../../helpers';\r\nimport {permissions} from '../../constants';\r\n\r\nclass ClaimReports extends React.Component {\r\n\r\n    navigateTo = (path, query) => {\r\n        if (query != '') {\r\n            this.props.history.push({pathname: path, state: {detail: query}});\r\n        } else {\r\n            this.props.history.push(path);\r\n        }\r\n    }\r\n\r\n    renderClaimReports() {\r\n        return (\r\n            <div className='app-center-body'>\r\n                {checkRenderPermissions(permissions.CAN_SEE_TICKET_STATUS_CLAIMED_CLAIM_REPORT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Ticket Status – Claimed'\r\n                        handleCallback={() => this.navigateTo('/comingsoon', '?limit=100&accountenabled=false')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_SEE_DRAW_DATE_7_DAYS_CLAIM_REPORT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Draw Date – 7 Days'\r\n                        handleCallback={() => this.navigateTo('/comingsoon', '?limit=100&IDcheckresult=Failed')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_SEE_DRAW_DATE_30_DAYS_CLAIM_REPORT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Draw Date – 30 Days'\r\n                        handleCallback={() => this.navigateTo('/comingsoon', '?limit=100&IDchecksource=')}\r\n                    /> : null}\r\n                {checkRenderPermissions(permissions.CAN_SEE_CUSTOM_CLAIM_REPORT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Custom'\r\n                        handleCallback={() => this.navigateTo('/comingsoon')}\r\n                    /> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (true) {\r\n            renderObj = this.renderClaimReports();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClaimReports;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimReportsCustom from \"./ClaimReportsCustom\";\r\n\r\nconst ClaimReportsCustomComponent = AuthLayoutHOC(ClaimReportsCustom);\r\n\r\nexport default ClaimReportsCustomComponent;","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport './ClaimReportsCustom.css';\r\nimport AppToast from \"../../toast\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\n\r\nclass ClaimReportsCustom extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            drawDate:'',\r\n            ticketStatus:'',\r\n            paymentStatus:''\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName'\r\n            || stateName === 'city' || stateName === 'state' || stateName === 'county') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else if (stateName === 'cellPhone') {\r\n            const re = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || (re.test(e.target.value) && e.target.value.length <= 10)) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else if (stateName === 'email') {\r\n            const isValid = this.isEmailValid(e.target.value);\r\n            this.setState({[stateName]: e.target.value, isValidEmail: !!isValid});\r\n        } else if (stateName === 'zipcode') {\r\n            const regExp = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value) && e.target.value.length <= 5)) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n    handleToastClose = (stateName) => {\r\n        if (this.state.onYesClicked) {\r\n            this.props.history.goBack();\r\n        } else {\r\n            this.setState({showSuccess: false, successMessage: '', showToast: false})\r\n        }\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = Number(e.target.value);\r\n        this.setState({[stateName]: val});\r\n    }\r\n\r\n    navigateTo = (path, query) => {\r\n        console.log(query);\r\n        this.props.history.push({pathname: path, state: {detail: query}});\r\n    }\r\n\r\n    getFieldValue(obj, key) {\r\n        return obj.find((e) => e.id === key).value;\r\n    }\r\n\r\n    onSearch() {\r\n\r\n        var queryStr = '?limit=100';\r\n\r\n        if (this.state.firstName != \"\") {\r\n            queryStr += \"&firstname=\";\r\n            queryStr += this.state.firstName;\r\n        }\r\n        if (this.state.lastName != \"\") {\r\n            queryStr += \"&lastname=\";\r\n            queryStr += this.state.lastName;\r\n        }\r\n        if (this.state.drawDate != \"\") {\r\n            queryStr += \"&drawDate=\";\r\n            queryStr += this.state.drawDate;\r\n        }\r\n        if (this.state.ticketStatus != \"\") {\r\n            queryStr += \"&ticketStatus=\";\r\n            queryStr += this.state.ticketStatus;\r\n        }\r\n        if (this.state.paymentStatus != \"\") {\r\n            queryStr += \"&paymentStatus=\";\r\n            queryStr += this.state.paymentStatus;\r\n        }\r\n\r\n        this.navigateTo('/claimreports/customtable', queryStr);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            showToast, showSuccess, successMessage, firstName,\r\n            lastName, drawDate, ticketStatus, paymentStatus\r\n        } = this.state;\r\n        let isDisabled = true;\r\n\r\n        if (firstName || lastName || drawDate || ticketStatus || paymentStatus) {\r\n            isDisabled = false;\r\n        }\r\n\r\n        return (\r\n            <div class='player-report-container container-fluid'>\r\n                {showToast\r\n                    ? <AppToast showToast={showSuccess} message={successMessage} isSuccessMessage={true}\r\n                                handleClose={() => this.handleToastClose('showSuccess')}/>\r\n                    : null\r\n                }\r\n\r\n                <div className='player-reports-panel'>\r\n                    <div className='player-reports-child '>\r\n                        <div className='row'>\r\n                            <div className='col-2'>\r\n                                <div className='player-reports-label'>First Name</div>\r\n                                <AppTextbox type='text' placeholder='Enter First Name' value={firstName}\r\n                                            onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <div className='player-reports-label'>Last Name</div>\r\n                                <AppTextbox type='text' placeholder='Enter Last Name' value={lastName}\r\n                                            onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <div className='player-reports-label'>Draw Date</div>\r\n                                <AppTextbox type='text' value={drawDate}\r\n                                            onChange={(e) => this.handleInputChange(e, 'drawDate')}/>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <div className='player-reports-label'>TicketStatus</div>\r\n                                <AppTextbox type='text' value={ticketStatus}\r\n                                            onChange={(e) => this.handleInputChange(e, 'ticketStatus')}/>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <div className='player-reports-label'>Payment Status</div>\r\n                                <AppTextbox type='text' value={paymentStatus}\r\n                                            onChange={(e) => this.handleInputChange(e, 'paymentStatus')}/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-1 report-search-container'>\r\n                                <Button disabled={isDisabled} className='report-search-btn'\r\n                                        onClick={() => this.onSearch()}>\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClaimReportsCustom;","import React from \"react\";\r\nimport './sigcontainer.css';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {toJS} from \"mobx\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass SigContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.addDefaultSrc = this.addDefaultSrc.bind(this);\r\n    }\r\n\r\n    addDefaultSrc(ev) { \r\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE_EXPIRED, 'Claim ID: '+ this.props.playerStore.selectedClaimId, 'Failed to load signature, likely expired');\r\n        ev.target.src = '/images/failed-signature.png';\r\n    }\r\n    \r\n    render() {\r\n        const {eSignatureURL} = this.props.playerStore;\r\n        return (\r\n            <div>\r\n                <img className='sig-img' src={eSignatureURL} onError={this.addDefaultSrc}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SigContainer;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimDetails from \"./ClaimDetails\";\r\n\r\nconst ClaimDetailsComponent = AuthLayoutHOC(ClaimDetails);\r\n\r\nexport default ClaimDetailsComponent;","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './ClaimDetails.css';\r\nimport {toJS} from \"mobx\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport AppToast from \"../../toast\";\r\nimport SigContainer from '../../components/sigcontainer/sigcontainer';\r\n\r\n@inject('playerStore', 'claimStore')\r\n@observer\r\nclass ClaimDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            showConfirmModal: false,\r\n            showSigModal: false,\r\n            routingNumber: '',\r\n            confirmRoutingNumber: '',\r\n            accountNumber: '',\r\n            confirmAccountNumber: '',\r\n            bankName: null,\r\n            accountTypes: ['CHECKING', 'SAVINGS'],\r\n            selectedAccount: 'CHECKING',\r\n            showToast: false\r\n        };\r\n    }\r\n\r\n    onClose = (e) => {\r\n        //this.props.playerStore.clearESig();\r\n        this.setState({showSigModal: false});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.playerStore.fetchClaimDetails();\r\n        this.props.playerStore.fetchPaymentHistoryDetails();\r\n    }\r\n\r\n    handleW2GFormButtonClick = () => {\r\n        this.props.playerStore.fetchW2GFormForClaim();\r\n    }\r\n\r\n    handleESigFormButtonClick = () => {\r\n        //this.props.playerStore.fetchESigFormForClaim();\r\n\r\n        if(this.props.playerStore.eSignatureURL && this.props.playerStore.eSignatureURL != ''){\r\n            this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE, 'Claim ID: '+this.props.playerStore.selectedClaimId, '');\r\n            this.setState({showSigModal: true})\r\n        } else {\r\n            this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE_FAILED, 'Claim ID: '+this.props.playerStore.selectedClaimId, 'No E-Signature Link Provided');\r\n            this.setState({showToast: true})\r\n        }\r\n        //this.setState({showSigModal: true});\r\n    }\r\n\r\n    handleClaimHistoryDetailClick = () => {\r\n        // alert('Claim history click')\r\n    }\r\n\r\n    handlePaymentDetailClick = (paymentData) => {\r\n        this.props.playerStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: '+paymentData.transactionId, '');\r\n        this.props.playerStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\r\n    }\r\n\r\n    navigateToPaymentDetails = () => {\r\n        const id  = this.props.playerStore.selectedClaimId;\r\n        this.props.history.push(`/claim/${id}/paymenthistory`);\r\n    }\r\n\r\n    handleRepaymentButtonClick = () => {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    handleInputChange = (event, stateName) => {\r\n        const {value} = event.target;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (value === '' || re.test(value)) {\r\n            this.setState({[stateName]: value});\r\n        }\r\n    }\r\n\r\n    handleRoutingInputChange = async (event, stateName) => {\r\n        const {value} = event.target;\r\n        let bankName = null;\r\n        const {playerStore} = this.props;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (value === '' || re.test(value)) {\r\n            if(value.length === 9) {\r\n                playerStore.setSpinnerState(true);\r\n                await fetch(`https://www.routingnumbers.info/api/name.json?rn=${value}`, {\r\n                    method: 'GET',\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(res => {\r\n                        if(res.code === 200) {\r\n                            bankName = res.name;\r\n                            this.setState({[stateName]: value, bankName});\r\n                        } else {\r\n                            this.setState({[stateName]: value});\r\n                        }\r\n                        playerStore.setSpinnerState(false);\r\n                    })\r\n                    .catch((error) => {\r\n                        this.errorMessage = error.toString();\r\n                        playerStore.setSpinnerState(false);\r\n                    });\r\n            } else {\r\n                this.setState({[stateName]: value, bankName});\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleResubmitPayment = (referenceNumber) => {\r\n        const {routingNumber, accountNumber, selectedAccount} = this.state;\r\n        this.props.claimStore.resubmitACHPayment(referenceNumber, accountNumber, routingNumber, selectedAccount);\r\n    }\r\n    onYes = (referenceNumber) => {\r\n        this.setState({showConfirmModal: false}, () => this.handleResubmitPayment(referenceNumber));\r\n    }\r\n    onNo = () => {\r\n        this.setState({showConfirmModal: false, showModal:true});\r\n    }\r\n    onSubmit = () => {\r\n        this.setState({showConfirmModal: true, showModal: false});\r\n    }\r\n    onCancel = () => {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    onAccountTypeChange = event => {\r\n        this.setState({selectedAccount: event.target.value});\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.setState({showToast: false});\r\n    }\r\n\r\n\r\n    renderClaimDetails() {\r\n        if(this.props.playerStore.claimDetails && this.props.playerStore.selectedClaimId) {\r\n\r\n            const {showModal, showConfirmModal, showSigModal, routingNumber, confirmRoutingNumber, accountNumber,\r\n                confirmAccountNumber, bankName, accountTypes, selectedAccount, showToast} = this.state;\r\n            const {isSpinnerLoading} = this.props.playerStore;\r\n            let isSubmitDisabled = true;\r\n            \r\n            if(routingNumber && confirmRoutingNumber && confirmAccountNumber && accountNumber && bankName &&\r\n                routingNumber.length === 9 && confirmAccountNumber === accountNumber &&\r\n                confirmRoutingNumber === routingNumber) {\r\n                isSubmitDisabled = false;\r\n            }\r\n            \r\n\r\n            const data = toJS(this.props.playerStore.claimDetails)\r\n            const paymentHistoryTableRows = toJS(this.props.playerStore.paymentHistoryData);\r\n            const {selectedClaimDetails, claimHistoryTableHeader, claimHistoryTableRows, eSignatureData} = data;\r\n            const paymentHistoryTableHeader =  [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'transactionId', label: 'Transaction ID'},\r\n                {key: 'amount', label: 'Amount', classes: 'currency-column'},\r\n                {key: 'status', label: 'Status'},\r\n            ];\r\n            let rejectedCounter = 0;\r\n            if(checkRenderPermissions(permissions.CAN_SEE_CLAIM_TRANSACTION_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n                if(paymentHistoryTableRows && paymentHistoryTableRows.length > 0) {\r\n                    paymentHistoryTableHeader.push({key: 'view', label: 'View Details'});\r\n                    paymentHistoryTableRows.forEach(row => {\r\n                        if(row.status === 'REJECTED') {\r\n                            rejectedCounter++;\r\n                        }\r\n                        row.view = <a onClick={() => this.handlePaymentDetailClick(row)} className='claim-link'>View Details</a>\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            const {referenceNumber, serialNumber, barcode, ticketSerialNumber, ticketBarcode, prizeAmountInCents, taxWithholding,\r\n                offsetWithholding, status, netPaymentAmountInCents, rejectedCount} = selectedClaimDetails;\r\n            const canSeeESig = checkRenderPermissions(permissions.CAN_SEE_E_SIGNATURE,\r\n                JSON.parse(localStorage.getItem('userpolicies')));\r\n            const canSeeW2G = checkRenderPermissions(permissions.CAN_SEE_CLAIM_W2G,\r\n                JSON.parse(localStorage.getItem('userpolicies')));\r\n\r\n            const isResubmitDisabled = checkRenderPermissions(permissions.CAN_RESUBMIT_PAYMENT,\r\n                JSON.parse(localStorage.getItem('userpolicies')));\r\n\r\n            // claimHistoryTableRows.forEach(row => row.view = <a onClick={() => this.handleClaimHistoryDetailClick()} className='claim-link'>View Details</a>);\r\n\r\n            const isButtonEnabled = !(status === 'READY_FOR_PAYMENT' && rejectedCounter === 1);\r\n            return(\r\n                <div className='claim-container container-fluid'>\r\n                    {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={'No Signature found for Claim'}\r\n                              isSuccessMessage={false}\r\n                              handleClose={null}/>\r\n                    : null\r\n                }\r\n                    <div className='claim-panel'>\r\n                        <div className='claim-top-row'>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Reference #\r\n                                </div>\r\n                                <div>\r\n                                    {referenceNumber}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column big-column'>\r\n                                <div>\r\n                                    Ticket Serial #\r\n                                </div>\r\n                                <div>\r\n                                    {serialNumber}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column big-column'>\r\n                                <div>\r\n                                    Ticket Barcode\r\n                                </div>\r\n                                <div>\r\n                                    {barcode}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Prize Amount\r\n                                </div>\r\n                                <div>\r\n                                    ${prizeAmountInCents ?  (prizeAmountInCents/100).toFixed(2) : 0}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Tax Withholding\r\n                                </div>\r\n                                <div>\r\n                                    ${taxWithholding}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Offset Withholding\r\n                                </div>\r\n                                <div>\r\n                                    ${offsetWithholding}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Net Amount\r\n                                </div>\r\n                                <div>\r\n                                    ${netPaymentAmountInCents && netPaymentAmountInCents/100}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Status\r\n                                </div>\r\n                                <div>\r\n                                    {status}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal size='lg' show={showSigModal} className={`${``} role-modal`}>\r\n                        <Modal.Header>\r\n                            <h5>{'E-Signature'}</h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <SigContainer/>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onClose(e)}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    {\r\n                        claimHistoryTableHeader && claimHistoryTableRows\r\n                            ? <ReactTable tableHeader={claimHistoryTableHeader} rowData={claimHistoryTableRows}\r\n                                          className='claim-panel' header='Claim History'/>\r\n                            : null\r\n                    }\r\n                    {\r\n                        paymentHistoryTableHeader && paymentHistoryTableRows\r\n                            ? <ReactTable tableHeader={paymentHistoryTableHeader} rowData={paymentHistoryTableRows}\r\n                                          className='claim-panel' header='Payment History'/>\r\n                            : null\r\n                    }\r\n                    {\r\n                        canSeeESig\r\n                            ? <Button className='view-sig-button' onClick={() => this.handleESigFormButtonClick()}>\r\n                                View E-Signature\r\n                            </Button>\r\n                            : null\r\n                    }\r\n                    {\r\n                        canSeeW2G\r\n                            ? <Button className='view-pdf-button' onClick={() => this.handleW2GFormButtonClick()}>\r\n                                View W2G\r\n                            </Button>\r\n                            : null\r\n                    }\r\n                    {\r\n                        isResubmitDisabled\r\n                            ? <Button\r\n                                disabled={isButtonEnabled}\r\n                                className='resubmit-button'\r\n                                onClick={() => this.handleRepaymentButtonClick()}>\r\n                                Resubmit Payment\r\n                            </Button>\r\n                            : null\r\n                    }\r\n\r\n                    <Modal show={showModal} centered={true}>\r\n                        <Modal.Header>\r\n                            Resubmit Payment\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Routing Number'\r\n                                            value={routingNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            maxlength={9}\r\n                                            onChange={(e) => this.handleRoutingInputChange(e, 'routingNumber')}\r\n                                />\r\n                                {\r\n                                    routingNumber && bankName === null\r\n                                        ? <div className='warning-message'>Does Not Match Known Banks</div>\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    bankName ? <div className='bank-name'>{bankName}</div> : null\r\n                                }\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Re-Enter Routing Number'\r\n                                            value={confirmRoutingNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            maxlength={9}\r\n                                            onChange={(e) => this.handleInputChange(e, 'confirmRoutingNumber')}\r\n                                />\r\n                                {\r\n                                    routingNumber && confirmRoutingNumber && routingNumber !== confirmRoutingNumber\r\n                                        ? <div className='warning-message'>Routing Numbers Do Not Match</div>\r\n                                        : null\r\n                                }\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Account Number'\r\n                                            value={accountNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            onChange={(e) => this.handleInputChange(e, 'accountNumber')}\r\n                                />\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Re-Enter Account Number'\r\n                                            value={confirmAccountNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            onChange={(e) => this.handleInputChange(e, 'confirmAccountNumber')}\r\n                                />\r\n                                {\r\n                                    accountNumber && confirmAccountNumber && accountNumber !== confirmAccountNumber\r\n                                        ? <div className='warning-message'>Account Numbers Do Not Match</div>\r\n                                        : null\r\n                                }\r\n                                <div className='account-type-label'>Account Type</div>\r\n                                <select className='form-control account-select' value={selectedAccount} onChange={this.onAccountTypeChange}>\r\n                                    {\r\n                                        accountTypes.map(account => {\r\n                                            return <option value={account}>{account}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onCancel(e)}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant='primary' disabled={isSubmitDisabled}\r\n                                    onClick={(e) => this.onSubmit(e)}>\r\n                                Submit\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={showConfirmModal} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you wish to submit this Payment?\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onNo(e)}>No</Button>\r\n                            <Button variant='primary' onClick={() => this.onYes(referenceNumber)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className='claim-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        let renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_SEE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies')))\r\n            && checkRenderPermissions(permissions.CAN_SEE_CLAIM_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderClaimDetails();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ClaimDetails;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ClaimPaymentHistory from \"./ClaimPaymentHistory\";\r\n\r\nconst ClaimPaymentHistoryComponent = AuthLayoutHOC(ClaimPaymentHistory);\r\n\r\nexport default ClaimPaymentHistoryComponent;\r\n","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {toJS} from \"mobx\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\n// import {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport './ClaimPaymentHistory.css';\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass ClaimPaymentHistory extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    setModalState = (flag) => {\r\n        this.setState({showModal: flag});\r\n    }\r\n    render() {\r\n        const {showModal} = this.state;\r\n        const canSeeAccountData = checkRenderPermissions(permissions.CAN_SEE_CLAIM_TRANSACTION_PII,\r\n            JSON.parse(localStorage.getItem('userpolicies')));\r\n\r\n        debugger;\r\n        const paymentDetails = toJS(this.props.playerStore.paymentDetails);\r\n        if(!paymentDetails) {\r\n            return <div className='claim-payment-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        }\r\n        const {date, amount, status, achAccount} = paymentDetails;\r\n        const {achAccountType, achAccountNumber, achRoutingNumber} = achAccount;\r\n        return (\r\n            <div className='claim-payment-container container-fluid'>\r\n                <div className='claim-payment-panel'>\r\n                    <div className='row claim-payment-panel-row'>\r\n                        <div className='col-4'>\r\n                            <div>Date of Submission</div>\r\n                            <div>{date}</div>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <div>Amount</div>\r\n                            <div>${amount}</div>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <div>Status</div>\r\n                            <div>{status}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row claim-payment-panel-row'>\r\n                        <div className='col-4'>\r\n                            <div>Account Type</div>\r\n                            <div>{achAccountType || ''}</div>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <div>Account Number</div>\r\n                            <div>**********</div>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <div>Routing Number</div>\r\n                            <div>**********</div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            canSeeAccountData\r\n                            ? <Button\r\n                                    className='show-detail-button'\r\n                                    onClick={() => this.setModalState(true)}>\r\n                                    Show Details\r\n                                </Button>\r\n                            : null\r\n                        }\r\n\r\n                    </div>\r\n                    {/*Date, amount, Status, achAccountType, achAccountNumber,achRoutingNumber*/}\r\n                </div>\r\n                <Modal show={showModal} centered={true}>\r\n                    <Modal.Header>\r\n                        <h5> Account Information </h5>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='modal-unmasked-detail'>\r\n                            Account Number: {achAccountNumber}\r\n                        </div>\r\n                        <div className='modal-unmasked-detail'>\r\n                            Routing Number: {achRoutingNumber}\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={() => this.setModalState(false)}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClaimPaymentHistory;\r\n","import React from \"react\";\r\nimport './widget.css';\r\n\r\nclass Widget extends React.Component {\r\n    render() {\r\n        const {title, value, iconPath, handleCallback} = this.props;\r\n\r\n        return (\r\n            <div className='widget-card' onClick={handleCallback}>\r\n                <div className='widget-card-data'>{value}</div>\r\n                <div className='widget-card-label'>{title}</div>\r\n               {iconPath &&  <div className='widget-card-icon'> <img src={iconPath} /></div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Widget;","export const categories = {\r\n    ERROR: \"error\",\r\n    API_ERROR: \"api-error\",\r\n    WINNER: \"rtc winner\",\r\n    NON_RTC: \"non-rtc winner\",\r\n    NON_WINNER: \"non-winner\",\r\n    REJECTED: \"rejected\",\r\n    ENVIRONMENT: \"environment\",\r\n    KYC_ACCEPTED: \"kyc-accepted\",\r\n    KYC_REJECTED: \"kyc-rejected\",\r\n    TICKET_SCAN_VELOCITY: \"ticket-scan-threshold\"\r\n}","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport SystemDashboard from \"./SystemDashboard\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst SystemDashboardComponent = AuthLayoutHOC(SystemDashboard);\r\n\r\nexport default withRouter(SystemDashboardComponent);","import React from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport CustomCard from '../dashboard/customCard';\r\nimport Widget from '../components/widget/widget';\r\nimport config from \"../config\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport moment from \"moment\";\r\nimport {categories} from \"../Constants/SystemDashCategories\";\r\n\r\nimport './SystemDashboard.css';\r\n\r\nclass SystemDashboard extends React.Component {\r\n\r\n    optionsHour = {\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'hour'\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            }\r\n        }\r\n    }\r\n\r\n    optionsDay = {\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'day'\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    zeroLineColor: 'rgb(255, 255, 255, 0.2',\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            },\r\n            ticks: {\r\n                fontColor: \"white\",\r\n                fontSize: 14,\r\n            }\r\n        }\r\n    }\r\n\r\n    optionsWeek = {\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'week'\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    zeroLineColor: 'rgb(255, 255, 255, 0.2',\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            }\r\n        }\r\n    }\r\n\r\n    optionUptime = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            }\r\n        }\r\n    }\r\n\r\n    uptimeData = {\r\n        labels: [\r\n            'Up Time',\r\n            'Down Time'\r\n        ],\r\n        datasets: [{\r\n            data: [95, 5],\r\n            backgroundColor: [\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ],\r\n            hoverBackgroundColor: [\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ]\r\n        }]\r\n    };\r\n\r\n    playerData = {\r\n        datasets: [\r\n            {\r\n                label: 'EVENTS',\r\n                fill: false,\r\n                lineTension: 0,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    infrastructureData = {\r\n        datasets: [\r\n            {\r\n                label: 'EVENTS',\r\n                fill: false,\r\n                lineTension: 0,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    playerLabel = 'player';\r\n    infrastructureLabel = 'infrastructure';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            environemnt: 0,\r\n            apiErrors: 0,\r\n            errors: 0,\r\n            accepted: 0,\r\n            nonrtc: 0,\r\n            regAccepted: 0,\r\n            regRejected: 0,\r\n            playerData: this.playerData,\r\n            infrastructureData: this.infrastructureData,\r\n            queryStr: '',\r\n            winner: 0,\r\n            nonWinner: 0,\r\n            ticketScanVelocity: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setHours();\r\n    }\r\n\r\n    fetchSystemDetails = (length) => {\r\n        var address = `${config.LOG_SERVER_BASE_URL}/v1/log/events`;\r\n        //debugger;\r\n        if (length == 'hours') {\r\n            /*var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n            var yyyy = today.getFullYear();\r\n\r\n            today = '.' + yyyy + '.' + mm + '.' + dd;\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/dayevents?date=${today}`;*/\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=24`;\r\n        }\r\n        if (length == 'days') {\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=168`;\r\n        }\r\n        if (!length || length == 'weeks') {\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=720`;\r\n        }\r\n\r\n        fetch(address, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else {\r\n                    this.setSystemDetails(res);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    setSystemDetails = (res) => {\r\n        let environemnt = 0;\r\n        let apiErrors = 0;\r\n        let errors = 0;\r\n        let winner = 0;\r\n        let nonrtc = 0;\r\n        let regAccepted = 0;\r\n        let regRejected = 0;\r\n        let nonWinner = 0;\r\n        let ticketScanVelocity = 0;\r\n\r\n        res.hits.hits.forEach((hit) => {\r\n            //console.log(hit);\r\n            //debugger;\r\n            if (hit._source.category === categories.ERROR) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel)\r\n                errors++;\r\n            }\r\n            if (hit._source.category === categories.API_ERROR) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel)\r\n                apiErrors++;\r\n            }\r\n            if (hit._source.category === categories.WINNER) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                winner++;\r\n            }\r\n            if (hit._source.category === categories.NON_WINNER) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                nonWinner++;\r\n            }\r\n            if (hit._source.category === categories.NON_RTC) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                nonrtc++;\r\n            }\r\n            if (hit._source.category === categories.ENVIRONMENT) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel)\r\n                environemnt++;\r\n            }\r\n            if (hit._source.category === categories.KYC_ACCEPTED) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                regAccepted++;\r\n            }\r\n            if (hit._source.category === categories.KYC_REJECTED) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                regRejected++;\r\n            }\r\n            if (hit._source.category === categories.TICKET_SCAN_VELOCITY) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                ticketScanVelocity++;\r\n            }\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                environemnt: environemnt,\r\n                apiErrors: apiErrors,\r\n                errors: errors,\r\n                winner: winner,\r\n                nonWinner: nonWinner,\r\n                nonrtc: nonrtc,\r\n                regAccepted: regAccepted,\r\n                regRejected: regRejected,\r\n                playerData: this.playerData,\r\n                infrastructureData: this.infrastructureData,\r\n                ticketScanVelocity: ticketScanVelocity\r\n            }\r\n        )\r\n    }\r\n\r\n    navigateTo = (path, query) => {\r\n        if (query != '') {\r\n            this.props.history.push({pathname: path, state: {detail: query}});\r\n        } else {\r\n            this.props.history.push(path);\r\n        }\r\n    }\r\n\r\n    incDataSetValues(datetime, graph) {\r\n        var date = new Date(datetime);\r\n        if (graph == 'player') {\r\n            for (var i = 0; i < this.playerData.datasets[0].data.length; i++) {\r\n                //var storedDate = this.playerData.datasets[0].data[i].y;\r\n                if (date.getTime() > this.playerData.datasets[0].data[i].x.getTime()) {\r\n                    if (i == this.playerData.datasets[0].data.length - 1) {\r\n                        this.playerData.datasets[0].data[i].y++;\r\n                    } else {\r\n                        if (date.getTime() < this.playerData.datasets[0].data[i + 1].x.getTime()) {\r\n                            this.playerData.datasets[0].data[i].y++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (var i = 0; i < this.infrastructureData.datasets[0].data.length; i++) {\r\n                if (date.getTime() > this.infrastructureData.datasets[0].data[i].x.getTime()) {\r\n                    if (i == this.infrastructureData.datasets[0].data.length - 1) {\r\n                        this.infrastructureData.datasets[0].data[i].y++;\r\n                    } else {\r\n                        if (date.getTime() < this.infrastructureData.datasets[0].data[i + 1].x.getTime()) {\r\n                            this.infrastructureData.datasets[0].data[i].y++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Assigned length datetimes inc hours apart to the datasets for the graphs\r\n    getTimeLabels(length, inc) {\r\n        this.playerData.datasets[0].data = [];\r\n        this.infrastructureData.datasets[0].data = [];\r\n\r\n        var ts = new Date().getTime();\r\n\r\n        for (var i = 0; i < length; i++) {\r\n\r\n            var date = new Date(ts);\r\n\r\n            var dateDataPlayer = {\r\n                x: date,\r\n                y: 0\r\n            }\r\n\r\n            var dateDataInfrastructure = {\r\n                x: date,\r\n                y: 0\r\n            }\r\n\r\n            this.playerData.datasets[0].data.unshift(dateDataPlayer);\r\n            this.infrastructureData.datasets[0].data.unshift(dateDataInfrastructure);\r\n\r\n            ts = ts - (inc * 60 * 60 * 1000);\r\n        }\r\n        //console.log(this.playerData);\r\n        //console.log(this.infrastructureData);\r\n    }\r\n\r\n    setHours = () => {\r\n        //debugger;\r\n        var start = moment().subtract(1, 'day');\r\n        var end = moment();\r\n        var startDate = start.utc().format();\r\n        var endDate = end.utc().format();\r\n\r\n        this.setState({'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`});\r\n\r\n        this.getTimeLabels(24, 1);\r\n        this.fetchSystemDetails('hours');\r\n\r\n        this.setState({'playerData': this.playerData});\r\n        this.setState({'playerOptions': this.optionsHour});\r\n\r\n        this.setState({'infrastructureData': this.infrastructureData});\r\n        this.setState({'infrastructureOptions': this.optionsHour});\r\n    }\r\n\r\n    setDays = () => {\r\n        var start = moment().subtract(7, 'days');\r\n        var end = moment();\r\n        var startDate = start.utc().format();\r\n        var endDate = end.utc().format();\r\n\r\n        this.setState({'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`});\r\n        this.getTimeLabels(15, 12);\r\n        this.fetchSystemDetails('days');\r\n\r\n        this.setState({'playerData': this.playerData});\r\n        this.setState({'playerOptions': this.optionsDay});\r\n\r\n        this.setState({'infrastructureData': this.infrastructureData});\r\n        this.setState({'infrastructureOptions': this.optionsDay});\r\n    }\r\n\r\n    setWeeks = () => {\r\n        var start = moment().subtract(30, 'days');\r\n        var end = moment();\r\n        var startDate = start.utc().format();\r\n        var endDate = end.utc().format();\r\n\r\n        this.setState({'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`});\r\n        this.getTimeLabels(11, 72);\r\n        this.fetchSystemDetails('weeks');\r\n\r\n        this.setState({'playerData': this.playerData});\r\n        this.setState({'playerOptions': this.optionsWeek});\r\n\r\n        this.setState({'infrastructureData': this.infrastructureData});\r\n        this.setState({'infrastructureOptions': this.optionsWeek});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            environemnt, apiErrors, errors, winner, nonrtc, regAccepted, regRejected, playerData, playerOptions, infrastructureData,\r\n            infrastructureOptions, upTime, queryStr, nonWinner, ticketScanVelocity\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='system-dashboard-container'>\r\n                <div className='system-dashboard-widget-container'>\r\n                    <div className='c1r1'>\r\n                        <Widget\r\n                            value={winner}\r\n                            title='WINNER: RTC'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('winner'))}\r\n                            iconPath='/icons/communications-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c2r1'>\r\n                        <Widget\r\n                            value={nonrtc}\r\n                            title='WINNER: NON-RTC'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat(categories.NON_RTC))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c3r1'>\r\n                        <Widget\r\n                            value={nonWinner}\r\n                            title='NON-WINNER'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('non-winner'))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c4r1'>\r\n                        <Widget\r\n                            value={regAccepted}\r\n                            title='KYC-ACCEPTED'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('kyc-accepted'))}\r\n                            iconPath='/icons/communications-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={regRejected}\r\n                            title='KYC-REJECTED'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('kyc-rejected'))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c2r2'>\r\n                        <Widget\r\n                            value={ticketScanVelocity}\r\n                            title='TICKET-SCAN-VELOCITY'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat(categories.TICKET_SCAN_VELOCITY))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <h5 className='container-title'>Player</h5>\r\n                </div>\r\n                <div className='system-dashboard-widget-container'>\r\n                    <div className='c1r1'>\r\n                        <Widget\r\n                            value={environemnt}\r\n                            title='ENVIRONMENT'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('environment'))}\r\n                            iconPath='/icons/running-services-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c2r1'>\r\n                        <Widget\r\n                            value={apiErrors}\r\n                            title='API ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('api-error'))}\r\n                            iconPath='/icons/service-errors-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c3r1'>\r\n                        <Widget\r\n                            value={errors}\r\n                            title='ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('error'))}\r\n                            iconPath='/icons/IGT-errors-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <h5 className='container-title'>Infrastructure</h5>\r\n                </div>\r\n                <div className='system-dashboard-graph-container'>\r\n                    <div className='graphs-window'>\r\n                        <div className='system-dashboard-graph-mobile'>\r\n                            <h6 className='graph-title'>Player Alerts</h6>\r\n                            <Line data={playerData}\r\n                                  options={playerOptions} redraw/>\r\n                        </div>\r\n                        <div className='system-dashboard-graph-infrastructure'>\r\n                            <h6 className='graph-title'>Infrastructure Alerts</h6>\r\n                            <Line data={infrastructureData}\r\n                                  options={infrastructureOptions} redraw/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='cards-window'>\r\n                        <CustomCard\r\n                            title='Today'\r\n                            handleCallback={() => this.setHours()}\r\n                        />\r\n                        <CustomCard\r\n                            title='Last 7 Days'\r\n                            handleCallback={() => this.setDays()}\r\n                        />\r\n                        <CustomCard\r\n                            title='Last 30 Days'\r\n                            handleCallback={() => this.setWeeks()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n<div className='c3r1'>   \r\n                        <Widget\r\n                            value={appErrors}\r\n                            title='APP ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'appErrors')}                        \r\n                            iconPath='/icons/app-errors-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c4r1'>    \r\n                        <Widget\r\n                            value={loginErrors}\r\n                            title='LOGIN ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'loginErrors')}                        \r\n                            iconPath='/icons/login-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={verification}\r\n                            title='VERIFICATION SERVICE'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'verification')}                        \r\n                            iconPath='/icons/verification-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c5'>\r\n                        <Widget\r\n                                value={loggedin}\r\n                                title='LOGGED IN PLAYERS'\r\n                                handleCallback={() => this.navigateTo('/system/stats', 'loggedin')}                        \r\n                                iconPath='/icons/player_icon.svg'\r\n                                />\r\n                    </div>\r\n\r\n<div className='c4r1'>    \r\n                        <Widget\r\n                            value={cognitoErrors}\r\n                            title='COGNITO ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'cognitoErrors')}                        \r\n                            iconPath='/icons/cognito-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={containers}\r\n                            title='CONTAINERS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'containers')}                        \r\n                            iconPath='/icons/containers-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c2r2'>\r\n                        <Widget\r\n                            value={containerErrors}\r\n                            title='CONTAINER ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'containerErrors')}                        \r\n                            iconPath='/icons/container-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c5'>\r\n                        <div className='uptime-container'>\r\n                            <Doughnut data={this.uptimeData}\r\n                                        options={this.optionUptime}/>\r\n                        </div>\r\n                    </div>\r\n*/\r\n\r\nexport default SystemDashboard;","export const SystemStatsCategories = [\r\n    'tickets',\r\n    'rtc winner',\r\n    'non-rtc winner',\r\n    'non-winner',\r\n    'registration',\r\n    'kyc-accepted',\r\n    'kyc-rejected',\r\n    'environment',\r\n    'api-error',\r\n    'error',\r\n    'tickets',\r\n    'ticket-scan-threshold',\r\n]","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport AppTextbox from \"../AppTextbox\";\r\nimport {SystemStatsCategories} from \"../Constants/SystemStatsCategories\";\r\n\r\nimport './SystemSearch.css';\r\nimport { categories } from \"../Constants/SystemDashCategories\";\r\n\r\nclass SystemSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [{\r\n                id: 1,\r\n                value: 'Tickets'\r\n            }, {\r\n                id: 2,\r\n                value: 'Ticket Accepted'\r\n            }, {\r\n                id: 3,\r\n                value: 'Ticket Rejected'\r\n            }, {\r\n                id: 4,\r\n                value: 'Winner'\r\n            }, {\r\n                id: 5,\r\n                value: 'Non Winner'\r\n            }, {\r\n                id: 6,\r\n                value: 'Registration'\r\n            }, {\r\n                id: 7,\r\n                value: 'KYC-Accepted'\r\n            }, {\r\n                id: 8,\r\n                value: 'KYC-Rejected'\r\n            }, {\r\n                id: 9,\r\n                value: 'Environment'\r\n            }, {\r\n                id: 10,\r\n                value: 'API Errors'\r\n            }, {\r\n                id: 11,\r\n                value: 'Errors'\r\n            }],\r\n            startDate: '',\r\n            endDate: '',\r\n            tempStart: null,\r\n            tempEnd: null,\r\n            category: '',\r\n            selectedCategory: 'winner',\r\n            searchText: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n   \r\n    handleSelectChange = (e, stateName) => { \r\n        //debugger;\r\n        const value = e.target.value;\r\n    \r\n        this.setState({'category': value});\r\n    \r\n    }\r\n\r\n    onSearch = () => {\r\n        const {selectedCategory, startDate, endDate, searchText, category} = this.state;\r\n        this.props.handleSearchClick(category, startDate, endDate, searchText);\r\n    }\r\n\r\n    render() {\r\n        const {category, startDate, endDate, tempStart, tempEnd, categories, searchText} = this.state;\r\n        const {tableHeader, userList} = this.props;\r\n        return (\r\n            <div>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='system-search-label'>Category</div>\r\n                        <select value={category} onChange={(e) => this.handleSelectChange(e, 'category')}>\r\n                            {\r\n                                SystemStatsCategories.map(g => {\r\n                                    return <option value={g}>{g}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='system-search-label'>Start Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"Start Date\"\r\n                                    selected={startDate}\r\n                                    onChange={selected => this.setState({startDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='system-search-label'>End Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    minDate={startDate}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"End Date\"\r\n                                    selected={endDate}\r\n                                    onChange={selected => this.setState({endDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='system-search-label'>Search Text</div>\r\n                        <AppTextbox type='text' placeholder='Search Text' value={searchText}\r\n                                    onChange={(e) => this.handleInputChange(e, 'searchText')}/>\r\n                    </div>\r\n                    <div>\r\n                        <Button disabled={false} className='system-search-btn' onClick={() => this.onSearch()}>\r\n                            Filter\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default SystemSearch;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport SystemStats from \"./SystemStats\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst SystemStatsComponent = AuthLayoutHOC(SystemStats);\r\n\r\nexport default withRouter(SystemStatsComponent);","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport SystemSearch from '../systemsearch';\r\nimport ReactTable from \"../PaginatedTable/ReactTable\";\r\nimport AppToast from \"../toast\";\r\nimport config from \"../config\";\r\nimport moment from \"moment\";\r\nimport {ExportToCsv} from 'export-to-csv';\r\n\r\nimport './SystemStats.css';\r\n\r\nclass SystemStats extends React.Component {  \r\n\r\n    data = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Alerts',\r\n            fill: false,\r\n            lineTension: 0,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: []\r\n          }\r\n        ],        \r\n    }\r\n\r\n    \r\n    options = {\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'day'\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            }\r\n        },\r\n        maintainAspectRatio: false\r\n    }\r\n\r\n    CSVoptions = {\r\n        showLabels: true,\r\n        useTextFile: false,\r\n        useBom: true,\r\n        //useKeysAsHeaders: true,\r\n        headers: ['Time UTC', 'Time', 'Description', 'Context', 'Type', 'Details', 'Priority', 'Category', 'ID', '-']\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            graphData: this.data,\r\n            statsList: [],\r\n            tableHeader: [{key: 'category', label: 'Category'},\r\n                        {key: 'priority', label: 'Priority'},\r\n                        {key: 'eventDateTime', label: 'Date'},\r\n                        {key: 'eventType', label: 'Type'},\r\n                        {key: 'eventDescription', label: 'Description'},\r\n                        {key: 'details', label: 'Details'}],\r\n            showToast: false\r\n        }\r\n    }\r\n\r\n    csvExporter = new ExportToCsv(this.CSVoptions);\r\n\r\n    incDataSetValues(datetime){\r\n        var date = new Date(datetime);\r\n            for (var i = 0; i < this.data.datasets[0].data.length; i++){\r\n                //var storedDate = this.playerData.datasets[0].data[i].y;\r\n                if (date.getTime() > this.data.datasets[0].data[i].x.getTime()){\r\n                    if (i == this.data.datasets[0].data.length - 1){\r\n                        this.data.datasets[0].data[i].y++;                    \r\n                    } else{\r\n                        if(date.getTime() < this.data.datasets[0].data[i + 1].x.getTime()){\r\n                            this.data.datasets[0].data[i].y++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    populateDataSet(queryStr, segments = 12){\r\n\r\n        var startStr = queryStr.substring(11, 31);\r\n        var endStr = queryStr.substring(40, 60);\r\n        var startMoment = moment(startStr);\r\n        var endMoment = moment(endStr);\r\n        var diffMS = endMoment.diff(startMoment);\r\n\r\n        var diffSegment = Math.ceil(diffMS/segments);\r\n        var ts = endMoment.valueOf();\r\n\r\n        this.data.datasets[0].data = [];\r\n        this.data.labels = [];\r\n\r\n        for(var i = 0; i < segments; i++){\r\n            var date = new Date(ts);\r\n\r\n            var dateData = {\r\n                x: date,\r\n                y: 0\r\n            }\r\n            \r\n            this.data.datasets[0].data.unshift(dateData);\r\n            this.data.labels.unshift(date);\r\n\r\n            ts = ts - (diffSegment);\r\n        }\r\n       }\r\n\r\n    onSearchClick = (categorySelected = '', queryDateRangeStart = '', queryDateRangeEnd = '', querySearchText = '') => {\r\n        var startDate = new Date(queryDateRangeStart);\r\n        const momentStartDate = moment(startDate).utc().format();\r\n        var endDate = new Date (queryDateRangeEnd);\r\n        endDate.setHours(23, 59, 59);        \r\n        const momentEndDate = moment(endDate).utc().format();\r\n\r\n        var query = `?startDate=${momentStartDate}&endDate=${momentEndDate}&category=${categorySelected}&searchText=${querySearchText}`;\r\n\r\n        this.fetchSystemDetails(query);\r\n    }\r\n\r\n    fetchSystemDetails(queryStr = ''){\r\n        if(queryStr == ''){\r\n            console.log('no query string passed');\r\n        } else {\r\n            \r\n            this.populateDataSet(queryStr, 12);\r\n            \r\n            let url = `${config.LOG_SERVER_BASE_URL}/v1/log/stats${queryStr}`;\r\n            fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        console.log(res.error);\r\n                    } else {\r\n                        this.setSystemDetails(res);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({showError: true, errorMessage: error.toString()})\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSelectClick = (event, id) => {\r\n        event.preventDefault();\r\n        this.navigateTo('/system/details', id);\r\n    }\r\n\r\n    navigateTo = (path, id) => {\r\n        if(id != ''){\r\n            this.props.history.push({pathname: path, state: { detail: id }});\r\n        }\r\n        else{\r\n            this.props.history.push(path);\r\n        }\r\n    }\r\n\r\n    setSystemDetails = (res) => {\r\n        var data = res.hits.hits;\r\n        data.forEach((hit) => {\r\n            this.incDataSetValues(hit._source.eventDateTimeUTC);\r\n        });\r\n\r\n        this.setState({'graphData': this.data});\r\n\r\n        const rows = Object.values(data).map(d => {\r\n            var temp = d._id;\r\n            d = d._source;\r\n            d._id = temp;\r\n            d.details = <a onClick={(e) => this.handleSelectClick(e, d._id)} href='' className='select-link'>Details</a>;\r\n\r\n            return d;\r\n        });\r\n        rows.forEach(element => element.eventDateTime = moment(element.eventDateTime).format());\r\n\r\n        this.setState({'statsList': rows});\r\n    }\r\n\r\n    componentDidMount() {\r\n        var data = null;\r\n\r\n        if (this.props.location.state == undefined){\r\n            this.props.history.push('/system/dashboard');\r\n        }\r\n        else\r\n        {\r\n            var query = this.props.location.state.detail;\r\n            this.fetchSystemDetails(query);\r\n        }\r\n    }\r\n\r\n    downloadClicked(data) {\r\n        //debugger;\r\n        //const {details, eventDateTime, tempData} = data;\r\n        this.csvExporter.generateCsv(data);\r\n    }\r\n\r\n    render() {\r\n        const {tableHeader, statsList, graphData, showToast} = this.state;        \r\n        const msg = 'No Results found.';\r\n        return(\r\n            <div className='system-stats'>\r\n                <div className='graph-container'>\r\n                    <Line data={graphData}\r\n                    options={this.options} redraw />\r\n                </div>\r\n                <div className='search-container'>\r\n                    <SystemSearch handleSearchClick={this.onSearchClick}/>\r\n                </div>\r\n                <div className='table-container'>\r\n                {\r\n                    tableHeader && statsList\r\n                        ? <ReactTable tableHeader={tableHeader} rowData={statsList} className='update-stats-table'/>\r\n                        : null\r\n                }\r\n                </div>\r\n                <div>\r\n                    <Button className='system-search-btn'\r\n                            onClick={() => this.downloadClicked(statsList)}>Export</Button>\r\n                </div>\r\n                {\r\n                    showToast ? <AppToast showToast={showToast} message={msg} isSuccessMessage={true}\r\n                                          handleClose={this.onToastClose}/> : null\r\n                }\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default SystemStats;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport SystemDetails from \"./SystemDetails\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst SystemDetailsComponent = AuthLayoutHOC(SystemDetails);\r\n\r\nexport default withRouter(SystemDetailsComponent);","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport SystemSearch from '../systemsearch';\r\nimport ReactTable from \"../PaginatedTable/ReactTable\";\r\nimport AppToast from \"../toast\";\r\nimport config from \"../config\";\r\nimport moment from \"moment\";\r\nimport {ExportToCsv} from 'export-to-csv';\r\n\r\nimport './SystemDetails.css';\r\n\r\nclass SystemDetails extends React.Component {  \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            category: '',\r\n            datetime: '',\r\n            sourceFile: '',\r\n            description: '',\r\n            logLine: '',\r\n            logContext: '',\r\n            showError: false,\r\n            showToast: false\r\n        };\r\n    }\r\n\r\n    fetchSystemDetails(id = ''){\r\n        if(id == ''){\r\n            console.log('no query string passed');\r\n        } else {\r\n            var queryStr = `?id=${id}`;\r\n\r\n            let url = `${config.LOG_SERVER_BASE_URL}/v1/log/eventbyid${queryStr}`;\r\n            fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        console.log(res.error);\r\n                    } else {\r\n                        this.setSystemDetails(res);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({showError: true, errorMessage: error.toString()})\r\n                });\r\n        }\r\n    }\r\n\r\n    setSystemDetails = (res) => {\r\n        var data = res.hits.hits;\r\n\r\n        this.setState({\r\n            'category': data[0]._source.category,\r\n            'datetime': data[0]._source.eventDateTime,\r\n            'sourceFile': data[0]._source.fileName,\r\n            'description': data[0]._source.eventDescription,\r\n            'logLine': data[0]._source.eventResult,\r\n            'logContext': data[0]._source.context,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        var data = null;\r\n\r\n        if (this.props.location.state == undefined){\r\n            this.props.history.push('/system/dashboard');\r\n        }\r\n        else\r\n        {\r\n            var id = this.props.location.state.detail;\r\n            this.fetchSystemDetails(id);\r\n        }\r\n    }\r\n\r\n    downloadClicked(data) {\r\n        this.csvExporter.generateCsv(data);\r\n    }\r\n\r\n    render() {\r\n        const {category, datetime, sourceFile, description, logLine, logContext} = this.state;        \r\n\r\n        return(\r\n            <div className='system-details-panel'>\r\n                <div className='system-details-rows'>\r\n                    <h4 className='system-details-header'>Category:</h4>\r\n                    <p className='system-details-text'>{category}</p>\r\n                </div>\r\n                <div className='system-details-rows'>\r\n                    <h4 className='system-details-header'>Local Time:</h4>\r\n                    <p className='system-details-text'>{datetime}</p>\r\n                </div>\r\n                <div className='system-details-rows'>\r\n                    <h4 className='system-details-header'>Source File:</h4>\r\n                    <p className='system-details-text'>{sourceFile}</p>\r\n                </div>\r\n                <div className='system-details-rows'>\r\n                    <h4 className='system-details-header'>Description:</h4>\r\n                    <p className='system-details-text'>{description}</p>\r\n                </div>\r\n                <div className='system-details-rows'>\r\n                    <h4 className='system-details-header'>Log Line:</h4>\r\n                    <p className='system-details-text'>{logLine}</p>\r\n                </div>\r\n                <div className='system-details-rows'>\r\n                    <h4 className='system-details-header'>Log Context:</h4>\r\n                    <p className='system-details-text'>{logContext}</p>\r\n                </div>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default SystemDetails;","import React from 'react';\r\nimport \"./ComingSoon.css\";\r\n\r\nfunction ComingSoon() {\r\n    return (\r\n        <div className=\"comingsoon\">\r\n            <h1>Coming Soon...</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ComingSoon;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from \"../Header/header\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport './AuthLayoutHOC.css';\r\nimport BackArrow from \"../components/Icons/backArrow\";\r\n\r\n\r\nconst MiscLayoutHOC = (WrappedComponent) => {\r\n\r\n    class HOC extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                showBackConfirm: false,\r\n            }\r\n        }\r\n\r\n        onHomeButtonClick = () => {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n\r\n        onBackButtonClick = () => {\r\n            this.props.history.goBack();\r\n        }\r\n\r\n        render() {\r\n            const customWidth = `${window.outerWidth - 255}px`;\r\n            const customStyle = {width: customWidth}\r\n            const {showBackConfirm} = this.state;\r\n            return (\r\n                <div className='auth-app'>\r\n                    <Header/>\r\n                    <div className='auth-app-sidebar'>\r\n                        <div className='auth-app-sidebar-wrapper'>\r\n                            <div className='home-button'>\r\n\r\n                                <div className=\"home-button-header\"/*onClick={() => this.toggleList()}*/>\r\n                                    <div className=\"dd-header-title\">\r\n                                        <img src='/icons/home-Icon.svg' onClick={() => this.onHomeButtonClick()}/>\r\n                                        <div className='dd-label' onClick={() => this.onHomeButtonClick()}>Home</div>\r\n                                        {/*{listOpen*/}\r\n                                        {/*    ? <FaAngleUp />*/}\r\n                                        {/*    : <FaAngleDown />*/}\r\n                                        {/*}*/}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <Sidebar {...this.props} />\r\n                            <div className=\"vertical-separator\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='auth-app-center-panel'>\r\n                        <div className='app-center-panel-wrapper'>\r\n                           {/* <div className='page-title'>\r\n                                <h2 className='title-text'>{this.props.title || 'Title'}</h2>\r\n                            </div>*/}\r\n                            <div className='page-info-bar'>\r\n                                {\r\n                                    this.props.showBackButton\r\n                                        ? <div className='back-arrow'>\r\n                                            <BackArrow color='#FFFFFF' onClick={() => this.onBackButtonClick()}/>\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                            <WrappedComponent showBackConfirm={showBackConfirm} handlePopup={this.handlePopup}\r\n                                              onUpdate={this.handleUpdate} {...this.props}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return HOC;\r\n\r\n};\r\n\r\nMiscLayoutHOC.defaultProps = {\r\n    showBackButton: true\r\n}\r\nMiscLayoutHOC.propTypes = {\r\n    showBackButton: PropTypes.bool\r\n}\r\nexport default MiscLayoutHOC;","import React from \"react\";\r\nimport ComingSoon from \"./ComingSoon\";\r\nimport MiscLayoutHOC from \"../../Layout/MiscLayoutHOC\";\r\n\r\nconst ComingSoonComponent = MiscLayoutHOC(ComingSoon);\r\n\r\nexport default ComingSoonComponent;","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport {inject} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\nclass PlayerSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            DOB: '',\r\n            isValidEmail: false,\r\n            isValidPhone: false,\r\n            isValidZip: false,\r\n            startDate: null,\r\n            playerId: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const firstName = localStorage.getItem('searchFirstName');\r\n        const lastName = localStorage.getItem('searchLastName');\r\n        const phone = localStorage.getItem('phone');\r\n        const email = localStorage.getItem('email');\r\n        const playerId = localStorage.getItem('playerId');\r\n\r\n        if(firstName || lastName || phone || email || playerId) {\r\n\r\n            localStorage.removeItem('searchFirstName');\r\n            localStorage.removeItem('searchLastName');\r\n            localStorage.removeItem('phone');\r\n            localStorage.removeItem('email');\r\n            localStorage.removeItem('playerId');\r\n            this.setState({\r\n                    firstName: firstName || '',\r\n                    lastName: lastName || '',\r\n                    email: email || '',\r\n                    phone: phone || '',\r\n                    playerId: playerId || ''\r\n                }, () =>this.onSearch()\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else if (stateName === 'email') {\r\n            const isValid = e.target.value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n            this.setState({[stateName]: e.target.value, isValidEmail: !!isValid});\r\n        } else if (stateName === 'phone') {\r\n            const regExp = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value, isValidPhone: e.target.value.length === 10})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {firstName, lastName, email, phone, playerId} = this.state;\r\n\r\n        localStorage.setItem('searchFirstName', firstName);\r\n        localStorage.setItem('searchLastName', lastName);\r\n        localStorage.setItem('searchPhone', phone);\r\n        localStorage.setItem('searchEmail', email);\r\n        localStorage.setItem('playerId', playerId);\r\n\r\n        this.props.handleSearchClick(firstName, lastName, phone, email, playerId);\r\n    }\r\n\r\n    onClear = () => {\r\n        this.setState({firstName: '',  lastName: '', email: '', phone: '', playerId: ''},() => this.props.playerStore.clearPlayerSearchResults());\r\n    }\r\n\r\n    render() {\r\n        const {firstName, lastName, email, phone, isValidEmail, isValidZip, isValidPhone, playerId} = this.state;\r\n        let isDisabled = true;\r\n        // if((firstName || lastName || ssn || zipcode || email || startDate) && isValidEmail && (zipcode.length === 4 || zipcode.length === 0)) {\r\n        if (email) {\r\n            isDisabled = !isValidEmail;\r\n        } else if (phone) {\r\n            isDisabled = !(isValidPhone);\r\n        } else if ((firstName || lastName) || playerId) {\r\n            isDisabled = false\r\n        }\r\n        const {tableHeader, userList} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='player-search-label'>First Name</div>\r\n                        <AppTextbox type='text' placeholder='First Name ' value={firstName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='player-search-label'>Last Name</div>\r\n                        <AppTextbox type='text' placeholder='Last Name ' value={lastName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='player-search-label'>Phone</div>\r\n                        <AppTextbox type='text' placeholder='Phone' value={phone} maxlength='10'\r\n                                    onChange={(e) => this.handleInputChange(e, 'phone')}/>\r\n                        {\r\n                            !isValidPhone && phone.length\r\n                                ? <div className='player-invalid-email'>Phone should be 10 digit</div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <div className='player-search-label'>Email</div>\r\n                        <AppTextbox type='text' placeholder='Email' value={email}\r\n                                    onChange={(e) => this.handleInputChange(e, 'email')}/>\r\n                        {\r\n                            !isValidEmail && email.length\r\n                                ? <div className='player-invalid-email'>Invalid Email</div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <Button disabled={isDisabled} className='player-search-btn' onClick={() => this.onSearch()}>\r\n                            Search\r\n                        </Button>\r\n                        <Button className='player-search-btn' onClick={() => this.onClear()}>\r\n                            Clear\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className='player-search-id'>\r\n                    <div className='player-search-label'>Player ID</div>\r\n                    <AppTextbox type='text' placeholder='Player ID' value={playerId}\r\n                                onChange={(e) => this.handleInputChange(e, 'playerId')}/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerSearch;\r\n\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport PlayerSearchGeneric from \"./PlayerSearchGeneric\";\r\n\r\nconst PlayerSearchGenericComponent = AuthLayoutHOC(PlayerSearchGeneric);\r\n\r\nexport default PlayerSearchGenericComponent;","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport PlayerSearch from \"../SearchBar\";\r\nimport './PlayerSearchGeneric.css';\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass PlayerSearchGeneric extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: [],\r\n            tableHeader: [],\r\n            showToast: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.playerStore.clearTicketHistorySearchResults()\r\n    }\r\n\r\n    handleSelectClick = (event, id) => {\r\n        event.preventDefault();\r\n        this.props.playerStore.setSelectedPlayerDetails(id);\r\n        this.props.history.push(`/player/hub/${id}`);\r\n    }\r\n\r\n    onSearchClick = (firstName = '', lastName = '', phone = '', email = '', playerId='') => {\r\n        if(playerId && playerId !== '') {\r\n            this.props.playerStore.getPlayerDetails(playerId);\r\n        } else if (email && email !== '') {\r\n            this.props.playerStore.getPlayerDetails(email);\r\n        } else {\r\n            let queryParams = '?';\r\n            if (firstName && firstName !== '') {\r\n                queryParams += `firstName=${firstName}`\r\n            }\r\n            if (lastName && lastName !== '') {\r\n                if (queryParams.endsWith(\"?\"))\r\n                    queryParams += `lastName=${lastName}`\r\n                else\r\n                    queryParams += `&lastName=${lastName}`\r\n            }\r\n            if (phone && phone !== '') {\r\n                if (queryParams.endsWith(\"?\"))\r\n                    queryParams += `phone=${phone}`\r\n                else\r\n                    queryParams += `&phone=${phone}`\r\n            }\r\n            this.props.playerStore.searchPlayers(queryParams);\r\n        }\r\n\r\n    }\r\n\r\n    onToastClose = () => {\r\n        this.props.playerStore.setToast(false);\r\n    }\r\n\r\n    renderPlayerSearchResetPW() {\r\n        const {tableHeader, tableRows, showToast, errorMessage} = this.props.playerStore;\r\n        let address2 = '';\r\n        const rows = tableRows && tableRows.map((d, index) => {\r\n            d.idField = index + 1;\r\n            // If the address2 field comes as null, then display empty string\r\n            // address2 = (d.address2 === null || d.address2.trim() === '') ? '' : `${d.address2},`;\r\n            if(!d.hasOwnProperty('address')) {\r\n                address2 = d.address2 ? d.address2.trim(): '';\r\n                d.address = `${d.address1 || ''}, ${address2} ${d.city || ''}, ${d.state || ''}, ${d.zip5 || ''}`;\r\n            }\r\n\r\n            d.select =\r\n                <a onClick={(e) => this.handleSelectClick(e, d.playerId)} href='' className='select-link'>Select</a>;\r\n            return d;\r\n        });\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                <div className='player-search-panel player-search-child'>\r\n                    <PlayerSearch tableHeader={tableHeader} userList={rows} handleSearchClick={this.onSearchClick}/>\r\n                </div>\r\n                {\r\n                    rows && rows.length > 0 && tableHeader\r\n                        ? <ReactTable tableHeader={tableHeader} rowData={rows} className='update-user-table'/>\r\n                        : null\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n        if (true) {\r\n            renderObj = this.renderPlayerSearchResetPW();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerSearchGeneric;\r\n","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass Details extends React.Component {\r\n\r\n    handleCancel = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {selectedPlayerDetails} = this.props.playerStore;\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity) {\r\n            const {identity} = selectedPlayerDetails;\r\n            const {\r\n                firstName, lastName\r\n            } = identity;\r\n            const target = `Player Name: ${firstName} ${lastName}`;\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.PLAYER_DETAILS, target);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {showBackConfirm} = this.props;\r\n        const {selectedPlayerDetails} = this.props.playerStore;\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n            const {identity, account} = selectedPlayerDetails;\r\n            const {\r\n                firstName, lastName, gender, dateOfBirth, ssn, phone, address1, address2, city, state, zip5,\r\n                acceptedEmailCommunication, acceptedSmsCommunication, termsAcceptedDate\r\n            } = identity;\r\n            const {email} = account;\r\n            let {emailVerified} = account;\r\n            emailVerified = emailVerified ? 'Verified' : 'Not Verified'\r\n            return (\r\n                <div className='player-details-container container-fluid '>\r\n                    <div className='player-details-panel'>\r\n                        <div className='player-details-child '>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>First Name</div>\r\n                                    <div className='player-details-value'>{firstName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Last Name</div>\r\n                                    <div className='player-details-value'>{lastName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SSN</div>\r\n                                    <div className='player-details-value'>{ssn}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Date of Birth</div>\r\n                                    <div className='player-details-value'>{dateOfBirth}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Gender</div>\r\n                                    <div className='player-details-value'>{gender}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 1</div>\r\n                                    <div className='player-details-value'>{address1}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 2</div>\r\n                                    <div className='player-details-value'>{address2}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>City</div>\r\n                                    <div className='player-details-value'>{city}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>State</div>\r\n                                    <div className='player-details-value'>{state}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Zipcode</div>\r\n                                    <div className='player-details-value'>{zip5}</div>\r\n                                </div>\r\n\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email</div>\r\n                                    <div className='player-details-value'>{email}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Phone</div>\r\n                                    <div className='player-details-value'>{phone}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Opt-In</div>\r\n                                    <input disabled={true} checked={acceptedEmailCommunication} type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SMS Opt-In</div>\r\n                                    <input disabled={true} checked={acceptedSmsCommunication} type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>T&C Terms Accept</div>\r\n                                    <input disabled={true} type=\"checkbox\" checked={termsAcceptedDate}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Status</div>\r\n                                    <div className='player-details-value'>{emailVerified}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr className='separator'/>\r\n                        <div className='row player-button-row'>\r\n                            <div className='offset-9 col-3 button-column'>\r\n                                <Button className='player-details-btn ' onClick={() => this.handleCancel()}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div className='player-details-container container-fluid'>\r\n            <div className='no-data-message'>Error loading data...go back</div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default Details;\r\n","export const KYCIdentificationOne = [\r\n    'Drivers License',\r\n    'Passport',\r\n    'Document',\r\n    'Other'\r\n]","export const KYCIdentificationTwo = [\r\n    'Social Security'\r\n]","import config from  './../../config';\r\n\r\nconst axios = require('axios');\r\nconst data = require('./__test__/test_data.json');\r\n\r\n\r\nexport const makeHttpCall = async (options) => {\r\n\r\n    console.log(\">>>>>>>>>>>>>>> makeHttpCall\"); \r\n    \r\n    try {\r\n        \r\n        let response = await axios(options);\r\n        console.log('response',response);\r\n        return  response.data;\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"makeHttpCall\" + e.message );\r\n    }\r\n}\r\n\r\nexport const getData = async ( playerId) => {\r\n    console.log(\">>>>>>>>>>>>>>> getData\");\r\n    const options =\r\n    {\r\n        method: 'get',\r\n        url: config.SERVER_BASE_URL +'/v1/player/getdocument/'+ playerId\r\n    }\r\n\r\n    try\r\n    {\r\n        \r\n        const data = await makeHttpCall(options);\r\n        \r\n        if(data.message !== undefined)\r\n        {\r\n            alert(`Player ${playerId} not fount`);\r\n            return [];\r\n        }  \r\n        console.log(\">>>>>>>>>>>>>>> RETURNING Data\", data);      \r\n        return data.documents;              \r\n    } \r\n    catch(e){\r\n        alert(e.message);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import EventEmitter from 'events'\r\n\r\n\r\nexport default new EventEmitter();  ","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styles from './css/styles.module.css';\r\nimport stylesPopUp from './css/styles_popup_box.module.css';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    makeHttpCall,\r\n    getData\r\n} from './functions'\r\nimport { faTrash, faCaretDown, faCaretUp, faPlusCircle, faMinusCircle, faReply } from '@fortawesome/free-solid-svg-icons';\r\nimport logo from './../../../src/me.png';\r\nimport eventEmitter from './../../service/EventEmiiter';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AppToast from \"../../toast\";\r\nimport config from  './../../config';\r\n\r\nconst axios = require('axios');\r\n\r\nconst valuesOfDocumentType = [];\r\n@inject('playerStore', 'claimStore')\r\n@observer\r\nclass DisplayDocument extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            documentData: [],\r\n            toggle: true,\r\n            zoom: 100,\r\n            rotation: 0,\r\n            index: 0,\r\n            playerId: props.playerId,\r\n            imageType: [],\r\n            documentTypeId: [],\r\n            isData: false,\r\n            setDocumentType: undefined,\r\n            popupRadioButtonResult: undefined,\r\n            count: 0,\r\n            eventListenerAdded: undefined,\r\n            componentName: props.name,\r\n            playersCurrentImage: undefined,\r\n            refreshDataForImages: 0,\r\n            showToast: false,\r\n            showToastResponse: \"\",\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.populateFields();\r\n        if (this.state.eventListenerAdded === undefined)\r\n            this.state.eventListenerAdded = eventEmitter.addListener('DisplayDiscount', this.triggerSetState);\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        //console.log(\"component did update\");\r\n        if (!this.state.toggle && valuesOfDocumentType.find(e => e === this.state.documentData[this.state.index].documentType) !== undefined)\r\n            this.ScrollElement();\r\n    }\r\n\r\n    triggerSetState = (data) => {\r\n\r\n        this.setState(data);\r\n        console.log(\">>>>>>> triggerSetState\", this.state);\r\n    }\r\n\r\n    testIfImageIsAvailable = async () => {\r\n\r\n        const options =\r\n        {\r\n            method: 'put',\r\n            url: config.SERVER_BASE_URL + '/v1/player/testplayerimageavailable',\r\n            data: {\r\n                imageUrl: this.state.documentData[this.state.index].url\r\n            }\r\n        }\r\n\r\n        try {\r\n            console.log(' >>>>>>>>>>>>>> testing image');\r\n            const response = await makeHttpCall(options);\r\n            this.state.playersCurrentImage = \"\";\r\n           \r\n            if (response.statusCode === 200) {\r\n                this.state.playersCurrentImage = options.data.imageUrl;\r\n                this.setState({ playersCurrentImage: options.data.imageUrl, refreshDataForImages: 0 });\r\n                return;\r\n            }\r\n            else if (response.statusCode === 403) {\r\n\r\n                \r\n                if (this.state.refreshDataForImages++ < 2 && response.refreshStatus === true) {\r\n                    this.populateFields();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.state.showToastResponse = `${response.statusCode} ${response.statusMessage}`;\r\n            this.setState({ playersCurrentImage: this.state.playersCurrentImage, showToast: true, showToastResponse: this.state.showToastResponse });\r\n\r\n        } catch (e) {\r\n            console.log(e.message);\r\n            this.setState({playersCurrentImage:\"\"});\r\n            alert(`${options.url} ${e.message}`);\r\n           \r\n        }\r\n\r\n    }\r\n\r\n\r\n    populateFields = () => {\r\n\r\n\r\n        return new Promise((resolve, reject) => {\r\n            if (this.state.count === 0) {\r\n                this.state.count++;\r\n\r\n                getData(this.state.playerId)\r\n                    .then((data) => {\r\n                        this.state.documentData = [];\r\n                        this.state.imageType = [];\r\n                        this.state.documentTypeId = [];\r\n                        if (data !== undefined && data !== null) {\r\n                            data.forEach((element, i) => {\r\n                                this.state.documentData.push(element);\r\n                                this.state.imageType.push(<option key={`image${i + 1}`} value={`Image ${i + 1}`}>Image {i + 1}</option>)\r\n                            });\r\n\r\n                            this.state.documentTypeId.push('Select');\r\n                            this.state.documentTypeId.push('Govt. Issued Id (Front)');\r\n                            valuesOfDocumentType.push('GOV_ID_FRONT');\r\n                            this.state.documentTypeId.push('Govt. Issued Id (Back)');\r\n                            valuesOfDocumentType.push('GOV_ID_BACK');\r\n                            this.state.documentTypeId.push('Social Security Card');\r\n                            valuesOfDocumentType.push('SSN_CARD');\r\n                            this.state.documentTypeId.push('Other');\r\n                            valuesOfDocumentType.push('OTHER');\r\n                            this.setState(\r\n                                {\r\n                                    imageType: this.state.imageType,\r\n                                    documentData: this.state.documentData,\r\n                                    documentTypeId: this.state.documentTypeId,\r\n                                    isData: true,\r\n                                    playersCurrentImage: this.state.playersCurrentImage,\r\n                                    count: 0\r\n                                }\r\n                            );\r\n\r\n                        }\r\n\r\n                        resolve(true);\r\n\r\n                    });\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    getImageType = (e) => {\r\n        console.log(\">>>>>>>>>>>>>>> getImageType\");\r\n        this.state.index = (e.target.value.split(\" \")[1] - 1);\r\n        this.setState({ index: this.state.index, toggle: true, playersCurrentImage: undefined });\r\n    }\r\n    deleteImage = async (uploadId) => {\r\n\r\n        console.log(\">>>>>>>>>>>>>>> deleteImage\");\r\n        if (uploadId === \"\") {\r\n            this.state.showToastResponse = `Upload id is empty`;\r\n            this.setState({ showToast: true, showToastResponse: this.state.showToastResponse });\r\n            return;\r\n        }\r\n        const options =\r\n        {\r\n            method: 'delete',\r\n            url: config.SERVER_BASE_URL + '/v1/player/deletedocument/' + uploadId\r\n        }\r\n\r\n        try {\r\n            const response = await makeHttpCall(options);\r\n            if (response.statusCode === 200) {\r\n\r\n                this.state.documentData = this.state.documentData.filter(element => element.uploadId !== uploadId)\r\n                const data = {\r\n                    documentData: this.state.documentData === undefined ? [] : this.state.documentData,\r\n                    index: --this.state.index <= 0 ? 0 : this.state.index,\r\n                    imageType: [],\r\n                    playersCurrentImage: undefined\r\n                }\r\n                data.imageType = this.state.documentData === undefined ? [] : this.state.documentData.map((e, i) =>\r\n                    <option key={`image${i + 1}`} selected={data.index === i ? true : false} value={`Image ${i + 1}`}>Image {i + 1}</option>);\r\n                eventEmitter.emit('DisplayDiscount', data);\r\n            }\r\n\r\n            alert(`${options.url}\\n ${response.statusCode}: ${response.message} `);\r\n\r\n        } catch (e) {\r\n            this.setState({playersCurrentImage:\"\"});\r\n            alert(e);\r\n        }\r\n\r\n    }\r\n    getDocumentType = async (documentType, uploadId) => {\r\n        console.log(\">>>>>>>>>>>>>>> getDocumentType\");\r\n        const ev = documentType;\r\n        const options =\r\n        {\r\n            method: 'put',\r\n            url: config.SERVER_BASE_URL + '/v1/player/putdocument/' + uploadId,\r\n            data: {\r\n                type: ev\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await makeHttpCall(options);\r\n            console.log('response', response);\r\n            if (response.statusCode === 200) {\r\n                const data = {\r\n                    documentData: this.state.documentData.map(element => {\r\n                        if (element.uploadId === uploadId)\r\n                            element.documentType = ev;\r\n                        return element;\r\n                    })\r\n                }\r\n                eventEmitter.emit('DisplayDiscount', data);\r\n            }\r\n            alert(`${options.url}\\n ${response.statusCode}: ${response.message} `);\r\n\r\n        }\r\n        catch (e) {\r\n            console.log('exception', e.message);\r\n            this.setState({playersCurrentImage:\"\"});\r\n            alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    getpopUpCheckButton(event) {\r\n        let value = false;\r\n\r\n        if (event.target.value === 'document_type_approved')\r\n            value = true;\r\n\r\n        this.setState({ popupRadioButtonResult: value });\r\n\r\n    }\r\n\r\n    setDocumentTypeFromPopUp(event) {\r\n        this.setState({ setDocumentType: event.target.value });\r\n    }\r\n\r\n    getMonth(val) {\r\n        switch (val) {\r\n            case '01': return 'Jan'\r\n            case '02': return 'Feb'\r\n            case '03': return 'Mar'\r\n            case '04': return 'Apr'\r\n            case '05': return 'May'\r\n            case '06': return 'Jun'\r\n            case '07': return 'Jul'\r\n            case '08': return 'Aug'\r\n            case '09': return \"Sep\"\r\n            case '10': return 'Oct'\r\n            case '11': return 'Nov'\r\n            case '12': return 'Dec'\r\n            default: return \"undefined\"\r\n        }\r\n    }\r\n\r\n    setDateFormat(value) {\r\n        let date = value.split('T')[0];\r\n        date = date.split('-');\r\n        let year = date[0]\r\n        return `${this.getMonth(date[1])} ${date[2]}, ${year}`;\r\n\r\n    }\r\n    popupActionCancel() {\r\n        this.setState({\r\n            setDocumentType: undefined,\r\n            popupRadioButtonResult: undefined,\r\n            toggle: !this.state.toggle\r\n        });\r\n    }\r\n    popupActionSave() {\r\n        if (this.state.popupRadioButtonResult === undefined) {\r\n            this.state.showToastResponse = `Please Select a option`;\r\n            this.setState({ showToast: true, showToastResponse: this.state.showToastResponse });\r\n\r\n            return;\r\n        }\r\n        if (valuesOfDocumentType.find(e => e === this.state.setDocumentType) === undefined && this.state.popupRadioButtonResult === true) {\r\n            this.state.showToastResponse = `Please Select a Document Type`;\r\n            this.setState({ showToast: true, showToastResponse: this.state.showToastResponse });\r\n            return;\r\n\r\n        }\r\n\r\n        if (this.state.popupRadioButtonResult === true)\r\n            this.getDocumentType(this.state.setDocumentType, this.state.documentData[this.state.index].uploadId);\r\n        else\r\n            this.deleteImage(this.state.documentData[this.state.index].uploadId);\r\n\r\n        this.setState({ toggle: !this.state.toggle })\r\n    }\r\n    getDocumentTypeId() {\r\n        try {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>> getDocumentTypeId');\r\n            let index = valuesOfDocumentType.indexOf(this.state.documentData[this.state.index].documentType);\r\n            console.log(this.state.documentData);\r\n            console.log(index, this.state.index, this.state.documentData[this.state.index].documentType, this.state.documentTypeId[index + 1],)\r\n            return index === -1 ? \"\" : this.state.documentTypeId[index + 1];\r\n        } catch (e) {\r\n            alert(e.message);\r\n            return \"\";\r\n        }\r\n    }\r\n    ScrollElement() {\r\n        document.getElementById('container').scrollIntoView(false);\r\n    }\r\n    renderMountedPageWithData() {\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.showToast &&\r\n                    <div style={{ zIndex: 1000, position: 'fixed', width: '41vmax', height: '6vmax', top: '5vmax', left: '41vmax' }}>\r\n\r\n                        {/* {this.props.playerStore.setToastErrorSuccessMessage(this.state.showToast, this.state.showToastResponse,this.state.showToastResponse)} */}\r\n                        {this.props.playerStore.setToastErrorSuccessMessage(true, this.state.showToastResponse, null)}\r\n                        {this.setState({ showToast: false })}\r\n                    </div>\r\n                }\r\n                <div id='container' ref='container' style={{ minHeight: (this.state.toggle ? '5.52vmax' : '54.523vh') }}\r\n                    className={styles['document-image-outer-container']}>\r\n                    <div className={styles['player-document-info-players-document-label-container']}>\r\n                        <div className={styles['player-document-info-players-document-text']}\r\n                            aria-label=\"Player's Documents\"\r\n                            tabIndex='0'\r\n                        >Player's Documents</div>\r\n                        <div className={styles['player-document-info-players-document-selection-text']}\r\n                            aria-label=\"Selection\"\r\n                            tabIndex='0'\r\n                        >Selection</div>\r\n                        <select style={{ fontSize: '1.5em', minHeight: '1.52vmax' }}\r\n                            className={styles['player-document-info-players-document-selection']}\r\n                            defaultValue={this.state.imageType[0]} onChange={(e) => this.getImageType(e)} tabIndex='0'  >\r\n\r\n                            {this.state.imageType}\r\n                        </select>\r\n                    </div>\r\n                    <div className={`${styles['player-document-info-players-document-details-labels-container']}`}>\r\n                        <div className={`${styles['player-document-info-players-document-details-labels-text']} ${styles['player-document-info-players-document-details-labels-text-upload-date']}`} aria-label='Upload Date' tabIndex='0'>Upload Date</div>\r\n                        <div className={styles['player-document-info-players-document-details-labels-text']} aria-label='File Type' tabIndex='0'>File Type</div>\r\n                        <div className={styles['player-document-info-players-document-details-labels-text']} aria-label='Document Type' tabIndex='0'>Document Type</div>\r\n                    </div>\r\n                    <div style={{ width: '98.5%', height: '.7em', marginBottom: '.7em' }}>\r\n                        <hr className={styles['document-image-outer-container-hr']} />\r\n                    </div>\r\n\r\n\r\n                    <div style={{ height: '3.437vmax' }}\r\n                        className={`${styles['player-document-info-players-document-details-content-container']}`}>\r\n                        <div className={`${styles['player-document-info-players-document-details-content-text']} \r\n                            ${styles['player-document-info-players-document-details-content-text-upload-date']}`}\r\n                            tabIndex='0'\r\n                            aria-label={this.setDateFormat(this.state.documentData[this.state.index].createdAt)}>\r\n                            {this.setDateFormat(this.state.documentData[this.state.index].createdAt)}\r\n                        </div>\r\n                        <div className={styles['player-document-info-players-document-details-content-text']} tabIndex='0'>{\"JPG\"}</div>\r\n\r\n\r\n                        <div tabIndex='0' style={{ minHeight: '100%' }}\r\n                            className={styles['player-document-info-players-document-details-content-select']}\r\n                        >\r\n                            {this.getDocumentTypeId()}\r\n\r\n\r\n                        </div>\r\n                        {/* <div onClick={(e) => this.deleteImage( this.state.documentData[this.state.index].uploadId ) }\r\n                                style={{ height: (this.state.toggle ? `100%` : '70%') }}\r\n                                className={styles['player-document-info-players-document-details-content-delete']}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </div> */}\r\n\r\n                        <div role='button' aria-pressesd={!this.state.toggle} tabIndex='0' style={{ height: '1.875vmax', cursor: 'pointer' }} onClick={(e) => { this.setState({ toggle: !this.state.toggle, refreshDataForImages: 0 }); }} className={styles['player-document-info-players-document-details-content-button-hide-show']}>\r\n                            <div tabIndex='0'>{valuesOfDocumentType.find(e => e === this.state.documentData[this.state.index].documentType) === undefined ? 'Review' :  this.state.toggle ? 'Show': 'Hide'}</div>\r\n                            {/* {this.state.toggle ? <FontAwesomeIcon icon={faCaretUp} /> : <FontAwesomeIcon icon={faCaretDown} />} */}\r\n                            {valuesOfDocumentType.find(e => e === this.state.documentData[this.state.index].documentType) !== undefined ? ( this.state.toggle ? <FontAwesomeIcon icon={faCaretDown} /> : <FontAwesomeIcon icon={faCaretUp} /> ) : \"\" }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {(!this.state.toggle && valuesOfDocumentType.find(e => e === this.state.documentData[this.state.index].documentType) !== undefined) && <><div id='document_image' className={styles['document-image-container']}>\r\n\r\n                        <div\r\n\r\n                            style={\r\n                                {\r\n                                    backgroundSize: ` ${this.state.zoom === 100 ? 'cover' : `${this.state.zoom}%`}`,\r\n                                    backgroundImage: `url(${this.state.playersCurrentImage === undefined ? this.testIfImageIsAvailable() : this.state.playersCurrentImage})`,\r\n                                    backgroundRepeat: 'no-repeat',\r\n                                    backgroundPosition: 'center',\r\n                                    textAlign: 'center',\r\n                                }\r\n                            }\r\n                            className={`${styles['document-image-src-container']}                         \r\n                        ${this.state.rotation === 90 ? styles['rotateimg90'] :\r\n                                    this.state.rotation === 180 ? styles['rotateimg180'] :\r\n                                        this.state.rotation === 270 ? styles['rotateimg270'] :\r\n                                            styles['rotateimg0']\r\n                                }`} alt={'image_name'} >\r\n                                     {\r\n                                            this.state.playersCurrentImage === \"\" &&\r\n                                            <h2>Image Not available</h2>\r\n\r\n                                    }\r\n                        </div>\r\n                        {\r\n                            this.state.playersCurrentImage === undefined &&\r\n                            <div style={{ position: 'absolute', top: '37%', left: '45%' }}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        }                        \r\n                        <div className={styles['document-image-src-controll-container']}>\r\n                            <div role='button' aria-pressed=\"false\"\r\n                                tabIndex='0'\r\n                                aria-describedby='rotation'\r\n                                onClick={(e) => this.setState({ rotation: ((this.state.rotation + 90) % 360) })}\r\n                            >\r\n                                <span style={{ display: 'none' }} id='rotation' aria-label='rotate 90 degrees.' ></span>\r\n                                <FontAwesomeIcon role='img' tabIndex='0' aria-label='faReply icon' icon={faReply} />\r\n\r\n                            </div>\r\n                            <div style={{ display: 'inline' }} >\r\n                                <span onClick={(e) => this.setState((state, props) => ({ zoom: state.zoom + 10 }))}\r\n                                    role='button'\r\n                                    tabIndex='0'\r\n                                    aria-pressed=\"false\"\r\n                                    style={{ marginRight: '.2em' }}\r\n                                    aria-describedby='zoomOut'\r\n                                >\r\n                                    <span style={{ display: 'none' }} id='zoomOut' arial-label='zoom out.'> </span>\r\n                                    <FontAwesomeIcon role='img' arial-label='zoom out.' tabIndex='0' icon={faPlusCircle} />\r\n\r\n                                </span>\r\n                                <span role='button'\r\n                                    tabIndex='0'\r\n                                    aria-pressed=\"false\"\r\n                                    onClick={(e) => this.setState((state, props) => ({ zoom: state.zoom - 10 }))}\r\n                                    aria-describedby='zoomIn'\r\n                                >\r\n                                    <span style={{ display: 'none' }} id='zoomIn' arial-label='zoom in.'></span>\r\n                                    <FontAwesomeIcon role='img' tabIndex='0' arial-label='faMinusCircle' icon={faMinusCircle} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div></>}\r\n                </div>\r\n\r\n                {(!this.state.toggle\r\n                    &&\r\n                    valuesOfDocumentType.find(e => e === this.state.documentData[this.state.index].documentType) === undefined)\r\n                    &&\r\n                    <>\r\n\r\n\r\n                        <div className={stylesPopUp['document-image-pop-up-outer-container']}>\r\n                            <div className={stylesPopUp['document-image-pop-up-container']} >\r\n                                <h3 tabIndex='0'>Review Document</h3>\r\n                                <div className={stylesPopUp['document-image-container']}>\r\n                                    <div\r\n                                        style={\r\n                                            {\r\n                                                backgroundSize: ` ${this.state.zoom === 100 ? 'cover' : `${this.state.zoom}%`}`,\r\n                                                backgroundImage: `url(  ${this.state.playersCurrentImage === undefined ? this.testIfImageIsAvailable() : this.state.playersCurrentImage} )`,\r\n                                                backgroundRepeat: 'no-repeat',\r\n                                                backgroundPosition: 'center',\r\n                                            }\r\n                                        }\r\n                                        className={`${stylesPopUp['document-image-src-container']}\r\n\r\n                        ${this.state.rotation === 90 ? stylesPopUp['rotateimg90'] :\r\n                                                this.state.rotation === 180 ? stylesPopUp['rotateimg180'] :\r\n                                                    this.state.rotation === 270 ? stylesPopUp['rotateimg270'] :\r\n                                                        stylesPopUp['rotateimg0']\r\n                                            }`} alt={'image_name'} >\r\n                                        {\r\n                                            this.state.playersCurrentImage === \"\" &&\r\n\r\n                                            <h2>Image Not available</h2>\r\n\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        this.state.playersCurrentImage === undefined &&\r\n                                        <div style={{ position: 'absolute', top: '43%', left: '46%' }}>\r\n                                            <CircularProgress />\r\n                                        </div>\r\n                                    }\r\n\r\n\r\n                                    <div tabIndex='0' role='button' aria-pressed=\"false\" className={stylesPopUp['document-image-src-controll-container']}>\r\n                                        <FontAwesomeIcon tabIndex='0' arial-label='rotate 90 degrees.' onClick={(e) => this.setState((state, props) => ({ rotation: ((state.rotation + 90) % 360) }))} icon={faReply} />\r\n                                        <div>\r\n                                            <FontAwesomeIcon tabIndex='0' arial-label='zoom out.' onClick={(e) => this.setState((state, props) => ({ zoom: state.zoom + 10 }))} style={{ marginRight: '.2em' }} icon={faPlusCircle} />\r\n                                            <FontAwesomeIcon tabIndex='0' arial-label='zoom in.' onClick={(e) => this.setState((state, props) => ({ zoom: state.zoom - 10 }))} icon={faMinusCircle} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <h6>{this.setDateFormat(this.state.documentData[this.state.index].createdAt)}</h6>\r\n                                <div className={stylesPopUp['document-image-pop-up-actions']}>\r\n                                    <div className={stylesPopUp['document-image-pop-up-actions-radio-buttons-container']}>\r\n                                        <div className={stylesPopUp['document-image-pop-up-actions-radio-select-container']}>\r\n                                            <input type=\"radio\" value=\"document_type_approved\" name=\"document_type\" onChange={(e) => this.getpopUpCheckButton(e)} />\r\n                                            <div tabIndex='0' >Approved and</div>\r\n\r\n                                            <select tabIndex='0' style={{ height: '1.875vmax'}}\r\n                                                className={stylesPopUp['player-document-info-players-document-details-content-select']}\r\n                                                onChange={(e) => this.setDocumentTypeFromPopUp(e)}   >\r\n                                                {\r\n                                                    this.state.documentTypeId.map((element, i) => {\r\n                                                        return <option key={element} value={i === 0 ? undefined : valuesOfDocumentType[i - 1]}>{element}</option>;\r\n\r\n                                                    })\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className={stylesPopUp['document-image-pop-up-actions-radio-container']}>\r\n                                            \r\n                                                <input type=\"radio\" value='document_type_deny' name=\"document_type\" onChange={(e) => this.getpopUpCheckButton(e)} />\r\n                                                <div tabIndex='0' /*style={{ marginLeft: '.95vw' }} */>Deny and delete file</div><br />\r\n                                                <div style={{width:'7.5vmax'}}></div>\r\n                                            \r\n                                        </div>\r\n\r\n                                        <div role='button' aria-pressesd=\"false\" tabIndex='0' style={{ height: '2.5vmax', cursor: 'pointer' }} onClick={(e) => this.popupActionSave()} className={stylesPopUp['player-document-info-players-document-details-content-button-hide-show']}>\r\n                                            <div> Save</div>\r\n                                        </div>\r\n                                        <div role='button' tabIndex='0' aria-pressesd=\"false\" style={{ cursor: 'pointer' }} onClick={(e) => this.popupActionCancel()} style={{ fontSize: '1.1em', color: '#173E67' }}>Cancel</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>}\r\n\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<>{(this.state.isData && this.state.documentData.length > 0) && this.renderMountedPageWithData()}</>);\r\n    }\r\n}\r\n\r\nexport { DisplayDocument }\r\n\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport { KYCIdentificationOne } from \"../../Constants/KYCIdentificationOne\";\r\nimport { KYCIdentificationTwo } from \"../../Constants/KYCIdentificationTwo\";\r\nimport { checkRenderPermissions } from \"../../helpers\";\r\nimport { permissions } from \"../../constants\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport { DisplayDocument } from './../../components/DisplayDocument';\r\n\r\nconst IdentityCheckResult = {\r\n    PASS: \"PASS\",\r\n    FAIL: \"FAIL\",\r\n}\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass KYCVerification extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFieldsEdited: false,\r\n            showSuccess: false,\r\n            successMessage: '',\r\n            showToast: false,\r\n            showCancelPopup: false,\r\n            onYesClicked: false,\r\n            identification1: '',\r\n            identification2: '',\r\n            comment1: '',\r\n            comment2: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.playerStore.setShowPlayerVerifyModal(true);\r\n    }\r\n\r\n    onSubmitCancel = () => {\r\n        this.props.playerStore.setShowPlayerVerifyModal(false)\r\n    }\r\n\r\n    onRejectCancel = () => {\r\n        this.setState({ showCancelPopup: false }, () => this.props.handlePopup(false));\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({ showCancelPopup: false }, () => this.props.handlePopup(true));\r\n    }\r\n\r\n    handleCancel = () => {\r\n        if (this.state.isFieldsEdited)\r\n            this.setState({ showCancelPopup: true });\r\n        else\r\n            this.props.history.goBack();\r\n    }\r\n\r\n    callbackToParent = () => {\r\n        const { isFieldsEdited } = this.state;\r\n        const flag = isFieldsEdited;\r\n        this.props.onUpdate(flag);\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({ [stateName]: e.target.value, isFieldsEdited: true }, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        this.setState({ [stateName]: val, isFieldsEdited: true }, () => this.callbackToParent());\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        const navigateToFirstTab = this.props.playerStore.successMessage;\r\n        this.props.playerStore.setToast(false);\r\n        if (navigateToFirstTab)\r\n            this.props.navigateToFirstTab();\r\n    }\r\n\r\n    APICallback = () => {\r\n\r\n        const { identification1, identification2, comment1, comment2 } = this.state;\r\n\r\n        this.props.playerStore.updateSSNAndVerifyPlayer(identification1, identification2, comment1, comment2);\r\n    }\r\n\r\n    onYes = () => {\r\n        this.setState({ onYesClicked: true }, () => this.APICallback());\r\n    }\r\n\r\n    isSSNValid = (ssn) => {\r\n        let re = /^\\d{3}-?\\d{2}-?\\d{4}$/;\r\n        return re.test(ssn);\r\n    }\r\n\r\n    isIdentificationValid = (identification) => {\r\n        return identification && identification.trim().length > 0;\r\n    }\r\n\r\n    handleSSNOnClick = (e, stateName) => {\r\n        this.props.playerStore.updateUserDetails('', stateName);\r\n        this.setState({ isFieldsEdited: true }, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSSNChange = (e, stateName) => {\r\n        let val = e.target.value.replace(/\\D/g, '');\r\n        var newVal = '';\r\n        if (val.length > 4) {\r\n            this.value = val;\r\n        }\r\n        if ((val.length > 3) && (val.length < 6)) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            val = val.substr(3);\r\n        }\r\n        if (val.length > 5) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            newVal += val.substr(3, 2) + '-';\r\n            val = val.substr(5);\r\n        }\r\n        newVal += val;\r\n        this.props.playerStore.updateUserDetails(newVal, stateName);\r\n    }\r\n\r\n    render() {\r\n\r\n        let isDisabled = false;\r\n\r\n        const { showCancelPopup, identification1, identification2, comment1, comment2 } = this.state;\r\n\r\n        const { showBackConfirm } = this.props;\r\n        const { selectedPlayerDetails, showPlayerVerifyModal, selectedPlayerID } = this.props.playerStore;\r\n\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n            const { identity, account } = selectedPlayerDetails;\r\n            const {\r\n                firstName, lastName, gender, dateOfBirth, ssn, phone, address1, address2, city, state, zip5,\r\n                acceptedEmailCommunication, acceptedSmsCommunication, termsAcceptedDate, identityCheckResult\r\n            } = identity;\r\n            const { email, enabled } = account;\r\n\r\n            isDisabled = !this.isSSNValid(ssn) || !this.isIdentificationValid(identification1) || !this.isIdentificationValid(identification2) && identityCheckResult === IdentityCheckResult.PASS;\r\n\r\n            return (\r\n                <div className='player-details-container container-fluid '>\r\n                    {/*{showToast\r\n                        ?\r\n                        <AppToast showToast={showToast}\r\n                                  message={successMessage ? successMessage : errorMessage}\r\n                                  isSuccessMessage={successMessage !== null}\r\n                                  handleClose={() => this.handleToastClose()}/>\r\n                        : null\r\n                    }*/}\r\n                    <Modal show={showCancelPopup || showBackConfirm} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to cancel? All unsaved changes will be lost.\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onRejectCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onCancel(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={showPlayerVerifyModal} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to verify?\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onYes(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <div className='player-details-panel'>\r\n                        <div className='player-details-child '>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>First Name</div>\r\n                                    <div className='player-details-value'>{firstName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Last Name</div>\r\n                                    <div className='player-details-value'>{lastName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SSN</div>\r\n                                    {identityCheckResult !== IdentityCheckResult.PASS ?\r\n                                        <AppTextbox type='text' maxlength='11' placeholder='Enter SSN' value={ssn}\r\n                                            onChange={(e) => this.handleSSNChange(e, 'ssn')}\r\n                                            onClick={(e) => this.handleSSNOnClick(e, 'ssn')}\r\n                                        /> : <div className='player-details-value'>{ssn}</div>}\r\n                                    {\r\n                                        !this.isSSNValid(ssn) && identityCheckResult !== IdentityCheckResult.PASS\r\n                                            ?\r\n                                            <div className='player-invalid-email'>Update to Player's SSN is required in\r\n                                                order to Verify.</div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Date of Birth</div>\r\n                                    <div className='player-details-value'>{dateOfBirth}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Gender</div>\r\n                                    <div className='player-details-value'>{gender}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 1</div>\r\n                                    <div className='player-details-value'>{address1}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 2</div>\r\n                                    <div className='player-details-value'>{address2}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>City</div>\r\n                                    <div className='player-details-value'>{city}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>State</div>\r\n                                    <div className='player-details-value'>{state}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Zipcode</div>\r\n                                    <div className='player-details-value'>{zip5}</div>\r\n                                </div>\r\n\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email</div>\r\n                                    <div className='player-details-value'>{email}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Phone</div>\r\n                                    <div className='player-details-value'>{phone}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Opt-In</div>\r\n                                    <input disabled={true} checked={acceptedEmailCommunication} type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SMS Opt-In</div>\r\n                                    <input disabled={true} checked={acceptedSmsCommunication} type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>T&C Terms Accept</div>\r\n                                    <input disabled={true} type=\"checkbox\" checked={termsAcceptedDate} />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Identity Check Result</div>\r\n                                    <div className='player-details-value'>{identityCheckResult}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Account Status</div>\r\n                                    <div className='player-details-value'>{enabled ? 'Unlocked' : 'Locked'}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-2'>\r\n                                    <div className='player-details-label'>Identification 1</div>\r\n                                    <select value={identification1} disabled={identityCheckResult === IdentityCheckResult.PASS}\r\n                                        onChange={(e) => this.handleSelectChange(e, 'identification1')}>\r\n                                        <option selected disabled value=\"\">Select</option>\r\n                                        {\r\n                                            KYCIdentificationOne.map(ki => {\r\n                                                return <option value={ki}>{ki}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>&nbsp;</div>\r\n                                    <textarea type=\"textarea\" id=\"comment1\" disabled={identityCheckResult === IdentityCheckResult.PASS}\r\n                                        onChange={(e) => this.handleInputChange(e, 'comment1')}>{comment1}</textarea>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <div className='player-details-label'>Identification 2</div>\r\n                                    <select value={identification2} disabled={identityCheckResult === IdentityCheckResult.PASS}\r\n                                        onChange={(e) => this.handleSelectChange(e, 'identification2')}>\r\n                                        <option selected disabled value=\"\">Select</option>\r\n                                        {\r\n                                            KYCIdentificationTwo.map(ki => {\r\n                                                return <option value={ki}>{ki}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>&nbsp;</div>\r\n                                    <textarea type=\"textarea\" id=\"comment2\" disabled={identityCheckResult === IdentityCheckResult.PASS}\r\n                                        onChange={(e) => this.handleInputChange(e, 'comment2')}>{comment2}</textarea>\r\n                                </div>\r\n                                <div style={{ display: 'flex', width: '100%', height: 'auto', }}>\r\n                                        <DisplayDocument name=\"DisplayDocument1\" playerId={selectedPlayerID} />\r\n                                        <DisplayDocument name=\"DisplayDocument2\" playerId={selectedPlayerID} />\r\n                                    \r\n                                </div>\r\n                                {/*<div className='col-2'>\r\n                                    <div className='player-details-label'>&nbsp;</div>\r\n                                    <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n                                       href='https://www.experian.com/'><Button\r\n                                        className='player-details-btn'>Experian</Button></a>\r\n                                </div>*/}\r\n                            </div>\r\n                        </div>\r\n                        <hr className='separator' />\r\n                        <div className='row player-button-row'>\r\n                            <div className='offset-6 col-3 button-column'>\r\n                                <Button disabled={isDisabled} className='player-details-btn'\r\n                                    onClick={() => this.handleSubmit()}>\r\n                                    Verify Player\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-3 button-column'>\r\n                                <Button className='player-details-btn ' onClick={() => this.handleCancel()}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div className='player-details-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default KYCVerification;\r\n","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass ConfirmEmail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showCancelPopup: false,\r\n            onYesClicked: false\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.playerStore.setShowConfirmEmailModal(true);\r\n    }\r\n\r\n    onSubmitCancel = () => {\r\n        this.props.playerStore.setShowConfirmEmailModal(false);\r\n    }\r\n\r\n    onRejectCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(false));\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(true));\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        const navigateToFirstTab = this.props.playerStore.successMessage;\r\n        this.props.playerStore.setToast(false);\r\n        if (navigateToFirstTab)\r\n            this.props.navigateToFirstTab();\r\n    }\r\n\r\n    APICallback = () => {\r\n        this.props.playerStore.confirmPlayerEmail();\r\n    }\r\n\r\n    onYes = () => {\r\n        this.setState({onYesClicked: true}, () => this.APICallback());\r\n    }\r\n\r\n    render() {\r\n\r\n        const {showCancelPopup} = this.state;\r\n        const {showBackConfirm} = this.props;\r\n        const {selectedPlayerDetails, showConfirmEmailModal, showToast, successMessage, errorMessage} = this.props.playerStore;\r\n\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n            const {identity, account} = selectedPlayerDetails;\r\n            const {\r\n                firstName, lastName, gender, dateOfBirth, ssn, phone, address1, address2, city, state, zip5,\r\n                acceptedEmailCommunication, acceptedSmsCommunication, termsAcceptedDate\r\n            } = identity;\r\n            const {email} = account;\r\n            let {emailVerified} = account;\r\n            emailVerified = emailVerified ? 'Verified' : 'Not Verified'\r\n            return (\r\n                <div className='player-details-container container-fluid '>\r\n                    {/*{showToast\r\n                        ?\r\n                        <AppToast showToast={showToast}\r\n                                  message={successMessage ? successMessage : errorMessage}\r\n                                  isSuccessMessage={successMessage !== null}\r\n                                  handleClose={() => this.handleToastClose()}/>\r\n                        : null\r\n                    }*/}\r\n                    <Modal show={showCancelPopup || showBackConfirm} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to cancel? All unsaved changes will be lost.\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onRejectCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onCancel(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={showConfirmEmailModal} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to confirm the Email address?\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={() => this.onYes()}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <div className='player-details-panel'>\r\n                        <div className='player-details-child '>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>First Name</div>\r\n                                    <div className='player-details-value'>{firstName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Last Name</div>\r\n                                    <div className='player-details-value'>{lastName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SSN</div>\r\n                                    <div className='player-details-value'>{ssn}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Date of Birth</div>\r\n                                    <div className='player-details-value'>{dateOfBirth}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Gender</div>\r\n                                    <div className='player-details-value'>{gender}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 1</div>\r\n                                    <div className='player-details-value'>{address1}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 2</div>\r\n                                    <div className='player-details-value'>{address2}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>City</div>\r\n                                    <div className='player-details-value'>{city}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>State</div>\r\n                                    <div className='player-details-value'>{state}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Zipcode</div>\r\n                                    <div className='player-details-value'>{zip5}</div>\r\n                                </div>\r\n\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email</div>\r\n                                    <div className='player-details-value'>{email}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Phone</div>\r\n                                    <div className='player-details-value'>{phone}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Opt-In</div>\r\n                                    <input disabled={true} checked={acceptedEmailCommunication} type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SMS Opt-In</div>\r\n                                    <input disabled={true} checked={acceptedSmsCommunication} type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>T&C Terms Accept</div>\r\n                                    <input disabled={true} type=\"checkbox\" checked={termsAcceptedDate}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Status</div>\r\n                                    <div className='player-details-value'>{emailVerified}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr className='separator'/>\r\n                        <div className='row player-button-row'>\r\n                            <div className='offset-6 col-3 button-column'>\r\n                                <Button className='player-details-btn'\r\n                                        onClick={() => this.handleSubmit()}>\r\n                                    Confirm Email\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-3 button-column'>\r\n                                <Button className='player-details-btn ' onClick={() => this.handleCancel()}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div className='player-details-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ConfirmEmail;\r\n","export const UnlockPlayerReasonCodes = [\r\n    'Back Office Request',\r\n    'Player Requested'\r\n]","export const LockPlayerReasonCodes = [\r\n    'Offset',\r\n    'Intercept',\r\n    'Responsible Gaming',\r\n    'Velocity',\r\n    'Other'\r\n]","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport {UnlockPlayerReasonCodes} from \"../../Constants/UnlockPlayerReasonCodes\";\r\nimport {LockPlayerReasonCodes} from \"../../Constants/LockPlayerReasonCodes\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass LockUnlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFieldsEdited: false,\r\n            locked: true,\r\n            isUpdate: false,\r\n            showSuccess: false,\r\n            successMessage: '',\r\n            showToast: false,\r\n            showCancelPopup: false,\r\n            onYesClicked: false,\r\n            reason: '',\r\n            comment: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.playerStore.setshowPlayerLockUnlockModal(true);\r\n    }\r\n\r\n    onSubmitCancel = () => {\r\n        this.props.playerStore.setshowPlayerLockUnlockModal(false)\r\n    }\r\n\r\n    onRejectCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(false));\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(true));\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        const navigateToFirstTab = this.props.playerStore.successMessage;\r\n        this.props.playerStore.setToast(false);\r\n        if (navigateToFirstTab)\r\n            this.props.navigateToFirstTab();\r\n    }\r\n\r\n    APICallback = () => {\r\n\r\n        let enabled;\r\n        const {selectedPlayerDetails} = this.props.playerStore;\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n            const {account} = selectedPlayerDetails;\r\n            enabled = account.enabled;\r\n        }\r\n\r\n        console.log(enabled);\r\n        const {reason, comment} = this.state;\r\n\r\n        if (enabled) {\r\n            this.props.playerStore.disablePlayer(reason, comment);\r\n        } else {\r\n            this.props.playerStore.enablePlayer(reason, comment);\r\n        }\r\n    }\r\n\r\n    onYes = () => {\r\n        this.setState({onYesClicked: true}, () => this.APICallback());\r\n    }\r\n\r\n    handleCancel = () => {\r\n        if (this.state.isFieldsEdited)\r\n            this.setState({showCancelPopup: true});\r\n        else\r\n            this.props.history.goBack();\r\n    }\r\n\r\n    isEmailValid = (email) => {\r\n        return email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n    }\r\n\r\n    callbackToParent = () => {\r\n        const {isFieldsEdited} = this.state;\r\n        const flag = isFieldsEdited;\r\n        this.props.onUpdate(flag);\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({[stateName]: e.target.value, isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        this.setState({[stateName]: val, isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    isReasonCodeValid = (reason) => {\r\n        return reason && reason.trim().length > 0;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {showCancelPopup, reason, comment} = this.state;\r\n        const {showBackConfirm} = this.props;\r\n        const {selectedPlayerDetails, showPlayerLockUnlockModal, showToast, successMessage, errorMessage} = this.props.playerStore;\r\n\r\n        let isDisabled = false;\r\n        isDisabled = !this.isReasonCodeValid(reason)\r\n\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n            const {identity, account} = selectedPlayerDetails;\r\n            const {\r\n                firstName, lastName, gender, dateOfBirth, ssn, phone, address1, address2, city, state, zip5,\r\n                acceptedEmailCommunication, acceptedSmsCommunication, termsAcceptedDate, identityCheckResult\r\n            } = identity;\r\n            const {email, enabled} = account;\r\n\r\n            return (\r\n                <div className='player-details-container container-fluid '>\r\n                    {/*{showToast\r\n                        ?\r\n                        <AppToast showToast={showToast}\r\n                                  message={successMessage ? successMessage : errorMessage}\r\n                                  isSuccessMessage={successMessage !== null}\r\n                                  handleClose={() => this.handleToastClose()}/>\r\n                        : null\r\n                    }*/}\r\n                    <Modal show={showCancelPopup || showBackConfirm} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to cancel? All unsaved changes will be lost.\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onRejectCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onCancel(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={showPlayerLockUnlockModal} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to Lock/Unlock?\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onYes(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <div className='player-details-panel'>\r\n                        <div className='player-details-child '>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>First Name</div>\r\n                                    <div className='player-details-value'>{firstName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Last Name</div>\r\n                                    <div className='player-details-value'>{lastName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SSN</div>\r\n                                    <div className='player-details-value'>{ssn}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Date of Birth</div>\r\n                                    <div className='player-details-value'>{dateOfBirth}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Gender</div>\r\n                                    <div className='player-details-value'>{gender}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 1</div>\r\n                                    <div className='player-details-value'>{address1}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 2</div>\r\n                                    <div className='player-details-value'>{address2}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>City</div>\r\n                                    <div className='player-details-value'>{city}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>State</div>\r\n                                    <div className='player-details-value'>{state}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Zipcode</div>\r\n                                    <div className='player-details-value'>{zip5}</div>\r\n                                </div>\r\n\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email</div>\r\n                                    <div className='player-details-value'>{email}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Phone</div>\r\n                                    <div className='player-details-value'>{phone}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Opt-In</div>\r\n                                    <input disabled={true} type=\"checkbox\" id=\"exampleCheck1\"\r\n                                           checked={acceptedEmailCommunication}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SMS Opt-In</div>\r\n                                    <input disabled={true} type=\"checkbox\" id=\"exampleCheck1\"\r\n                                           checked={acceptedSmsCommunication}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>T&C Terms Accept</div>\r\n                                    <input disabled={true} type=\"checkbox\" id=\"exampleCheck1\"\r\n                                           checked={termsAcceptedDate}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Identity Check Result</div>\r\n                                    <div className='player-details-value'>{identityCheckResult}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Account Status</div>\r\n                                    <div className='player-details-value'>{enabled ? 'Unlocked' : 'Locked'}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Reason for Action</div>\r\n                                    <select value={reason} onChange={(e) => this.handleSelectChange(e, 'reason')}>\r\n                                        <option selected disabled value=\"\">Select</option>\r\n                                        {enabled ?\r\n                                            LockPlayerReasonCodes.map(rc => {\r\n                                                return <option value={rc}>{rc}</option>\r\n                                            }) :\r\n                                            UnlockPlayerReasonCodes.map(rc => {\r\n                                                return <option value={rc}>{rc}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Comments</div>\r\n                                    <textarea type=\"textarea\" id=\"comment\"\r\n                                              onChange={(e) => this.handleInputChange(e, 'comment')}>{comment}</textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr className='separator'/>\r\n                        <div className='row player-button-row'>\r\n                            <div className='offset-6 col-3 button-column'>\r\n                                {\r\n                                    enabled ?\r\n                                        <Button className='player-details-btn' disabled={isDisabled}\r\n                                                onClick={() => this.handleSubmit()}>\r\n                                            Lock\r\n                                        </Button> :\r\n                                        <Button className='player-details-btn' disabled={isDisabled}\r\n                                                onClick={() => this.handleSubmit()}>\r\n                                            Unlock\r\n                                        </Button>\r\n                                }\r\n                            </div>\r\n                            <div className='col-3 button-column'>\r\n                                <Button className='player-details-btn ' onClick={() => this.handleCancel()}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div className='player-details-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default LockUnlock;\r\n","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport './TicketSearch.css';\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass TicketSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: '',\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.setState({startDate: startDate, endDate: new Date()})\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({[stateName]: e.target.value});\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        if (stateName === 'game') {\r\n            this.props.playerStore.setSelectedGameType(val)\r\n        } else if (stateName === 'winStatus') {\r\n            this.props.playerStore.setSelectedWinStatus(val);\r\n        } else if (stateName === 'status') {\r\n            this.props.playerStore.setSelectedStatus(val);\r\n        }\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {startDate, endDate} = this.state;\r\n        this.props.handleSearchClick(startDate, endDate);\r\n    }\r\n\r\n    onFilter = () => {\r\n        this.props.handleFilterClick();\r\n    }\r\n\r\n    onClearFilters = () => {\r\n        this.props.playerStore.ClearTicketHistoryFilters();\r\n    }\r\n\r\n    onNewSearchCallback = () => {\r\n        this.props.playerStore.clearTicketHistorySearchResults()\r\n        this.props.playerStore.setTicketHistorySearchMode(true)\r\n    }\r\n\r\n    onNewSearch = () => {\r\n        this.setState({\r\n            startDate: '',\r\n            endDate: ''\r\n        }, () => this.onNewSearchCallback());\r\n    }\r\n\r\n    render() {\r\n\r\n        const {startDate, endDate} = this.state;\r\n        const {allGameTypes, allWinStatuses, allStatuses, selectedGameType, selectedWinStatus, selectedStatus, isTicketHistoryInSearchMode} = this.props.playerStore;\r\n\r\n        let isDisabled = true;\r\n\r\n        if ((startDate && endDate)) {\r\n            isDisabled = false\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Start Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isTicketHistoryInSearchMode}\r\n                                    selected={startDate}\r\n                                    maxDate={endDate || new Date()}\r\n                                    onChange={selected => this.setState({startDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>End Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isTicketHistoryInSearchMode}\r\n                                    selected={endDate}\r\n                                    minDate={startDate}\r\n                                    maxDate={new Date()}\r\n                                    onChange={selected => this.setState({endDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Game</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedGameType}\r\n                                onChange={(e) => this.handleSelectChange(e, 'game')}>\r\n                            {\r\n                                allGameTypes.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Win Status</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedWinStatus}\r\n                                onChange={(e) => this.handleSelectChange(e, 'winStatus')}>\r\n                            {\r\n                                allWinStatuses.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Approval Status</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedStatus}\r\n                                onChange={(e) => this.handleSelectChange(e, 'status')}>\r\n                            {\r\n                                allStatuses.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        {isTicketHistoryInSearchMode ?\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onSearch()}>\r\n                                Search\r\n                            </Button> :\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onFilter()}>\r\n                                Filter\r\n                            </Button>\r\n                        }\r\n                        <Button className='ticket-search-btn' disabled={isTicketHistoryInSearchMode} onClick={() => this.onClearFilters()}>\r\n                            Clear Filters\r\n                        </Button>\r\n                        <Button className='ticket-search-btn' onClick={() => this.onNewSearch()}>\r\n                            New Search\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TicketSearch;\r\n\r\n","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport TicketSearch from \"../../Ticket/SearchBar\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport moment from \"moment\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass TicketHistory extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticketHistoryList: [],\r\n            tableHeader: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.onSearchClick(startDate, new Date());\r\n    }\r\n\r\n    onSearchClick = (queryDateRangeStart = '', queryDateRangeEnd = '') => {\r\n\r\n        const startDate = new Date(queryDateRangeStart);\r\n        const momentStartDate = moment(startDate).format();\r\n        const endDate = new Date(queryDateRangeEnd);\r\n        endDate.setHours(23, 59, 59);\r\n        const momentEndDate = moment(endDate).format();\r\n\r\n        let queryParams = '?';\r\n        if (queryDateRangeStart && queryDateRangeStart !== '') {\r\n            queryParams += `queryDateRangeStart=${momentStartDate}`\r\n        }\r\n        if (queryDateRangeEnd && queryDateRangeEnd !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `queryDateRangeEnd=${momentEndDate}`\r\n            else\r\n                queryParams += `&queryDateRangeEnd=${momentEndDate}`\r\n        }\r\n\r\n        // Log User Action\r\n\r\n        let criteria = `Start Date: ${momentStartDate} End Date: ${momentEndDate}`\r\n        this.props.playerStore.logAction(UserActionCategory.API_CALL, UserAction.TICKET_HISTORY, '', criteria)\r\n\r\n        this.props.playerStore.searchTickets(queryParams);\r\n    }\r\n\r\n    onFilterClick = () => {\r\n        this.props.playerStore.filterTicketHistoryResult();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.playerStore.setTicketHistoryToast(false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {ticketHistoryTableHeader, ticketHistoryTableRows, showTicketHistoryToast, successMessage, errorMessage} = this.props.playerStore;\r\n        let Timestamp;\r\n        let rows = ticketHistoryTableRows && ticketHistoryTableRows.map((d, index) => {\r\n            d.idField = index + 1;\r\n            Timestamp = `${d.requestTimestamp}`\r\n            d.date = Timestamp.substring(0, 10)\r\n            d.time = Timestamp.substring(11, 19)\r\n            d.amount = isNaN(`${d.prizeAmount}`) ? `${d.prizeAmount}` : (Number(`${d.prizeAmount}`) / 100).toFixed(2)\r\n            return d;\r\n        });\r\n\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                <div className='player-search-panel player-search-child'>\r\n                    <TicketSearch tableHeader={ticketHistoryTableHeader} userList={rows}\r\n                                  handleSearchClick={this.onSearchClick}\r\n                                  handleFilterClick={this.onFilterClick} {...this.props}/>\r\n                </div>\r\n                {\r\n                    ticketHistoryTableHeader && rows\r\n                        ? <ReactTable tableHeader={ticketHistoryTableHeader} rowData={rows}\r\n                                          className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {/*{showTicketHistoryToast\r\n                    ?\r\n                    <AppToast showToast={showTicketHistoryToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }*/}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default TicketHistory;\r\n","export const AddressStateCodes = [\r\n    'AK',\r\n    'AL',\r\n    'AR',\r\n    'AZ',\r\n    'CA',\r\n    'CO',\r\n    'CT',\r\n    'DE',\r\n    'DC',\r\n    'FL',\r\n    'GA',\r\n    'HI',\r\n    'ID',\r\n    'IL',\r\n    'IN',\r\n    'IA',\r\n    'KS',\r\n    'KY',\r\n    'LA',\r\n    'ME',\r\n    'MD',\r\n    'MA',\r\n    'MI',\r\n    'MN',\r\n    'MS',\r\n    'MO',\r\n    'MT',\r\n    'NE',\r\n    'NV',\r\n    'NH',\r\n    'NJ',\r\n    'NM',\r\n    'NY',\r\n    'NC',\r\n    'ND',\r\n    'OH',\r\n    'OK',\r\n    'OR',\r\n    'PA',\r\n    'PR',\r\n    'RI',\r\n    'SC',\r\n    'SD',\r\n    'TN',\r\n    'TX',\r\n    'UT',\r\n    'VT',\r\n    'VA',\r\n    'WA',\r\n    'WV',\r\n    'WI',\r\n    'WY'\r\n]","export const GenderCodes = [\r\n    'Male',\r\n    'Female',\r\n    'Non-Binary',\r\n    'Prefer not to Designate'\r\n]","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {AddressStateCodes} from \"../../Constants/AddressStateCodes\";\r\nimport {GenderCodes} from \"../../Constants/GenderCodes\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass UpdateProfile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isValidEmail: false,\r\n            isValidPhone: false,\r\n            isFieldsEdited: false,\r\n            showCancelPopup: false,\r\n            onYesClicked: false\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.playerStore.setShowUpdateModal(true);\r\n    }\r\n    onSubmitCancel = () => {\r\n        this.props.playerStore.setShowUpdateModal(false)\r\n    }\r\n    onRejectCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(false));\r\n    }\r\n    onCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(true));\r\n    }\r\n\r\n    handleCancel = () => {\r\n        if (this.state.isFieldsEdited)\r\n            this.setState({showCancelPopup: true});\r\n        else\r\n            this.props.history.goBack();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        const navigateToFirstTab = this.props.playerStore.successMessage;\r\n        this.props.playerStore.setToast(false);\r\n        if (navigateToFirstTab)\r\n            this.props.navigateToFirstTab();\r\n    }\r\n\r\n    callbackToParent = () => {\r\n        const {isFieldsEdited} = this.state;\r\n        const flag = isFieldsEdited;\r\n        this.props.onUpdate(flag);\r\n    }\r\n\r\n    handleSSNOnClick = (e, stateName) => {\r\n        //const val = e.target.value;\r\n        this.props.playerStore.updateUserDetails('', stateName);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSSNChange = (e, stateName) => {\r\n        let val = e.target.value.replace(/\\D/g, '');\r\n        //var val = this.value.replace(/\\D/g, '');\r\n        var newVal = '';\r\n        if (val.length > 4) {\r\n            this.value = val;\r\n        }\r\n        if ((val.length > 3) && (val.length < 6)) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            val = val.substr(3);\r\n        }\r\n        if (val.length > 5) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            newVal += val.substr(3, 2) + '-';\r\n            val = val.substr(5);\r\n        }\r\n        newVal += val;\r\n        //this.value = newVal;\r\n        this.props.playerStore.updateUserDetails(newVal, stateName);\r\n    }\r\n\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        this.props.playerStore.updateUserDetails(val, stateName);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    isEmailValid = (email) => {\r\n        return email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n    }\r\n\r\n    isPhoneNumberValid = (phone) => {\r\n        return phone.match(/^[0-9\\b]+$/) && phone.length == 10;\r\n    }\r\n\r\n    isZipcodeValid = (zip5) => {\r\n        return zip5.match(/^[0-9\\b]+$/) && zip5.length == 5;\r\n    }\r\n\r\n    isAddr1Valid = (addr1) => {\r\n        return addr1 && addr1.trim().length > 0;\r\n    }\r\n\r\n    isCityValid = (city) => {\r\n        return city && city.trim().length > 0;\r\n    }\r\n\r\n    isStateValid = (addrState) => {\r\n        return addrState && addrState.trim().length > 0;\r\n    }\r\n\r\n    isSSNValid = (ssn) => {\r\n        return ssn && ssn.trim().length == 11;\r\n    }\r\n\r\n    handleEmailChange = (e, stateName) => {\r\n        const val = (e.target.value);\r\n        this.props.playerStore.updateUserEmail(val, stateName);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleCheckboxChange = (e, stateName) => {\r\n        let val = (e.target.checked);\r\n        if (stateName === 'termsAcceptedDate') {\r\n            val = val ? new Date(val) : null;\r\n        }\r\n        this.props.playerStore.updateUserDetails(val, stateName);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const value = e.target.value;\r\n        if (stateName === 'gender') {\r\n            this.props.playerStore.updateUserDetails(value, 'gender');\r\n        } else if (stateName === 'state') {\r\n            this.props.playerStore.updateUserDetails(value, 'state');\r\n        }\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleDateChange = (selected) => {\r\n        let dateString = new Date(selected);\r\n        let monthString = dateString.getMonth() + 1;\r\n        let dayString = dateString.getDate();\r\n        let yearString = dateString.getFullYear();\r\n        let timeString = 'T00:00:00';\r\n        dateString = yearString + \"-\" + (\"0\" + monthString).slice(-2) + \"-\" + (\"0\" + dayString).slice(-2) + \"\" + timeString;\r\n        this.props.playerStore.updatePlayerDateOfBirth(dateString);\r\n    }\r\n\r\n    APICallback = () => {\r\n        this.props.playerStore.updatePlayer();\r\n    }\r\n\r\n    onYes = () => {\r\n        this.setState({onYesClicked: true}, () => this.APICallback());\r\n    }\r\n\r\n    render() {\r\n\r\n        let isDisabled = false;\r\n\r\n        let date18YearAgo = new Date();\r\n        date18YearAgo.setFullYear(date18YearAgo.getFullYear() - 18)\r\n\r\n        const {showBackConfirm} = this.props;\r\n        const {selectedPlayerDetails, showUpdateModal, showToast, successMessage, errorMessage} = this.props.playerStore;\r\n\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n\r\n            const {showCancelPopup} = this.state;\r\n\r\n            const {identity, account} = selectedPlayerDetails;\r\n            const {\r\n                firstName, lastName, gender, dateOfBirth, ssn, phone, address1, address2, city, state, zip5,\r\n                acceptedEmailCommunication, acceptedSmsCommunication, termsAcceptedDate\r\n            } = identity;\r\n            const {email} = account;\r\n\r\n            isDisabled = !this.isEmailValid(email) || !this.isPhoneNumberValid(phone) || !this.isZipcodeValid(zip5) ||\r\n                !this.isAddr1Valid(address1) || !this.isCityValid(city) ||\r\n                !this.isStateValid(state) || !this.isSSNValid(ssn);\r\n\r\n            return (\r\n                <div className='player-details-container container-fluid '>\r\n                    {/*{showToast\r\n                        ?\r\n                        <AppToast showToast={showToast}\r\n                                  message={successMessage ? successMessage : errorMessage}\r\n                                  isSuccessMessage={successMessage !== null}\r\n                                  handleClose={() => this.handleToastClose()}/>\r\n                        : null\r\n                    }*/}\r\n                    <Modal show={showCancelPopup || showBackConfirm} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to cancel? All unsaved changes will be lost.\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onRejectCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onCancel(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={showUpdateModal} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to Submit?\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={() => this.onYes()}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n\r\n                    <div className='player-details-panel'>\r\n                        <div className='player-details-child '>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>First Name</div>\r\n                                    <AppTextbox type='text' placeholder='Enter First Name ' value={firstName}\r\n                                                onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Last Name</div>\r\n                                    <AppTextbox type='text' placeholder='Enter last Name ' value={lastName}\r\n                                                onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SSN</div>\r\n                                    {checkRenderPermissions(permissions.CAN_UPDATE_PLAYER_SSN, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                        <AppTextbox type='text' maxlength='11' placeholder='Enter SSN' value={ssn}\r\n                                                    onChange={(e) => this.handleSSNChange(e, 'ssn')}\r\n                                                    onClick={(e) => this.handleSSNOnClick(e, 'ssn')}\r\n                                        /> :\r\n                                        <div className='player-details-value'>{ssn}</div>}\r\n                                    {\r\n                                        !this.isSSNValid(ssn)\r\n                                            ? <div className='player-invalid-email'>Invalid SSN</div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Date of Birth</div>\r\n                                    <DatePicker popperPlacement=\"bottom-end\"\r\n                                                selected={dateOfBirth ? new Date(dateOfBirth): null}\r\n                                                maxDate={date18YearAgo}\r\n                                                onChange={date => this.handleDateChange(date)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Gender</div>\r\n                                    <select value={gender} onChange={(e) => this.handleSelectChange(e, 'gender')}>\r\n                                        <option selected disabled value=\"\">Select</option>\r\n                                        {\r\n                                            GenderCodes.map(g => {\r\n                                                return <option value={g}>{g}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 1</div>\r\n                                    <AppTextbox type='text' placeholder='Enter address1 ' value={address1}\r\n                                                onChange={(e) => this.handleInputChange(e, 'address1')}/>\r\n                                    {\r\n                                        !this.isAddr1Valid(address1)\r\n                                            ? <div className='player-invalid-email'>Invalid Address 1</div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 2</div>\r\n                                    <AppTextbox type='text' placeholder='Enter address2 ' value={address2}\r\n                                                onChange={(e) => this.handleInputChange(e, 'address2')}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>City</div>\r\n                                    <AppTextbox type='text' placeholder='Enter city' value={city}\r\n                                                onChange={(e) => this.handleInputChange(e, 'city')}/>\r\n                                    {\r\n                                        !this.isCityValid(city)\r\n                                            ? <div className='player-invalid-email'>Invalid City</div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>State</div>\r\n                                    <select value={state} onChange={(e) => this.handleSelectChange(e, 'state')}>\r\n                                        <option selected disabled value=\"\">Select</option>\r\n                                        {\r\n                                            AddressStateCodes.map(g => {\r\n                                                return <option value={g}>{g}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Zipcode</div>\r\n                                    <AppTextbox type='text' placeholder='Enter zipcode ' value={zip5} maxlength='5'\r\n                                                onChange={(e) => this.handleInputChange(e, 'zip5')}/>\r\n                                    {\r\n                                        !this.isZipcodeValid(zip5) && zip5.length\r\n                                            ? <div className='player-invalid-email'>Invalid Zipcode</div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email</div>\r\n                                    <AppTextbox type='text' placeholder='Enter email ' value={email}\r\n                                                onChange={(e) => this.handleEmailChange(e, 'email')}/>\r\n                                    {\r\n                                        !this.isEmailValid(email) && email.length\r\n                                            ? <div className='player-invalid-email'>Invalid Email</div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Phone</div>\r\n                                    <AppTextbox type='text' placeholder='Enter Cellphone ' value={phone}\r\n                                                maxlength='10'\r\n                                                onChange={(e) => this.handleInputChange(e, 'phone')}/>\r\n                                    {\r\n                                        !this.isPhoneNumberValid(phone) && phone.length\r\n                                            ? <div className='player-invalid-email'>Phone should be 10 digit</div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Opt-In</div>\r\n                                    <input type=\"checkbox\" id=\"EmailOptInCheck\" checked={acceptedEmailCommunication}\r\n                                           onChange={(e) => this.handleCheckboxChange(e, 'acceptedEmailCommunication')}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SMS Opt-In</div>\r\n                                    <input type=\"checkbox\" id=\"SMSOptInCheck\" checked={acceptedSmsCommunication}\r\n                                           onChange={(e) => this.handleCheckboxChange(e, 'acceptedSmsCommunication')}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>T&C Terms Accept</div>\r\n                                    <input type=\"checkbox\" id=\"TnCTermsAcceptCheck\" checked={termsAcceptedDate}\r\n                                           disabled={true}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr className='separator'/>\r\n                        <div className='row player-button-row'>\r\n                            <div className='offset-6 col-3 button-column'>\r\n                                <Button disabled={isDisabled} className='player-details-btn'\r\n                                        onClick={() => this.handleSubmit()}>\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-3 button-column'>\r\n                                <Button className='player-details-btn ' onClick={() => this.handleCancel()}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div className='player-details-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport './EventSearch.css';\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass EventSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: '',\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.setState({startDate: startDate, endDate: new Date()})\r\n        this.onNewSearch();\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({[stateName]: e.target.value});\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        if (stateName === 'clientOs') {\r\n            this.props.playerStore.setSelectedDeviceType(val)\r\n        } else if (stateName === 'authEvent') {\r\n            this.props.playerStore.setSelectedEvent(val);\r\n        }\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {startDate, endDate} = this.state;\r\n        this.props.handleSearchClick(startDate, endDate);\r\n    }\r\n\r\n    onFilter = () => {\r\n        this.props.handleFilterClick();\r\n    }\r\n\r\n    onClearFilters = () => {\r\n        this.props.playerStore.ClearEventHistoryFilters();\r\n    }\r\n\r\n    onNewSearchCallback = () => {\r\n        this.props.playerStore.clearEventHistorySearchResults()\r\n        this.props.playerStore.setEventHistorySearchMode(true)\r\n    }\r\n\r\n    onNewSearch = () => {\r\n        this.setState({\r\n            startDate: '',\r\n            endDate: ''\r\n        }, () => this.onNewSearchCallback());\r\n    }\r\n\r\n    render() {\r\n\r\n        const {startDate, endDate} = this.state;\r\n        const {allDeviceTypes, allEvents, selectedDeviceType, selectedEvent, isEventHistoryInSearchMode} = this.props.playerStore;\r\n\r\n        let isDisabled = true;\r\n\r\n        if ((startDate && endDate)) {\r\n            isDisabled = false\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Start Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isEventHistoryInSearchMode}\r\n                                    selected={startDate}\r\n                                    maxDate={endDate || new Date()}\r\n                                    onChange={selected => this.setState({startDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>End Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isEventHistoryInSearchMode}\r\n                                    selected={endDate}\r\n                                    minDate={startDate}\r\n                                    maxDate={new Date()}\r\n                                    onChange={selected => this.setState({endDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Device Type</div>\r\n                        <select disabled={isEventHistoryInSearchMode} value={selectedDeviceType}\r\n                                onChange={(e) => this.handleSelectChange(e, 'clientOs')}>\r\n                            {\r\n                                allDeviceTypes.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Event</div>\r\n                        <select disabled={isEventHistoryInSearchMode} value={selectedEvent}\r\n                                onChange={(e) => this.handleSelectChange(e, 'authEvent')}>\r\n                            {\r\n                                allEvents.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        {isEventHistoryInSearchMode ?\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onSearch()}>\r\n                                Search\r\n                            </Button> :\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onFilter()}>\r\n                                Filter\r\n                            </Button>\r\n                        }\r\n                        <Button className='ticket-search-btn' disabled={isEventHistoryInSearchMode} onClick={() => this.onClearFilters()}>\r\n                            Clear Filters\r\n                        </Button>\r\n                        <Button className='ticket-search-btn' onClick={() => this.onNewSearch()}>\r\n                            New Search\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EventSearch;\r\n\r\n","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport EventSearch from \"../../Event/SearchBar\";\r\nimport moment from \"moment\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass EventHistory extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            eventHistoryList: [],\r\n            tableHeader: [],\r\n            showToast: false\r\n        }\r\n    }\r\n\r\n/*    componentDidMount() {\r\n        /!*let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.onSearchClick(startDate, new Date());*!/\r\n    }*/\r\n\r\n    onSearchClick = (queryDateRangeStart = '', queryDateRangeEnd = '') => {\r\n\r\n        const startDate = new Date(queryDateRangeStart);\r\n        const momentStartDate = moment(startDate).format();\r\n        const endDate = new Date(queryDateRangeEnd);\r\n        endDate.setHours(23, 59, 59);\r\n        const momentEndDate = moment(endDate).format();\r\n        \r\n        let queryParams = '?';\r\n        if (queryDateRangeStart && queryDateRangeStart !== '') {\r\n            queryParams += `queryDateRangeStart=${momentStartDate}`\r\n        }\r\n        if (queryDateRangeEnd && queryDateRangeEnd !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `queryDateRangeEnd=${momentEndDate}`\r\n            else\r\n                queryParams += `&queryDateRangeEnd=${momentEndDate}`\r\n        }\r\n\r\n        this.props.playerStore.searchEvents(queryParams);\r\n    }\r\n\r\n    onFilterClick = () => {\r\n        this.props.playerStore.filterEventHistoryResult();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.playerStore.setEventHistoryToast(false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {eventHistoryTableHeader, eventHistoryTableRows, showEventHistoryToast, successMessage, errorMessage} = this.props.playerStore;\r\n        let Timestamp;\r\n        let rows = eventHistoryTableRows && eventHistoryTableRows.map((d, index) => {\r\n            d.idField = index + 1;\r\n            Timestamp = `${d.eventTimestamp}`\r\n            d.date = Timestamp.substring(0, 10)\r\n            d.time = Timestamp.substring(11, 19)\r\n            return d;\r\n        });\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                <div className='player-search-panel player-search-child'>\r\n                    <EventSearch tableHeader={eventHistoryTableHeader} userList={rows}\r\n                                  handleSearchClick={this.onSearchClick} handleFilterClick={this.onFilterClick} {...this.props}/>\r\n                </div>\r\n                {\r\n                    eventHistoryTableHeader && rows\r\n                        ? <ReactTable tableHeader={eventHistoryTableHeader} rowData={rows}\r\n                                          className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {/*{showEventHistoryToast\r\n                    ?\r\n                    <AppToast showToast={showEventHistoryToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }*/}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default EventHistory;\r\n","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass ClaimHistory extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.playerStore.selectedPlayerID) {\r\n            this.props.playerStore.fetchAllClaims();\r\n        }\r\n    }\r\n\r\n    handleClaimDetailClick = claimData => {\r\n        this.props.playerStore.setSelectedClaim(claimData, this.navigateToClaimDetails);\r\n    }\r\n\r\n    navigateToClaimDetails = () => {\r\n        const id = this.props.playerStore.selectedClaimId;\r\n        this.props.history.push('/claim/'+id);\r\n    }\r\n\r\n    render() {\r\n        const {claimHistoryTableHeader, claimHistoryTableRows, selectedPlayerID} = this.props.playerStore;\r\n        let tableRows = JSON.parse(JSON.stringify(claimHistoryTableRows));\r\n        let tableHeaders = JSON.parse(JSON.stringify(claimHistoryTableHeader));\r\n        if(tableHeaders && tableRows) {\r\n            const isViewPermission = checkRenderPermissions(permissions.CAN_SEE_CLAIM_DETAILS,\r\n                JSON.parse(localStorage.getItem('userpolicies')));\r\n            if(isViewPermission) {\r\n                tableRows = tableRows.map(row => {\r\n                    row.view = <a onClick={() => this.handleClaimDetailClick(row)} className='claim-tab-link'>View</a>;\r\n                    return row;\r\n                });\r\n                tableHeaders.push({key: 'view', label: 'View'});\r\n            }\r\n        }\r\n        if(!selectedPlayerID && !tableHeaders && !tableRows) {\r\n            return (<div className='player-search-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>);\r\n        }\r\n\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                {\r\n                    tableHeaders && tableRows\r\n                        ? <ReactTable tableHeader={tableHeaders}\r\n                                      rowData={tableRows}\r\n                                      noDataMessage='Player has no Claims'\r\n                                      className='update-user-table'/>\r\n                        : null\r\n                }\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ClaimHistory;\r\n","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport {UnlockPlayerReasonCodes} from \"../../Constants/UnlockPlayerReasonCodes\";\r\nimport {LockPlayerReasonCodes} from \"../../Constants/LockPlayerReasonCodes\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass EnableDisable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFieldsEdited: false,\r\n            locked: true,\r\n            isUpdate: false,\r\n            showSuccess: false,\r\n            successMessage: '',\r\n            showToast: false,\r\n            showCancelPopup: false,\r\n            onYesClicked: false,\r\n            reason: '',\r\n            comment: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.playerStore.setShowPlayerEnableDisableModal(true);\r\n    }\r\n\r\n    onSubmitCancel = () => {\r\n        this.props.playerStore.setShowPlayerEnableDisableModal(false)\r\n    }\r\n\r\n    onRejectCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(false));\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(true));\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        const navigateToFirstTab = this.props.playerStore.successMessage;\r\n        this.props.playerStore.setToast(false);\r\n        if (navigateToFirstTab)\r\n            this.props.navigateToFirstTab();\r\n    }\r\n\r\n    APICallback = () => {\r\n\r\n        let enabled;\r\n        const {selectedPlayerDetails} = this.props.playerStore;\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n            const {identity} = selectedPlayerDetails;\r\n            enabled = identity.scanStatus == 'ENABLED';\r\n        }\r\n\r\n        console.log(enabled);\r\n        const {reason, comment} = this.state;\r\n\r\n        if (enabled) {\r\n            this.props.playerStore.disablePlayerScan(reason, comment);\r\n        } else {\r\n            this.props.playerStore.enablePlayerScan(reason, comment);\r\n        }\r\n    }\r\n\r\n    onYes = () => {\r\n        this.setState({onYesClicked: true}, () => this.APICallback());\r\n    }\r\n\r\n    handleCancel = () => {\r\n        if (this.state.isFieldsEdited)\r\n            this.setState({showCancelPopup: true});\r\n        else\r\n            this.props.history.goBack();\r\n    }\r\n\r\n    isEmailValid = (email) => {\r\n        return email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n    }\r\n\r\n    callbackToParent = () => {\r\n        const {isFieldsEdited} = this.state;\r\n        const flag = isFieldsEdited;\r\n        this.props.onUpdate(flag);\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({[stateName]: e.target.value, isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        this.setState({[stateName]: val, isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    render() {\r\n\r\n        const {showCancelPopup, reason, comment} = this.state;\r\n        const {showBackConfirm} = this.props;\r\n        const {selectedPlayerDetails, showPlayerLockUnlockModal, showPlayerEnableDisableModal, showToast, successMessage, errorMessage} = this.props.playerStore;\r\n\r\n        let isDisabled = false;\r\n\r\n        if (selectedPlayerDetails && selectedPlayerDetails.identity && selectedPlayerDetails.account) {\r\n            const {identity, account} = selectedPlayerDetails;\r\n            const {\r\n                firstName, lastName, gender, dateOfBirth, ssn, phone, address1, address2, city, state, zip5,\r\n                acceptedEmailCommunication, acceptedSmsCommunication, termsAcceptedDate, identityCheckResult, scanStatus \r\n            } = identity;\r\n            const {email, enabled} = account;\r\n\r\n            return (\r\n                <div className='player-details-container container-fluid '>\r\n                    {/*{showToast\r\n                        ?\r\n                        <AppToast showToast={showToast}\r\n                                  message={successMessage ? successMessage : errorMessage}\r\n                                  isSuccessMessage={successMessage !== null}\r\n                                  handleClose={() => this.handleToastClose()}/>\r\n                        : null\r\n                    }*/}\r\n                    <Modal show={showCancelPopup || showBackConfirm} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to cancel? All unsaved changes will be lost.\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onRejectCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onCancel(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={showPlayerEnableDisableModal} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you would like to Enable/Disable Scans?\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.onYes(e)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <div className='player-details-panel'>\r\n                        <div className='player-details-child '>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>First Name</div>\r\n                                    <div className='player-details-value'>{firstName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Last Name</div>\r\n                                    <div className='player-details-value'>{lastName}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SSN</div>\r\n                                    <div className='player-details-value'>{ssn}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Date of Birth</div>\r\n                                    <div className='player-details-value'>{dateOfBirth}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Gender</div>\r\n                                    <div className='player-details-value'>{gender}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 1</div>\r\n                                    <div className='player-details-value'>{address1}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Mailing Address 2</div>\r\n                                    <div className='player-details-value'>{address2}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>City</div>\r\n                                    <div className='player-details-value'>{city}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>State</div>\r\n                                    <div className='player-details-value'>{state}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Zipcode</div>\r\n                                    <div className='player-details-value'>{zip5}</div>\r\n                                </div>\r\n\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email</div>\r\n                                    <div className='player-details-value'>{email}</div>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Phone</div>\r\n                                    <div className='player-details-value'>{phone}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Email Opt-In</div>\r\n                                    <input disabled={true} type=\"checkbox\" id=\"exampleCheck1\"\r\n                                           checked={acceptedEmailCommunication}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>SMS Opt-In</div>\r\n                                    <input disabled={true} type=\"checkbox\" id=\"exampleCheck1\"\r\n                                           checked={acceptedSmsCommunication}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>T&C Terms Accept</div>\r\n                                    <input disabled={true} type=\"checkbox\" id=\"exampleCheck1\"\r\n                                           checked={termsAcceptedDate}/>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Ticket Scanner Status</div>\r\n                                    <div className='player-details-value'>{scanStatus == 'ENABLED'  ? 'Enabled' : 'Disabled'}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                            <div className='col-3'/>\r\n                            <div className='col-3'/>\r\n                                <div className='col-3'>\r\n                                    <div className='player-details-label'>Comments</div>\r\n                                    <textarea type=\"textarea\" id=\"comment\"\r\n                                              onChange={(e) => this.handleInputChange(e, 'comment')}>{comment}</textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr className='separator'/>\r\n                        <div className='row player-button-row'>\r\n                            <div className='offset-6 col-3 button-column'>\r\n                                {\r\n                                    (scanStatus == 'ENABLED') ?\r\n                                        <Button className='player-details-btn' disabled={isDisabled}\r\n                                                onClick={() => this.handleSubmit()}>\r\n                                            Disable\r\n                                        </Button> :\r\n                                        <Button className='player-details-btn' disabled={isDisabled}\r\n                                                onClick={() => this.handleSubmit()}>\r\n                                            Enable\r\n                                        </Button>\r\n                                }\r\n                            </div>\r\n                            <div className='col-3 button-column'>\r\n                                <Button className='player-details-btn ' onClick={() => this.handleCancel()}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div className='player-details-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default EnableDisable;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport PlayerHub from \"./PlayerHub\";\r\n\r\nconst PlayerHubComponent = AuthLayoutHOC(PlayerHub);\r\n\r\nexport default PlayerHubComponent;\r\n","import React from \"react\";\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport './PlayerHub.css';\r\nimport Details from \"../Tabs/Details\";\r\nimport KYCVerification from \"../Tabs/KYCVerification\";\r\nimport ConfirmEmail from \"../Tabs/ConfirmEmail\";\r\nimport LockUnlock from \"../Tabs/LockUnlock\";\r\nimport TicketHistory from \"../Tabs/TicketHistory\";\r\nimport UpdateProfile from \"../Tabs/UpdateProfile\";\r\nimport EventHistory from \"../Tabs/EventHistory\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport {UserActionCategory} from \"../../UserActionCategory\";\r\nimport AppToast from \"../../toast\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport ClaimHistory from \"../Tabs/ClaimHistory\";\r\nimport EnableDisable from \"../Tabs/EnableDisable\";\r\n\r\n\r\n//  Constant Tab Keys\r\nconst PLAYER_DETAILS = 'Player Details';\r\nconst UPDATE_PLAYER_PROFILE = 'Update Player Profile';\r\nconst CONFIRM_EMAIL = 'Confirm Email';\r\nconst LOCK_UNLOCK_PLAYER = 'Lock Unlock Player';\r\nconst ENABLE_DISABLE_SCANS = 'Enable Disable Player Scans';\r\nconst VERIFY_PLAYER = 'Verify Player';\r\nconst TICKET_HISTORY = 'Ticket History';\r\nconst EVENT_HISTORY = 'Event History';\r\nconst CLAIM_HISTORY = 'Claim History';\r\n\r\n//  Constant Tab Titles\r\nconst PLAYER_DETAILS_TITLE = 'Details';\r\nconst UPDATE_PLAYER_PROFILE_TITLE = 'Update Profile';\r\nconst CONFIRM_EMAIL_TITLE = 'Confirm Email';\r\nconst LOCK_UNLOCK_PLAYER_TITLE = 'Lock/Unlock';\r\nconst ENABLE_DISABLE_PLAYER_TITLE = 'Ticket Scanner Activity';\r\nconst VERIFY_PLAYER_TITLE = 'KYC Verification';\r\nconst TICKET_HISTORY_TITLE = 'Ticket History';\r\nconst EVENT_HISTORY_TITLE = 'Event History';\r\nconst CLAIM_HISTORY_TITLE = 'Claims';\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass PlayerHub extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     tabKey: PLAYER_DETAILS,\r\n        //     selectedIndex: 0\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //alert('hi')\r\n        this.props.playerStore.getPlayerDetails();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        const navigateToFirstTab = this.props.playerStore.playerHubNavigateToFirstTab;\r\n        this.props.playerStore.setToast(false);\r\n        if (navigateToFirstTab)\r\n            this.navigateToFirstTab();\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleSelect = (key) => {\r\n        let firstName = '';\r\n        let lastName = '';\r\n        const {selectedPlayerDetails} = this.props.playerStore;\r\n        if (selectedPlayerDetails) {\r\n            const {identity} = selectedPlayerDetails;\r\n            if (identity) {\r\n                firstName = identity['firstName'];\r\n                lastName = identity['lastName'];\r\n            }\r\n        }\r\n        const target = `Player Name: ${firstName} ${lastName}`;\r\n        if(key !== CLAIM_HISTORY) {\r\n            this.props.playerStore.logAction(UserActionCategory.TAB_VIEW, key, target);\r\n        }\r\n\r\n        if (key === PLAYER_DETAILS) {\r\n            this.props.playerStore.getPlayerDetails();\r\n            // this.setState({tabKey: key}, () => this.props.playerStore.getPlayerDetails())\r\n        }\r\n        this.props.playerStore.setSelectedTabKey(key);\r\n        // else {\r\n        //     this.setState({tabKey: key})\r\n        // }\r\n\r\n    }\r\n\r\n    navigateToFirstTab = () => {\r\n        this.handleSelect(PLAYER_DETAILS);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {showToast, successMessage, errorMessage} = this.props.playerStore;\r\n        const tabKey = this.props.playerStore.selectedTabKey;\r\n        return (\r\n            <div className='app-tab-panel'>\r\n                {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={tabKey}\r\n                    onSelect={(key) => this.handleSelect(key)}\r\n                >\r\n                    <Tab eventKey={PLAYER_DETAILS} title={PLAYER_DETAILS_TITLE}>\r\n                        {tabKey === PLAYER_DETAILS ? <Details {...this.props}/> : null}\r\n                    </Tab>\r\n                    {checkRenderPermissions(permissions.UPDATE_PLAYER, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={UPDATE_PLAYER_PROFILE} title={UPDATE_PLAYER_PROFILE_TITLE}>\r\n                            {tabKey === UPDATE_PLAYER_PROFILE ? <UpdateProfile navigateToFirstTab={this.navigateToFirstTab} {...this.props} /> : null }\r\n                        </Tab> : null}\r\n                    {checkRenderPermissions(permissions.CAN_CONFIRM_PLAYER_EMAIL, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={CONFIRM_EMAIL} title={CONFIRM_EMAIL_TITLE}>\r\n                            {tabKey === CONFIRM_EMAIL ? <ConfirmEmail navigateToFirstTab={this.navigateToFirstTab} {...this.props}/> : null }\r\n                        </Tab> : null}\r\n                    {checkRenderPermissions(permissions.UNLOCK_PLAYER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={LOCK_UNLOCK_PLAYER} title={LOCK_UNLOCK_PLAYER_TITLE}>\r\n                            {tabKey === LOCK_UNLOCK_PLAYER ? <LockUnlock navigateToFirstTab={this.navigateToFirstTab} {...this.props}/> : null }\r\n                        </Tab> : null}\r\n                    {checkRenderPermissions(permissions.ENABLE_PLAYER_SCANS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={ENABLE_DISABLE_SCANS} title={ENABLE_DISABLE_PLAYER_TITLE}>\r\n                            {tabKey === ENABLE_DISABLE_SCANS ? <EnableDisable navigateToFirstTab={this.navigateToFirstTab} {...this.props}/> : null }\r\n                        </Tab> : null}\r\n                    {checkRenderPermissions(permissions.SEE_PLAYER_VERIFICATION, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={VERIFY_PLAYER} title={VERIFY_PLAYER_TITLE}>\r\n                            {tabKey === VERIFY_PLAYER ? <KYCVerification navigateToFirstTab={this.navigateToFirstTab} {...this.props}/> : null}\r\n                        </Tab> : null}\r\n                    {checkRenderPermissions(permissions.CAN_SEE_PLAYER_TICKET_HISTORY, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={TICKET_HISTORY} title={TICKET_HISTORY_TITLE}>\r\n                            {tabKey === TICKET_HISTORY ? <TicketHistory {...this.props}/> : null}\r\n                        </Tab> : null}\r\n                    {checkRenderPermissions(permissions.CAN_SEE_PLAYER_EVENT_HISTORY, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={EVENT_HISTORY} title={EVENT_HISTORY_TITLE}>\r\n                            {tabKey === EVENT_HISTORY ? <EventHistory {...this.props}/> : null }\r\n                        </Tab> : null}\r\n                    {checkRenderPermissions(permissions.CAN_SEE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey={CLAIM_HISTORY} title={CLAIM_HISTORY_TITLE}>\r\n                            {tabKey === CLAIM_HISTORY ? <ClaimHistory {...this.props}/> : null}\r\n                        </Tab> : null}\r\n                </Tabs>\r\n              \r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerHub;","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {inject} from \"mobx-react\";\r\nimport {UserAction} from \"../../UserActionCategory\";\r\n\r\n@inject('playerStore')\r\nclass AuditSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: null,\r\n            endDate: null,\r\n            action: 'Select',\r\n            actionsList: ['Select', ...Object.values(UserAction)]\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({[stateName]: e.target.value});\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        const val = (e.target.value);\r\n        this.setState({action: val});\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {startDate, endDate, action} = this.state;\r\n        this.props.playerStore.clearUserAuditActionSearchResults()\r\n        this.props.handleSearchClick(startDate, endDate, action.value);\r\n    }\r\n\r\n    onClear = () => {\r\n        this.setState({\r\n            startDate: '',\r\n            endDate: '',\r\n            action: '',\r\n        }, () => this.props.playerStore.clearUserAuditActionSearchResults());\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            startDate: '',\r\n            endDate: '',\r\n            action: '',\r\n        }, () => this.props.playerStore.clearUserAuditActionSearchResults());\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {startDate, endDate, action, actionsList} = this.state;\r\n\r\n        // Conditions to activate the [Filter]\r\n        let isDisabled = true;\r\n        if (startDate && endDate) {\r\n            isDisabled = false\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='claim-search-label'>Start Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"Start Date\"\r\n                                    selected={startDate}\r\n                                    onChange={date => this.setState({startDate: date})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>End Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"End Date\"\r\n                                    selected={endDate}\r\n                                    onChange={date => this.setState({endDate: date})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Action</div>\r\n                        <select value={action.id} onChange={this.handleSelectChange}>\r\n                            {\r\n                                actionsList.map((identifier, index) => {\r\n                                    return <option key={index} value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <Button disabled={isDisabled} className='claim-search-btn' onClick={() => this.onSearch()}>\r\n                            Search\r\n                        </Button>\r\n                        <Button className='player-search-btn' onClick={() => this.onClear()}>\r\n                            Clear\r\n                        </Button>\r\n                        <Button className='ticket-search-btn' onClick={() => this.onCancel()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AuditSearch;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ActionAudit from \"./ActionAudit\";\r\n\r\nconst ActionAuditComponent = AuthLayoutHOC(ActionAudit);\r\n\r\nexport default ActionAuditComponent;","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport AppToast from \"../../toast\";\r\nimport AuditSearch from \"../AuditSearch\";\r\nimport config from \"../../config\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore', 'authStore')\r\n@observer\r\nclass ActionAudit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = (this.props.match.params.id);\r\n        const username = this.props.playerStore.selectedBackofficeUserName;\r\n        this.props.playerStore.AuditActionsTableHeader = null;\r\n        this.props.playerStore.AuditActionsTableRows = null;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/user/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res) {\r\n                    const {firstname, lastname} = res;\r\n                    this.props.playerStore.UserNameTitleText = `User: ${firstname} ${lastname}`;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                let errorMessage = error.toString();\r\n            });\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.USER_AUDIT_HISTORY_PAGE, username);\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.playerStore.setToast(false);\r\n    }\r\n\r\n    onSearchClick = (startDate='', endDate='', action='') => {\r\n\r\n        startDate.setHours(0,0,0,0);\r\n        startDate = new Date(startDate).toUTCString();\r\n        endDate.setHours(0,0,0,0);\r\n        endDate = new Date(endDate).toUTCString();\r\n\r\n        let queryParams = '?';\r\n        if (startDate && startDate !== '') {\r\n            queryParams += `startDate=${startDate}`\r\n        }\r\n        if (endDate && endDate !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `endDate=${endDate}`\r\n            else\r\n                queryParams += `&endDate=${endDate}`\r\n        }\r\n        if (action && action !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `action=${action}`\r\n            else\r\n                queryParams += `&action=${action}`\r\n        }\r\n\r\n        this.props.playerStore.searchUserAuditActions(queryParams);\r\n    }\r\n\r\n    renderActionAudit() {\r\n        const {AuditActionsTableHeader, AuditActionsTableRows, showToast, successMessage, errorMessage} = this.props.playerStore;\r\n        let Timestamp;\r\n        const rows = AuditActionsTableRows && AuditActionsTableRows.map((d, index) => {\r\n            d.idField = index + 1;\r\n            Timestamp = `${d.timestamp}`\r\n            d.date = Timestamp.substring(0, 10)\r\n            d.time = Timestamp.substring(11, 19)\r\n            d.actions = `${d.category} : ${d.action}`\r\n            d.data =  d.comments ? `${d.result} : ${d.comments}` : `${d.result}`\r\n            return d;\r\n        });\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                <div className='player-search-panel player-search-child'>\r\n                    <AuditSearch tableHeader={AuditActionsTableHeader} userList={rows} handleSearchClick={this.onSearchClick} {...this.props}/>\r\n                </div>\r\n                {\r\n                    AuditActionsTableHeader && rows\r\n                        ? <ReactTable tableHeader={AuditActionsTableHeader} rowData={rows} className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n        if (true) {\r\n            renderObj = this.renderActionAudit();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ActionAudit;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport SecurityHome from \"./SecurityHome\";\r\n\r\nconst SecurityHomeComponent = AuthLayoutHOC(SecurityHome);\r\n\r\nexport default SecurityHomeComponent;\r\n","import React from \"react\";\r\nimport CustomCard from '../dashboard/customCard';\r\nimport './SecurityHome.css'\r\nimport {checkRenderPermissions} from '../helpers';\r\nimport {permissions} from '../constants';\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport {inject} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\nclass SecurityHome extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    navigateTo = (path) => {\r\n\r\n        if (path === '/security/frequentcasher')\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.FREQUENT_CASHER);\r\n\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    renderSecurityHome() {\r\n        return (\r\n            <div className='app-center-body'>\r\n                {checkRenderPermissions(permissions.CAN_ACCESS_FREQUENT_CASHER_MODULE, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <CustomCard\r\n                        title='Frequent Casher'\r\n                        handleCallback={() => this.navigateTo('/security/frequentcasher')}\r\n                    /> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_ACCESS_SECURITY_MODULE, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderSecurityHome();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default SecurityHome;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport FrequentCasher from \"./FrequentCasher\";\r\n\r\nconst FrequentCasherComponent = AuthLayoutHOC(FrequentCasher);\r\n\r\nexport default FrequentCasherComponent;\r\n","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport './FrequentCasher.css'\r\nimport {checkRenderPermissions} from '../helpers';\r\nimport {permissions} from '../constants';\r\nimport AppTextbox from \"../AppTextbox\";\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass FrequentCasher extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            ssn: '',\r\n            errorMessage: '',\r\n            showError: false,\r\n            showSuccess: false,\r\n            successMessage: '',\r\n            showToast: false,\r\n            showCancelPopup: false,\r\n            onYesClicked: false,\r\n            isValidSSN: false,\r\n            isLastNameAtLeastLength3: false,\r\n            isAdd: false,\r\n        }\r\n    }\r\n\r\n    // [Add]\r\n    handleAdd = () => {\r\n        this.setState({isAdd: true}, () => this.props.playerStore.setShowFrequentCasherConfirmModal(true));\r\n    }\r\n\r\n    // [Remove]\r\n    handleRemove = () => {\r\n        this.setState({isAdd: false}, () => this.props.playerStore.setShowFrequentCasherConfirmModal(true));\r\n    }\r\n\r\n    // [No]\r\n    onSubmitCancel = () => {\r\n        this.props.playerStore.setShowFrequentCasherConfirmModal(false)\r\n    }\r\n\r\n    // [Yes]\r\n    onYesForAdd = () => {\r\n        const {firstName, lastName, ssn} = this.state;\r\n        this.props.playerStore.AddFrequentCasher(firstName, lastName, ssn);\r\n    }\r\n\r\n    // [Yes]\r\n    onYesForRemove = () => {\r\n        const {firstName, lastName, ssn} = this.state;\r\n        this.props.playerStore.RemoveFrequentCasher(firstName, lastName, ssn);\r\n    }\r\n\r\n/*    handleToastClose = () => {\r\n        this.props.playerStore.setToast(false);\r\n    }*/\r\n\r\n    handleInputChange = (e, stateName) => {\r\n\r\n        if (stateName === 'firstName') {\r\n            const regExp = /^[a-zA-Z]*$/;\r\n            if (e.target.value.trim() !== '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value.trim()});\r\n            }\r\n        } else if (stateName === 'lastName') {\r\n            const regExp = /^[a-zA-Z]*$/;\r\n            if (e.target.value.trim() !== '' || (regExp.test(e.target.value))) {\r\n                this.setState({\r\n                    [stateName]: e.target.value.trim(),\r\n                    isLastNameAtLeastLength3: e.target.value.length >= 3\r\n                });\r\n            }\r\n        } else if (stateName === 'ssn') {\r\n            const re = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || re.test(e.target.value)) {\r\n                this.setState({\r\n                    [stateName]: e.target.value,\r\n                    isValidSSN: e.target.value.length === 9\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderFrequentCasher() {\r\n\r\n        const {showFrequentCasherConfirmModal, showToast, successMessage, errorMessage} = this.props.playerStore;\r\n        const {firstName, lastName, ssn, isAdd, isValidSSN, isLastNameAtLeastLength3} = this.state;\r\n\r\n        let isDisabled = true;\r\n        if (isLastNameAtLeastLength3 && isValidSSN) {\r\n            isDisabled = false\r\n        }\r\n\r\n        return (\r\n            <div className='frequentcasher-details-container container-fluid '>\r\n                {/*{showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }*/}\r\n                <Modal show={showFrequentCasherConfirmModal} centered={true}>\r\n                    <Modal.Body>\r\n                        <div className='frequentcasher-details-label'>\r\n                            {isAdd ? 'Are you sure you wish to add this Player to the Frequent Casher List?' : 'Are you sure you wish to remove this Player from the Frequent Casher List?'}\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                        {isAdd ?\r\n                            <Button variant='primary' onClick={(e) => this.onYesForAdd(e)}>Yes</Button>\r\n                            : <Button variant='primary' onClick={(e) => this.onYesForRemove(e)}>Yes</Button>\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className='frequentcasher-details-panel'>\r\n                    <div className='frequentcasher-details-child '>\r\n                        <div className='row'>\r\n                            <div className='col-2'>\r\n                                <div className='frequentcasher-details-label'>First Name</div>\r\n                                <AppTextbox type='text' placeholder='Enter First Name ' value={firstName}\r\n                                            onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <div className='frequentcasher-details-label'>Last Name</div>\r\n                                <AppTextbox type='text' placeholder='Enter last Name ' value={lastName}\r\n                                            onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <div className='frequentcasher-details-label'>SSN</div>\r\n                                <AppTextbox type='text' placeholder='Enter SSN ' maxlength='9' value={ssn}\r\n                                            onChange={(e) => this.handleInputChange(e, 'ssn')}/>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <Button disabled={isDisabled} className='frequentcasher-details-btn'\r\n                                        onClick={() => this.handleAdd()}>\r\n                                    Add\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-2'>\r\n                                <Button disabled={isDisabled} className='frequentcasher-details-btn'\r\n                                        onClick={() => this.handleRemove()}>\r\n                                    Remove\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_ACCESS_SECURITY_MODULE, JSON.parse(localStorage.getItem('userpolicies')))\r\n            && checkRenderPermissions(permissions.CAN_ACCESS_FREQUENT_CASHER_MODULE, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderFrequentCasher();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default FrequentCasher;","import React from 'react';\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport dotenv from 'dotenv'\r\nimport \"./MFA.css\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ndotenv.config()\r\n\r\n@inject('authStore')\r\n@observer\r\nclass MFA extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {TOTP: \"\"};\r\n    }\r\n\r\n    validateForm = () => {\r\n        return this.state.TOTP.length == 6;\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {TOTP} = this.state;\r\n        this.props.authStore.loginWithTOTP(TOTP, this.props)\r\n    }\r\n\r\n    ResendOTP = () => {\r\n        this.props.authStore.requestOTP();\r\n    }\r\n\r\n    handleInputChange = (value, stateName) => {\r\n\r\n        const re = /^[0-9\\b]+$/;\r\n\r\n        // if value is not blank, then test the regex\r\n        if (value === '' || re.test(value)) {\r\n            this.setState({[stateName]: value});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {TOTP} = this.state;\r\n        const {otpAuthErrorMessage} = this.props.authStore;\r\n        const isValidate = this.validateForm();\r\n        return (\r\n            <div className=\"login App-header\">\r\n                <div className='login-panel'>\r\n                    <img src='/images/lottery_numbers_blue.png'/>\r\n\r\n                    <Form onSubmit={this.handleSubmit} className='login-form'>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control\r\n                                placeholder=\"One-Time Passcode\"\r\n                                maxLength='6'\r\n                                autoFocus\r\n                                value={TOTP}\r\n                                onChange={e => this.handleInputChange(e.target.value, 'TOTP')}\r\n                            />\r\n                            {otpAuthErrorMessage ? <Form.Text className=\"app-error-message\">{otpAuthErrorMessage}</Form.Text> : null}\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button block bsSize=\"large\" onClick={() => this.ResendOTP()}>\r\n                                    Resend OTP\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button block bsSize=\"large\" type=\"submit\" disabled={!isValidate}>\r\n                                    Verify\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Form>\r\n                    <div className=\"back-to-login\">\r\n                        <div>\r\n                            <Link className=\"link-color\" to=\"/login\">Back to Login Page</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MFA;\r\n","import LayoutHOC from \"../../../Layout/LayoutHOC\";\r\nimport MFA from \"./MFA\";\r\n\r\nconst MFAComponent = LayoutHOC(MFA);\r\n\r\nexport default MFAComponent;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport MFAPolicy from \"./MFAPolicy\";\r\n\r\nconst MFAPolicyComponent = AuthLayoutHOC(MFAPolicy);\r\n\r\nexport default MFAPolicyComponent;\r\n","import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport \"./MFAPolicy.css\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport AppToast from \"../../toast\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\n\r\n@inject('settingsStore')\r\n@observer\r\nclass MFAPolicy extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sources: ['Custom', 'My IP'],\r\n            isFieldsEdited: false,\r\n            showCancelPopup: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.settingsStore.getMFABypassRules();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.settingsStore.setToast(false);\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    deleteRule = (id) => {\r\n        this.props.settingsStore.deleteMFABypassRule(id);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    addRule = () => {\r\n        this.props.settingsStore.addMFABypassRule('Test1', 'Descr1')\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    callbackToParent = () => {\r\n        const {isFieldsEdited} = this.state;\r\n        const flag = isFieldsEdited;\r\n        this.props.onUpdate(flag);\r\n    }\r\n\r\n    handleInputChange = (e, stateName, id) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let {inboundRules} = this.props.settingsStore;\r\n\r\n        let inboundRule = inboundRules.find(rule => rule.id === id);\r\n\r\n        if (stateName === 'ip') {\r\n            if (inboundRule) {\r\n                inboundRule.ip = e.target.value;\r\n            }\r\n        } else if (stateName === 'description') {\r\n            if (inboundRule) {\r\n                inboundRule.description = e.target.value;\r\n            }\r\n        }\r\n\r\n        this.props.settingsStore.setMFABypassRules(inboundRules);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSelectChange = (e, stateName, id) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let {inboundRules} = this.props.settingsStore;\r\n\r\n        let inboundRule = inboundRules.find(rule => rule.id === id);\r\n\r\n        if (stateName === 'source') {\r\n            if (inboundRule) {\r\n                inboundRule.source = e.target.value;\r\n                if (e.target.value === 'My IP') {\r\n                    inboundRule.ip = this.props.settingsStore.getMyIPAddress();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.props.settingsStore.setMFABypassRules(inboundRules);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    /**\r\n     * Saves all the Bypass Rules\r\n     */\r\n    onYes = () => {\r\n        this.props.settingsStore.saveMFABypassRules();\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.settingsStore.setShowConfirmSaveModal(true);\r\n    }\r\n\r\n    onSubmitCancel = () => {\r\n        this.props.settingsStore.setShowConfirmSaveModal(false)\r\n    }\r\n\r\n    onRejectCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(false));\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        e.preventDefault();\r\n        this.props.settingsStore.discardMFABypassRuleChanges();\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleCancel = () => {\r\n        if (this.state.isFieldsEdited)\r\n            this.setState({showCancelPopup: true});\r\n        else\r\n            this.props.history.goBack();\r\n    }\r\n\r\n    isIPAddressValid = (IPAddress) => {\r\n        let blocks = IPAddress.split(\".\");\r\n        if (blocks.length === 4 && blocks[3] !== '') {\r\n            for (let i = 0; i < blocks.length; i++) {\r\n                if (Number(blocks[i]) < 0 || Number(blocks[i]) > 255) {\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isDescriptionValid = (description) => {\r\n        return description && description.trim().length > 0;\r\n    }\r\n\r\n    renderMFAPolicy() {\r\n\r\n        const {sources, showCancelPopup} = this.state;\r\n        const {showBackConfirm} = this.props;\r\n        const {inboundRules, showConfirmSaveModal, showToast, successMessage, errorMessage} = this.props.settingsStore;\r\n\r\n        // Disable [Save Rules] if needed\r\n        let isDisabled = true;\r\n        let rule;\r\n        for (rule of inboundRules) {\r\n            isDisabled = !this.isIPAddressValid(rule.ip) || !this.isDescriptionValid(rule.description)\r\n        }\r\n\r\n        return (\r\n\r\n            <div className='player-details-container container-fluid '>\r\n                {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }\r\n                <Modal show={showCancelPopup || showBackConfirm} centered={true}>\r\n                    <Modal.Body>\r\n                        <div className='player-details-label'>\r\n                            Are you sure you would like to cancel? All unsaved changes will be lost.\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={(e) => this.onRejectCancel(e)}>No</Button>\r\n                        <Button variant='primary' onClick={(e) => this.onCancel(e)}>Yes</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={showConfirmSaveModal} centered={true}>\r\n                    <Modal.Body>\r\n                        <div className='player-details-label'>\r\n                            Are you sure you would like to Save?\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                        <Button variant='primary' onClick={() => this.onYes()}>Yes</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <div className='player-details-panel'>\r\n                    <div className='inbound-rule-container'>\r\n                        <div className='row'>\r\n                            <div className='col-3 inbound-rule-label'>Source</div>\r\n                            <div className='col-4 inbound-rule-label'>IP Address</div>\r\n                            <div className='col-4 inbound-rule-label'>Description</div>\r\n                        </div>\r\n                        {\r\n                            inboundRules.map(rule => {\r\n                                return <div className='row'>\r\n                                    <div className='col-3 rule-select'>\r\n                                        <select value={rule.source} className='form-control'\r\n                                                onChange={(e) => this.handleSelectChange(e, 'source', rule.id)}>\r\n                                            {\r\n                                                sources.map(source => {\r\n                                                    return <option value={source}>{source}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <AppTextbox controlId='description' value={rule.ip || ''}\r\n                                                    disabled={(rule.source === 'My IP')}\r\n                                                    onChange={(e) => this.handleInputChange(e, 'ip', rule.id)}/>\r\n                                        {\r\n                                            !this.isIPAddressValid(rule.ip)\r\n                                                ? <div className='player-invalid-email'>Invalid IP Address</div>\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <AppTextbox controlId='description' value={rule.description}\r\n                                                    onChange={(e) => this.handleInputChange(e, 'description', rule.id)}/>\r\n                                        {\r\n                                            !this.isDescriptionValid(rule.description)\r\n                                                ? <div className='player-invalid-email'>Enter a description</div>\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className='col-1'>\r\n                                        <Button variant='danger' onClick={(e) => this.deleteRule(rule.id)}>\r\n                                            Delete\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <Button variant='primary' onClick={(e) => this.addRule(e)}>\r\n                                    Add Rule\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-3 button-panel'>\r\n                                <Button variant='warning' onClick={(e) => this.handleCancel(e)}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button variant='primary' disabled={isDisabled} onClick={(e) => this.handleSubmit(e)}>\r\n                                    Save Rules\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_EDIT_MFA_BYPASS_RULES, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderMFAPolicy();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MFAPolicy;\r\n","import React from 'react';\r\nimport \"./Tabs.css\";\r\nimport {checkRenderPermissions} from \"../../../helpers\";\r\nimport {permissions} from \"../../../constants\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport ReactTable from \"../../../PaginatedTable/ReactTable\";\r\n\r\n@inject('settingsStore')\r\n@observer\r\nclass MFABypassRule extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    editInboundRules = () => {\r\n        this.props.history.push('/admin/settings/mfa');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.settingsStore.getMyIPAddress();\r\n        this.props.settingsStore.getMFABypassRules();\r\n    }\r\n\r\n    render() {\r\n\r\n        const _header = <div className='user-table-header'>\r\n            <div>Bypass Rules</div>\r\n            {checkRenderPermissions(permissions.CAN_EDIT_MFA_BYPASS_RULES, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                <Button variant='primary' onClick={this.editInboundRules}>Edit Rules</Button> : null}\r\n        </div>\r\n\r\n        const tableHeader = [\r\n            {key: 'source', label: 'Source'},\r\n            {key: 'ip', label: 'IP Address'},\r\n            {key: 'description', label: 'Description'}\r\n        ];\r\n\r\n        const {inboundRules} = this.props.settingsStore;\r\n\r\n        /*        const userList = [{source: 'Custom', ip: '0.0.0.0', description: '-'},\r\n                    {source: 'Custom', ip: '0.0.0.0', description: '-'},\r\n                    {source: 'Custom', ip: '0.0.0.0', description: '-'}];*/\r\n\r\n        // TO DO: Fix the IF condition\r\n        if (true) {\r\n\r\n            return (\r\n                <div className='player-details-container container-fluid '>\r\n                    <div className='player-details-panel'>\r\n                        <div className='setting-table'>\r\n                            <ReactTable header={_header} tableHeader={tableHeader} rowData={inboundRules}\r\n                                        className='fixed_header'/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div className='player-details-container container-fluid'>\r\n            <div className='no-data-message'>Error loading data...go back</div>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MFABypassRule;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../../Layout/AuthLayoutHOC\";\r\nimport SettingsHub from \"./SettingsHub\";\r\n\r\nconst SettingsHubComponent = AuthLayoutHOC(SettingsHub);\r\n\r\nexport default SettingsHubComponent;\r\n","import React from \"react\";\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport './SettingsHub.css';\r\nimport AppToast from \"../../../toast\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport MFABypassRule from \"../Tabs/MFABypassRule\";\r\nimport {checkRenderPermissions} from \"../../../helpers\";\r\nimport {permissions} from \"../../../constants\";\r\n\r\n@inject('settingsStore')\r\n@observer\r\nclass SettingsHub extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'MFA Bypass Rule',\r\n            selectedIndex: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n//        this.props.playerStore.getPlayerDetails();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        //const navigateToFirstTab = this.props.playerStore.playerHubNavigateToFirstTab;\r\n        //this.props.settingsStore.setToast(false);\r\n        //if (navigateToFirstTab)\r\n        //  this.navigateToFirstTab();\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleSelect = (key) => {\r\n        //this.props.playerStore.logAction(UserActionCategory.TAB_VIEW, key, target);\r\n        this.setState({key})\r\n    }\r\n\r\n    navigateToFirstTab = () => {\r\n        this.handleSelect('MFA Bypass Rule');\r\n    }\r\n\r\n    renderSettingsHub() {\r\n\r\n        const {showToast, successMessage, errorMessage} = this.props.settingsStore;\r\n\r\n        return (\r\n            <div className='app-tab-panel'>\r\n                {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={this.state.key}\r\n                    onSelect={(key) => this.handleSelect(key)}\r\n                >\r\n                    {checkRenderPermissions(permissions.CAN_SEE_MFA_BYPASS_RULES, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey=\"MFA Bypass Rule\" title=\"MFA Bypass Rules\">\r\n                            <MFABypassRule {...this.props}/>\r\n                        </Tab> : null}\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_ACCESS_SETTINGS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderSettingsHub();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SettingsHub;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../Layout/AuthLayoutHOC\";\r\nimport Finance from \"./Finance\";\r\n\r\nconst FinanceComponent = AuthLayoutHOC(Finance);\r\n\r\nexport default FinanceComponent;","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport CustomCard from \"../dashboard/customCard\";\r\nimport {checkRenderPermissions} from \"../helpers\";\r\nimport {permissions} from \"../constants\";\r\n\r\n@inject('claimStore')\r\n@observer\r\nclass Finance extends React.Component {\r\n\r\n    navigateToClaimTransactions = () => {\r\n        this.props.history.push('/finance/claims/transactions');\r\n    }\r\n\r\n    navigateToDailyReconciliationReport = () => {\r\n        this.props.history.push('/finance/claims/dailyreconciliation');\r\n    }\r\n    \r\n    render() {\r\n        if(checkRenderPermissions(permissions.CAN_ACCESS_FINANCE_PAYMENTS_MODULE, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            return (\r\n                <div className='app-center-body'>\r\n                    {checkRenderPermissions(permissions.CAN_SEE_ACH_ACTIVITY, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <CustomCard\r\n                            title='ACH Activity'\r\n                            handleCallback={() => this.navigateToClaimTransactions()}\r\n                        /> : null}\r\n                    {checkRenderPermissions(permissions.CAN_SEE_DAILY_RECONCILIATION, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <CustomCard\r\n                            title='Daily Reconciliation Report'\r\n                            handleCallback={() => this.navigateToDailyReconciliationReport()}\r\n                        /> : null}\r\n                </div>\r\n            )\r\n        } else {\r\n            return <h3 className='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                Administrator!</h3>\r\n        }\r\n\r\n    }\r\n}\r\nexport default Finance;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ACHActivity from \"./ACHActivity\";\r\n\r\nconst ACHActivityComponent = AuthLayoutHOC(ACHActivity);\r\n\r\nexport default ACHActivityComponent;","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport {toJS} from \"mobx\";\r\n\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport AppToast from \"../../toast\";\r\n\r\nimport './ACHActivity.css';\r\n\r\n@inject('playerStore', 'claimStore')\r\n@observer\r\nclass ACHActivity extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: [],\r\n            tableHeader: [],\r\n            showToast: false,\r\n            invalidBatchNumberError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.claimStore.clearTableData()\r\n    }\r\n\r\n\r\n    onClear = () => {\r\n        this.props.claimStore.clearTableData()\r\n        // this.setState({\r\n        //     startDate: null,\r\n        //     endDate: null   ,\r\n        //     batch: '',\r\n        //     rejectFileReference: ''\r\n        // }, () => this.props.claimStore.clearTableData());\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        const {startDate, endDate, batchNumber, rejectFileReference} = this.props.claimStore;\r\n        let queryParams = '?';\r\n        if (startDate && endDate) {\r\n            const sDate = moment(startDate).format('YYYY-MM-DD');\r\n            const eDate = moment(endDate).format('YYYY-MM-DD');\r\n            queryParams += `queryDateRangeStart=${sDate}&queryDateRangeEnd=${eDate}`;\r\n        }\r\n        if(batchNumber) {\r\n            queryParams += `&batchNumber=${batchNumber.toString()}`;\r\n        }\r\n        if(rejectFileReference) {\r\n            queryParams += `&rejectFileReferenceNumber=${rejectFileReference}`;\r\n        }\r\n        this.props.claimStore.getAchData(queryParams);\r\n\r\n    }\r\n\r\n    setStartDate = (newDate) => {\r\n        if(newDate === null) {\r\n            this.props.claimStore.setStartEndDate(null, null);\r\n            // this.setState({endDate: null, startDate: null});\r\n        } else {\r\n            if(newDate > this.state.endDate) {\r\n                this.setStartEndDate(newDate, null);\r\n                // this.setState({startDate: newDate, endDate: null});\r\n            } else {\r\n                this.props.claimStore.setStartEndDate(newDate);\r\n                this.setState({startDate: newDate});\r\n            }\r\n        }\r\n    }\r\n\r\n    setEndDate = (newDate) => {\r\n        this.props.claimStore.setStartEndDate('', newDate);\r\n        // this.setState({endDate: newDate})\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'batchNumber') {\r\n            // const re = /^[0-9\\b]+$/;\r\n            // if (e.target.value === '' || (re.test(e.target.value) && e.target.value.length <= 7)) {\r\n            if (e.target.value === '' ||  e.target.value.length <= 7) {\r\n                const _batchNumber = e.target.value;\r\n                const isError = _batchNumber.length > 0 && _batchNumber.length < 7;\r\n                this.setState({\r\n                    invalidBatchNumberError: isError ? 'Batch Number should be 7 characters' : ''\r\n                }, () => this.props.claimStore.setBatchNumber(_batchNumber));\r\n            }\r\n        } else if(stateName === 'rejectFileReference') {\r\n            this.props.claimStore.setRejectFileReference(e.target.value)\r\n            // this.setState({[stateName]: e.target.value});\r\n        }\r\n\r\n    }\r\n\r\n    viewDetailsClick = (data) => {\r\n        if(data.batchnumber) {\r\n            this.props.claimStore.setSelectedBatchId(data);\r\n            this.props.history.push('/finance/claims/batch/details');\r\n        } else {\r\n            this.props.claimStore.setSelectedRejectReferenceNumber(data);\r\n            this.props.history.push('/finance/claims/reject/details');\r\n        }\r\n\r\n    }\r\n\r\n    renderACHActivity() {\r\n        const {tableHeader, tableRows} = this.props.claimStore;\r\n        const rows = toJS(JSON.parse(JSON.stringify(tableRows)));\r\n        const headers = toJS(JSON.parse(JSON.stringify(tableHeader)));\r\n        if(headers.length > 0 && rows.length > 0 &&\r\n            checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            headers.push({key: 'view', label: ''});\r\n            rows.forEach(row => {\r\n                row.view = <a onClick={() => this.viewDetailsClick(row)} className='ach-link'>View</a>\r\n            })\r\n        }\r\n        const { invalidBatchNumberError } = this.state;\r\n        const {startDate, endDate, batchNumber, rejectFileReference} = this.props.claimStore;\r\n        let isDisabled = true;\r\n        if((startDate && endDate) || (batchNumber && batchNumber.length === 7) || rejectFileReference) {\r\n            isDisabled = false;\r\n        }\r\n        return (\r\n            <div className='ach-activity-container container-fluid'>\r\n                <div className='ach-activity-panel player-search-child'>\r\n                    <div className='ach-filter-section'>\r\n                        <div className='ach-flex-column'>\r\n                            <div className='ach-input-label ach-date-label'>Start Date</div>\r\n                            <DatePicker\r\n                                selected={startDate}\r\n                                isClearable\r\n                                maxDate={new Date()}\r\n                                onChange={date => this.setStartDate(date)}\r\n                            />\r\n                        </div>\r\n                        <div className='ach-flex-column'>\r\n                            <div className='ach-input-label ach-date-label'>End Date</div>\r\n                            <DatePicker\r\n                                isClearable\r\n                                selected={endDate}\r\n                                disabled={!startDate}\r\n                                minDate={startDate}\r\n                                maxDate={new Date()}\r\n                                onChange={date => this.setEndDate(date)}\r\n                            />\r\n                        </div>\r\n                        <div className='ach-flex-column'>\r\n                            <div className='ach-input-label'>Batch #</div>\r\n                            <AppTextbox type='text' value={batchNumber}\r\n                                        onChange={(e) => this.handleInputChange(e, 'batchNumber')}/>\r\n                            {invalidBatchNumberError ? <div className='ach-error-message'>{invalidBatchNumberError}</div>: null}\r\n                        </div>\r\n                        <div className='ach-flex-column'>\r\n                            <div className='ach-input-label'>Reject File Ref#</div>\r\n                            <AppTextbox type='text' value={rejectFileReference}\r\n                                        onChange={(e) => this.handleInputChange(e, 'rejectFileReference')}/>\r\n                        </div>\r\n                        <div className='ach-flex-column'>\r\n                            <Button disabled={isDisabled || invalidBatchNumberError !== ''} className='player-search-btn' onClick={() => this.onSearchClick()}>\r\n                                Search\r\n                            </Button>\r\n                            <Button className='player-search-btn' onClick={() => this.onClear()}>\r\n                                Clear\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    tableHeader && tableHeader.length > 0\r\n                        ? <ReactTable tableHeader={headers} rowData={rows} className='ach-update-user-table'/>\r\n                        : null\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n        if (checkRenderPermissions(permissions.CAN_SEE_ACH_ACTIVITY, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderACHActivity();\r\n        } else {\r\n            renderObj =\r\n                <h3 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h3>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ACHActivity;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ACHActivityBatchDetail from \"./ACHActivityBatchDetail\";\r\n\r\nconst ACHActivityBatchDetailComponent = AuthLayoutHOC(ACHActivityBatchDetail);\r\n\r\nexport default ACHActivityBatchDetailComponent;\r\n","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport {toJS} from \"mobx\";\r\nimport moment from \"moment\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions, timeOfDayFormat} from \"../../constants\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\nimport './ACHActivityBatchDetail.css';\r\n\r\n@inject('claimStore', 'playerStore')\r\n@observer\r\nclass ACHActivityBatchDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPopup: false,\r\n            selectedBatch: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            this.props.claimStore.fetchBatchDetails();\r\n        }\r\n    }\r\n\r\n    handlePaymentDetailClick = (paymentData) => {\r\n        this.props.claimStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: '+paymentData.transactionId, '');\r\n        this.props.claimStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\r\n    }\r\n\r\n    navigateToPaymentDetails = () => {\r\n        const id  = this.props.claimStore.selectedClaimId;\r\n        this.props.history.push(`/claim/${id}/paymenthistory`);\r\n    }\r\n\r\n    handleViewDetailClick = (row) => {\r\n        const target = row.transactionid;\r\n        const playerName = `${row.playerfirstname} ${row.playerlastname}`;\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SHOW_BATCH_FILE_PII, 'Transaction ID: '+target, 'Player Name: '+playerName);\r\n        this.setState({showPopup: true, selectedBatch: row});\r\n    }\r\n\r\n    onModalClose = () => {\r\n        this.setState({showPopup: false, selectedBatch: null});\r\n    }\r\n\r\n    renderBatchDetails() {\r\n        const {batchDetails, selectedBatchId} = this.props.claimStore;\r\n        const {showPopup, selectedBatch} = this.state;\r\n        if(batchDetails && selectedBatchId) {\r\n\r\n            const data = toJS(this.props.claimStore.batchDetails)\r\n            const {selectedBatchDetails, batchDetailsTableHeader, batchDetailsTableRows} = data;\r\n            const {filecreationdatetime, filesubmissiondatetime, effectiveentrydate,\r\n                settlementdate, status, amount} = selectedBatchDetails;\r\n            if(checkRenderPermissions(permissions.CAN_SEE_BATCH_MASKED_DETAIL, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n                batchDetailsTableHeader.push({key: 'view', label: ''});\r\n                batchDetailsTableRows.forEach((row, index) => {\r\n                    row.view = <a key={index} className='batch-detail-link' onClick={() => this.handleViewDetailClick(row)}>\r\n                        Show Details\r\n                    </a>;\r\n                });\r\n            }\r\n            return(\r\n                <div className='batch-detail-container container-fluid'>\r\n                    <div className='batch-detail-panel'>\r\n                        <div className='batch-detail-top-row'>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    File Creation Date #\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filecreationdatetime).format('MM-DD-YYYY')}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    File Creation Time\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filecreationdatetime).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Date Submitted\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filesubmissiondatetime).format('MM-DD-YYYY')}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Time Submitted\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filesubmissiondatetime).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Effective Entry Date\r\n                                </div>\r\n                                <div>\r\n                                    {effectiveentrydate && moment(effectiveentrydate).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Settlement Date\r\n                                </div>\r\n                                <div>\r\n                                    {settlementdate && moment(settlementdate).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Status\r\n                                </div>\r\n                                <div>\r\n                                    {status}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Amount\r\n                                </div>\r\n                                <div>\r\n                                    ${amount}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        batchDetailsTableHeader && batchDetailsTableRows\r\n                            ? <ReactTable tableHeader={batchDetailsTableHeader} rowData={batchDetailsTableRows}\r\n                                          className='batch-detail-panel'/>\r\n                            : null\r\n                    }\r\n                    <Modal show={showPopup} centered={true}>\r\n                        <Modal.Header>\r\n                            <h5> Account Information </h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className='modal-unmasked-detail'>\r\n                                Routing Number: {selectedBatch && selectedBatch.routingnumber}\r\n                            </div>\r\n                            <div className='modal-unmasked-detail'>\r\n                                Account Number: {selectedBatch && selectedBatch.accountnumber}\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onModalClose(e)}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className='batch-detail-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n\r\n        if(checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderBatchDetails();\r\n        } else {\r\n            renderObj =\r\n                <h3 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h3>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ACHActivityBatchDetail;\r\n","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport ACHActivityRejectDetail from \"./ACHActivityRejectDetail\";\r\n\r\nconst ACHActivityRejectDetailComponent = AuthLayoutHOC(ACHActivityRejectDetail);\r\n\r\nexport default ACHActivityRejectDetailComponent;\r\n","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport {toJS} from \"mobx\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions, timeOfDayFormat} from \"../../constants\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\nimport './ACHActivityRejectDetail.css';\r\n\r\n@inject('claimStore', 'playerStore')\r\n@observer\r\nclass ACHActivityRejectDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPopup: false,\r\n            selectedRejectFile: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            this.props.claimStore.fetchRejectFileDetails();\r\n        }\r\n    }\r\n\r\n    handlePaymentDetailClick = (paymentData) => {\r\n        this.props.claimStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: '+paymentData.transactionId, '');\r\n        this.props.claimStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\r\n    }\r\n\r\n    navigateToPaymentDetails = () => {\r\n        const id  = this.props.claimStore.selectedClaimId;\r\n        this.props.history.push(`/claim/${id}/paymenthistory`);\r\n    }\r\n\r\n    handleViewDetailClick = (row) => {\r\n        const target = row.transactionid;\r\n        const playerName = `${row.playerfirstname} ${row.playerlastname}`;\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SHOW_REJECT_FILE_PII, 'Transaction ID: '+target, 'Player Name: '+playerName);\r\n        this.setState({showPopup: true, selectedRejectFile: row});\r\n    }\r\n\r\n    onModalClose = () => {\r\n        this.setState({showPopup: false, selectedRejectFile: null});\r\n    }\r\n\r\n    renderrejectFileDetails() {\r\n        const {rejectFileDetails, selectedRejectReferenceNumber} = this.props.claimStore;\r\n        const {showPopup, selectedRejectFile} = this.state;\r\n        if(rejectFileDetails && selectedRejectReferenceNumber && rejectFileDetails.selectedRejectFileDetails) {\r\n\r\n            const data = toJS(this.props.claimStore.rejectFileDetails)\r\n            const {selectedRejectFileDetails, rejectFileTableHeader, rejectFileTableRows} = data;\r\n            const {processtimestamp, recievetimestamp, totalnumberofrecords, amount} = selectedRejectFileDetails;\r\n            if(checkRenderPermissions(permissions.CAN_SEE_REJECT_MASKED_DETAIL, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n                rejectFileTableHeader.push({key: 'view', label: ''});\r\n                rejectFileTableRows.forEach((row, index) => {\r\n                    row.view = <a key={index} className='reject-detail-link' onClick={() => this.handleViewDetailClick(row)}>\r\n                        Show Details\r\n                    </a>;\r\n                });\r\n            }\r\n            return(\r\n                <div className='reject-detail-container container-fluid'>\r\n                    <div className='reject-detail-panel'>\r\n                        <div className='reject-detail-top-row'>\r\n                            <div className='reject-detail-top-column'>\r\n                                <div>\r\n                                    File Created Date #\r\n                                </div>\r\n                                <div>\r\n                                    {moment(recievetimestamp).format('MM-DD-YYYY')}\r\n                                </div>\r\n                            </div>\r\n                            <div className='reject-detail-top-column'>\r\n                                <div>\r\n                                    File Created Time\r\n                                </div>\r\n                                <div>\r\n                                    {moment(recievetimestamp).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='reject-detail-top-column'>\r\n                                <div>\r\n                                    File Received Date\r\n                                </div>\r\n                                <div>\r\n                                    {moment(processtimestamp).format('MM-DD-YYYY')}\r\n                                </div>\r\n                            </div>\r\n                            <div className='reject-detail-top-column'>\r\n                                <div>\r\n                                    File Received Time\r\n                                </div>\r\n                                <div>\r\n                                    {moment(processtimestamp).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='reject-detail-top-column'>\r\n                                <div>\r\n                                    Number of Records\r\n                                </div>\r\n                                <div>\r\n                                    {totalnumberofrecords}\r\n                                </div>\r\n                            </div>\r\n                            <div className='reject-detail-top-column'>\r\n                                <div>\r\n                                    Amount\r\n                                </div>\r\n                                <div>\r\n                                    ${amount}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        rejectFileTableHeader && rejectFileTableRows\r\n                            ? <ReactTable tableHeader={rejectFileTableHeader} rowData={rejectFileTableRows}\r\n                                          className='reject-detail-panel'/>\r\n                            : null\r\n                    }\r\n                    <Modal show={showPopup} centered={true}>\r\n                        <Modal.Header>\r\n                            <h5> Account Information </h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className='modal-unmasked-detail'>\r\n                                Routing Number: {selectedRejectFile && selectedRejectFile.routingnumber}\r\n                            </div>\r\n                            <div className='modal-unmasked-detail'>\r\n                                Account Number: {selectedRejectFile && selectedRejectFile.accountnumber}\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onModalClose(e)}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className='reject-detail-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n\r\n        if(checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderrejectFileDetails();\r\n        } else {\r\n            renderObj =\r\n                <h3 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h3>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ACHActivityRejectDetail;\r\n","import React from \"react\";\r\n\r\nconst TableRow = ({ data }) => {\r\n    return (\r\n        <tr>\r\n            {data.map((item) => {\r\n                return <td key={item}>{item}</td>;\r\n            })}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableRow;","import React from \"react\";\r\n\r\nconst TableHeadItem = ({ item }) => {\r\n    return (\r\n        <td title={item}>\r\n            {item}\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default TableHeadItem;","import React from \"react\";\r\nimport TableRow from \"./TableRow\";\r\nimport TableHeadItem from \"./TableHead\";\r\n\r\nimport './LightTable.css';\r\n\r\nconst LightTable = ({ theadData, tbodyData, customClass }) => {\r\n    return (\r\n        <table className='light-table'>\r\n            <thead>\r\n                <tr>\r\n                    {theadData.map((h) => {\r\n                        return <TableHeadItem key={h} item={h} />;\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {tbodyData.map((item) => {\r\n                    return <TableRow key={item.id} data={item.items} />;\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default LightTable;","import React from \"react\";\r\nimport AuthLayoutHOC from \"../../Layout/AuthLayoutHOC\";\r\nimport DailyReconciliationReport from \"./DailyReconciliationReport\";\r\n\r\nconst DailyReconciliationReportComponent = AuthLayoutHOC(DailyReconciliationReport);\r\n\r\nexport default DailyReconciliationReportComponent;\r\n","import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport DatePicker from 'react-datepicker';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport {toJS} from \"mobx\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions, timeOfDayFormat} from \"../../constants\";\r\n//import Tile from \"../../components/tile/tile.js\";\r\nimport LightTable from \"../../components/lighttable/LightTable\";\r\n\r\nimport './DailyReconciliationReport.css';\r\n\r\n@inject('claimStore', 'playerStore')\r\n@observer\r\nclass DailyReconciliationReport extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPopup: false,\r\n            selectedRejectFile: null,\r\n        }\r\n    }\r\n\r\n    maxDate() {\r\n        let d = new Date();\r\n        return d.setDate(d.getDate() -1);\r\n    }\r\n\r\n    setReconDate = (newDate) => {\r\n        if(newDate === null) {\r\n            this.props.claimStore.setReconDate(null);\r\n            // this.setState({endDate: null, startDate: null});\r\n        } else {\r\n            this.props.claimStore.setReconDate(newDate);\r\n        }\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        const {reconDate} = this.props.claimStore;\r\n        let queryParams = '?';\r\n        if (reconDate) {\r\n            const rDate = moment(reconDate).format('YYYY-MM-DD');\r\n            queryParams += `queryDate=${rDate}`;\r\n        }\r\n        this.props.claimStore.getReconData(queryParams);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.claimStore.getReconData();\r\n    }\r\n\r\n    handlePaymentDetailClick = (paymentData) => {\r\n        this.props.claimStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: '+paymentData.transactionId, '');\r\n        this.props.claimStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\r\n    }\r\n\r\n    onModalClose = () => {\r\n        this.setState({showPopup: false, selectedRejectFile: null});\r\n    }\r\n\r\n    viewDetailsClick = (data) => {\r\n        if(data.label == 'Player Payments by ACH' || data.label == 'Taxes to DOR by ACH' || data.label == 'Payment Retries by ACH') {\r\n            this.props.claimStore.reconSetSelectedBatchId(data);\r\n            this.props.history.push('/finance/claims/batch/details');\r\n        } else if (data.label == 'Returned ACH Payments') {\r\n            this.props.claimStore.reconSetSelectedRejectReferenceNumber(data);\r\n            this.props.history.push('/finance/claims/reject/details');\r\n        }\r\n\r\n    }\r\n\r\n    renderDailyReconciliationReport() {\r\n        const {reconDate, ESAValidations, mobileClaims, playerPayments, taxes, ACHTotal, returnedPayments, ACHRetries, paperCheckRetries, reconTableHeader, reconTableRows} = this.props.claimStore;\r\n        const {} = this.state;\r\n        const rows = toJS(JSON.parse(JSON.stringify(reconTableRows)));\r\n        if(rows.length > 0 &&\r\n            checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            rows.forEach(row => {\r\n                if(row.label != 'Payment Retries by Paper Check' && row.label != 'Unknown Type'){\r\n                    row.items[0] = <a onClick={() => this.viewDetailsClick(row)} className='recon-link'>{row.label}</a>\r\n                }\r\n            })\r\n        }\r\n        if(true) {\r\n            return(\r\n                <div className='full-container'>\r\n                    <div>\r\n                        <div className = 'report-header'>      \r\n                            <div className='tile-card'>\r\n                                <div className='tile-card-title-label'>Mobile Claims Reconciliation Report</div>  \r\n                                <div className = 'tile-card-note-label'>Date</div> \r\n                                <div className='tile-card-contents'>\r\n                                    <DatePicker\r\n                                    style=\"margin-right:15px;\"\r\n                                    selected={reconDate}\r\n                                    isClearable\r\n                                    maxDate={this.maxDate()}\r\n                                    onChange={date => this.setReconDate(date)}\r\n                                    />\r\n                                    \r\n                                <button className=\"date-picker-btn\" onClick={() => this.onSearchClick()}>Generate</button> \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                        <div className='container-left'>\r\n                            <div className = 'new-claims'>\r\n                                <div className='tile-card'>\r\n                                    <div className='tile-card-label'>New Claims</div>\r\n                                    <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>ESA Validations</div>\r\n                                        <div className='tile-card-data-value'>{ESAValidations}</div>\r\n                                    </div>  \r\n                                    <div className = 'tile-card-note-label'>Imported Data from Third Party</div> \r\n                                    <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>RTC Mobile Claims</div>\r\n                                        <div className='tile-card-data-value'>{mobileClaims}</div>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                            <div className = 'new-payments'>\r\n                                <div className='tile-card'>\r\n                                    <div className='tile-card-label'>New Payments</div> <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>Player Payment by ACH</div>\r\n                                        <div className='tile-card-data-value'>{playerPayments}</div>\r\n                                    </div>  \r\n                                    <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>Taxes to DOR by ACH</div>\r\n                                        <div className='tile-card-data-value'>{taxes}</div>\r\n                                    </div>  \r\n                                    <hr></hr>\r\n                                    <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>Total</div>\r\n                                        <div className='tile-card-data-value'>{ACHTotal}</div>\r\n                                    </div>                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='container-right'>\r\n                            <div className = 'returned-payments'>\r\n                                <div className='tile-card'>\r\n                                    <div className='tile-card-label'>Returned Payments</div>     \r\n                                    <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>Returned ACH Payments</div>\r\n                                        <div className='tile-card-data-value'>{returnedPayments}</div>\r\n                                    </div> \r\n                                </div>\r\n                            </div>\r\n                            <div className = 'payment-retries'>\r\n                                <div className='tile-card'>\r\n                                    <div className='tile-card-label'>Payment Retries</div>  \r\n                                    <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>Payment Retries by ACH</div>\r\n                                        <div className='tile-card-data-value'>{ACHRetries}</div>\r\n                                    </div>  \r\n                                    <div className='tile-card-data'>\r\n                                        <div className='tile-card-data-label'>Payment Retries by Paper Check</div>\r\n                                        <div className='tile-card-data-value'>{paperCheckRetries}</div>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>                                     \r\n                    </div>\r\n                    <div className='itemized-transactions'>\r\n                        {\r\n                            reconTableHeader && reconTableHeader.length > 0 ?\r\n                            <div className='tile-card'>\r\n                                <div className='tile-card-label'>Itemized Transaction Reports</div>\r\n                                <div className='table-container'>\r\n                                    <LightTable theadData={reconTableHeader} tbodyData={rows}/>  \r\n                                </div>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //<NewTable tableHeader={reconTableHeader} rowData={reconTableRows}></NewTable>\r\n        let renderObj;\r\n\r\n        if(checkRenderPermissions(permissions.CAN_SEE_DAILY_RECONCILIATION, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderDailyReconciliationReport();\r\n        } else {\r\n            renderObj =\r\n                <h3 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h3>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default DailyReconciliationReport;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom';\r\n//import styles from '../../../../../styles/Location.module.scss'; used on version 1\r\n\r\n\r\n/**\r\n * @context location\r\n * \r\n * uses \r\n * \r\n * @serviceApi location\r\n *  \r\n * \r\n */\r\n// const GET_LOCATION = gql`\r\n// mutation GetLocationFromZipOrCity($value:String){\r\n//       GetLocationFromZipOrCity(value:$value)\r\n//       {\r\n//            code\r\n//            message\r\n//            results{\r\n             \r\n//              geometry{\r\n//                 location{\r\n//                   lat\r\n//                   lng\r\n//                 }\r\n//               }\r\n//            }\r\n//            predictions\r\n//            {\r\n//              description\r\n//            }\r\n//       }\r\n// }\r\n// `;\r\n\r\n/**\r\n * @Pages\r\n * \r\n * Location page to detect current position or find loation\r\n * uses location service\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language the language to display the data \r\n * @param prescriptionFromRoute the prescription been pased when useRoute is used\r\n * @param location the location passed from the route\r\n */\r\n\r\nconst Location = ({ language, prescriptionFromRoute, location }:any) => {\r\n\r\n  let locationWithOutComas = \"\";\r\n\r\n  /**@gets @sets the locations array from the mutation */\r\n  const [locationsFromMutation, setLocationsFromMutation] = useState([]);\r\n\r\n  /** @gets @sets the selected location  */\r\n  const [getLocation, setLocation] = useState({});\r\n\r\n  /**@gets @sets the reset to clear the location passed in the function*/\r\n  const [reset, setReset] = useState(false);\r\n\r\n  /** @set @gets windowsWidth  */\r\n  const [windowWidth, setWindowWidth] = useState(0);\r\n\r\n  /** @sets @gets the value in the input box */\r\n  const [valueForInputValue, setValueForInputValue] = useState(\"\");\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  /** for alert message box */\r\n  //const alert = useAlert();\r\n\r\n\r\n\r\n  const getSizes = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setWindowWidth(window.innerWidth);\r\n    window.addEventListener(\r\n      \"resize\", getSizes, false);\r\n  });\r\n\r\n  /**\r\n   * Get Location Mutation Mutation that calls location service to retreve\r\n   * location info from input box. It supports by city name and zip code \r\n   * \r\n   * @variable event.target.value\r\n   * @context location  for Apollo.Link     \r\n   */\r\n  // const [getLocations, { loading: mutationLoading }] = useMutation(GET_LOCATION, {\r\n  //   onError(err) {\r\n  //     console.log(err);\r\n  //     alert(err);\r\n\r\n  //   },\r\n  //   update(proxy, result) {\r\n  //     try {\r\n  //       console.log(result);\r\n  //       if (result.data.GetLocationFromZipOrCity.code !== 200) {\r\n  //         alert(result.data.GetLocationFromZipOrCity.message);\r\n  //         return;\r\n  //       }        \r\n  //       if (result.data.GetLocationFromZipOrCity.predictions !== null && result.data.GetLocationFromZipOrCity.predictions !== undefined) {\r\n           \r\n  //         if(location === undefined && result.data.GetLocationFromZipOrCity.predictions.length === 0)\r\n  //            return;\r\n  //         if (result.data.GetLocationFromZipOrCity.predictions.length === 0) {\r\n  //           alert(\"No Location Retreved\");\r\n  //           return;\r\n  //         }\r\n  //       }\r\n  //       if (result.data.GetLocationFromZipOrCity.results !== null) {\r\n        \r\n  //         setValueForInputValue(undefined);\r\n  //         const location = result.data.GetLocationFromZipOrCity.results[0].geometry.location;\r\n  //         getAddressFromLatAndLng(location.lat, location.lng);\r\n  //         setLocationsFromMutation(result.data.GetLocationFromZipOrCity.results);\r\n  //         return;\r\n  //       }\r\n     \r\n  //       setLocationsFromMutation(result.data.GetLocationFromZipOrCity.predictions)\r\n  //     }\r\n  //     catch (e) {\r\n  //       alert(e);\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  /**\r\n   * Respondes to onChange function from input box\r\n   * set the value and context for the GraphQl call \r\n   * \r\n   * @useState setValueForInputValue\r\n   * @mutation getLocations\r\n   * @event e\r\n   */\r\n  const searchLocation = (e:any) => {\r\n\r\n    setValueForInputValue(e.target.value);\r\n    setLocationsFromMutation([]);\r\n    //getLocations({ variables: { value: e.target.value }, context: { clientName: 'location' } });\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Clears and resets the values from the input box \r\n   * \r\n   * @useState setValueForInputValue\r\n   * @useState setReset\r\n   * @useState setLocation\r\n   * @event e \r\n   */\r\n  const clearInput = (e:any) => {\r\n    setValueForInputValue(\"\");\r\n    setReset(true);\r\n    setLocation({});\r\n    setLocationsFromMutation([]);\r\n  }\r\n\r\n  /**\r\n   * Gets the reverse geocode for address with zip from latitude\r\n   * and longitude \r\n   * \r\n   * @url https://api.bigdatacloud.net/data/reverse-geocode-client\";\r\n   * @useState setLocation\r\n   * @useState setValueForInputValue\r\n   * @param lat latitude\r\n   * @param lng longitude\r\n   * @function handleError\r\n   */\r\n  const getAddressFromLatAndLng = async (lat:any, lng:any) => {\r\n    let myLocation:any;\r\n    let latitude:any = `latitude=${lat}`;\r\n    let longitude:any = `&longitude=${lng}`;\r\n    let query:any = latitude + longitude + \"&localityLanguage=en\";\r\n    let bigdatacloud_api:any = process.env.locationUrl;\r\n\r\n    bigdatacloud_api += `?${query}`;\r\n    let myObj:any = await fetch(bigdatacloud_api)\r\n      .catch(()=>{console.log(\"error\")});\r\n\r\n    if (myObj.ok) {\r\n      let obj = await myObj.json();\r\n      console.log(obj);\r\n      myLocation = {\r\n        latitude: lat,\r\n        longitude: lng,\r\n        postCode: obj.postcode,\r\n        city: obj.locality,\r\n        country: obj.countryName,\r\n        state: obj.principalSubdivisionCode.split('-')[1],\r\n      };\r\n\r\n      let valueMyLocation = ` ${myLocation.postCode}, ${myLocation.city}, ${myLocation.state}`;\r\n      myLocation.myLocation = valueMyLocation\r\n      setLocation(myLocation);\r\n      setValueForInputValue(valueMyLocation);\r\n    }\r\n    var handleError = function (err:any) {\r\n      console.warn(err);\r\n      return new Response(JSON.stringify({\r\n        code: 400,\r\n        message: 'Stupid network Error'\r\n      }));\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get's the Current position of the user\r\n   * \r\n   * @api navigator.geolocation\r\n   */\r\n  const getCurrentPosition = () => {\r\n    navigator.geolocation.getCurrentPosition(async (position) => {\r\n      let latitude = `${position.coords.latitude}`;\r\n      let longitude = `${position.coords.longitude}`;\r\n      getAddressFromLatAndLng(latitude, longitude);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * set the location passed from useRoute \r\n   */\r\n  useEffect(() => {\r\n\r\n    if (location !== undefined && location !== '') {\r\n      console.log(location);\r\n      //getLocations({ variables: { value: location }, context: { clientName: 'location' } });\r\n\r\n\r\n    }\r\n\r\n  });\r\n\r\nconst createLocationWithOutCommas = (value:any) =>{\r\n  if(value === undefined)\r\n     return;\r\n  let s = \"\";\r\n  let array = value.split(',');\r\n  array.forEach((element:any) => {\r\n         s += element ;\r\n         s += ' '; \r\n  });\r\n  return s; \r\n}\r\n\r\n  return (\r\n    <div >\r\n      {/**\r\n       * refrencing version of: 1/28/2021\r\n       * source: https://github.com/emilynorton?tab=repositories\r\n       */}\r\n      \r\n      {reset && (location = undefined)}\r\n      {(language === 'english' || language === undefined) && <> <h3><span>Step 2 of 3: </span>Your Location</h3></>}\r\n      {language === 'spanish' && <><h3><span>{'<Spanish>'} Step 2 of 3: </span>Your Prescription</h3></>}\r\n      <form id=\"location\" className=\"location\">\r\n        {(language === 'english' || language === undefined) && <><label htmlFor=\"find_rx\">Enter Your location</label></>}\r\n        {(language === 'spanish') && <>{'<Spanish>'}<label htmlFor=\"find_rx\">Enter Your location</label></>}\r\n\r\n\r\n        {((Object.keys(getLocation).length !== 0 && valueForInputValue !== undefined) ?\r\n          <div className=\"results\">\r\n            {valueForInputValue} <u className='cursor' onClick={clearInput}>\r\n              {(language === 'english' || language === undefined) && 'Clear'}\r\n              {language === 'spanish' && '<Spanish>Clear'}\r\n            </u>\r\n          </div>\r\n          :\r\n          <>\r\n            <input value={valueForInputValue} autoComplete=\"off\" onFocus={(e) => clearInput(e)} placeholder=\"Type City or Zip Code\" type=\"text\" list=\"Locations\" onChange={searchLocation} id=\"location\" />\r\n            <datalist id=\"Locations\" className='location-datalist'>\r\n              {\r\n                \r\n                locationsFromMutation.map((element:any, index:any) => {\r\n                  \r\n                return <option key={`${Math.random().toString(36).substr(16)}${new Date().toISOString()}${Math.random() * index}`}>{createLocationWithOutCommas(element.description)}</option>}\r\n                )}\r\n            </datalist>\r\n          </>)\r\n        }\r\n\r\n        {(Object.keys(getLocation).length === 0) && <><div onClick={getCurrentPosition}>\r\n          {(language === 'english' || language === undefined) &&\r\n            <>\r\n              Or...<u className='cursor'>Detect Location</u>\r\n            </>}\r\n          {language === 'spanish' && <>{'<Spanish>'}\r\n              Or...<u className='cursor'>Detect Location</u>\r\n          </>}\r\n        </div></>}\r\n\r\n        <button type=\"submit\" form=\"location\">Map My Location</button>\r\n\r\n      </form>\r\n      <p className=\"instructions\">Enter a location close to where you'd like to pick up your prescription.</p>\r\n\r\n      <div className=\"clickthrough\">\r\n        <Link className=\"back cursor\" to={\r\n          \r\n            {\r\n              pathname: '/src/components/Home',\r\n              query: {\r\n                component: 'prescription',\r\n                prescriptions: prescriptionFromRoute,\r\n                location: JSON.stringify(getLocation).trim(),\r\n                language: language\r\n\r\n              }\r\n            }\r\n        }>{'<<'}\r\n          {(language === 'english' || language === 'undefined') && \"Step 1\"}\r\n          {(language === 'spanish') && \"<Spanish>Step 1\"}`\r\n\r\n        </Link>\r\n\r\n        {((Object.keys(getLocation).length !== 0) || location) &&\r\n\r\n          <Link className='cursor' to={\r\n            \r\n              {\r\n                pathname: '/src/components/Home',\r\n                query: {\r\n                  component: 'choose-your-coupon',\r\n                  prescriptions: prescriptionFromRoute,\r\n                  location: JSON.stringify(getLocation).trim(),\r\n                  language: language\r\n                },\r\n              }\r\n          }>\r\n\r\n            {(language === 'english' || language === undefined) && 'Next: Step3'}\r\n            {language === 'spanish' && '<Spanish>Next: Step3'}\r\n            {'>>'}\r\n          </Link>}\r\n      </div>\r\n\r\n\r\n\r\n      {/*\r\n        used in version 1 with wire frames\r\n        // version 1 from wire frames\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n\r\n      \r\n      <span className={styles.desktop_main_left_find_prescription_home_title}>\r\n        {console.log('language', language)}\r\n        {(language === 'english' || language === undefined) && 'Step 2: Your Location'}\r\n        {language === 'spanish' && '<Spanish>Step 2: Your Location'}\r\n      </span>\r\n      \r\n      <div className={styles.desktop_main_left_location_caption}>\r\n        {(language === 'english' || language === undefined) && 'Choose a location where you would like to pick up your prescription.'}\r\n        {language === 'spanish' && '<Spanish>Choose a location where you would like to pick up your prescription.'}\r\n\r\n      </div>\r\n      \r\n      { (windowWidth <= 520 && valueForInputValue ?\r\n        <div className={styles.desktop_location_clear}>\r\n          {valueForInputValue} <u onClick={clearInput}>\r\n            {(language === 'english' || language === undefined) && 'Clear'}\r\n            {language === 'spanish' && '<Spanish>Clear'}\r\n          </u>\r\n        </div>\r\n        :\r\n         <>\r\n          <input value={valueForInputValue} autoComplete=\"off\" onFocus={(e) => {\r\n              clearInput(e);\r\n              \r\n            }          \r\n          }\r\n            placeholder=\"Type City or Zip Code\" className={styles.desktop_main_left_find_prescription_home_input} type=\"text\" list=\"Locations\" onChange={searchLocation} id=\"location\" />\r\n          <datalist  className=\"desktop-main-left-find-prescription-home-datalist\" id=\"Locations\">\r\n            {console.log('locationsfrommutation', locationsFromMutation)}\r\n            {locationsFromMutation.map((element, index) =>\r\n              <option key={`location${index}`} value={element.description} />\r\n            )}\r\n          </datalist>\r\n        </>)\r\n      }\r\n      {(windowWidth <= 520 && valueForInputValue) ? null :\r\n        <div onClick={getCurrentPosition} className={styles.desktop_main_location_detect_location}>\r\n          {(language === 'english' || language === undefined) &&\r\n            <>\r\n              Or...<u>Detect Location</u>\r\n            </>}\r\n          {language === 'spanish' && <>{'<Spanish>'}\r\n          Or...<u>Detect Location</u>\r\n          </>}\r\n        </div>\r\n      }\r\n      {console.log('getLocation', getLocation)}\r\n      {((Object.keys(getLocation).length !== 0 && getLocation.constructor === Object) || location) && <button className={`next-button ${styles.desktop_button_location}`} onClick={() => router.push\r\n        (\r\n          {\r\n            pathname: '/src/components/Home',\r\n            query: {\r\n              component: 'choose-your-coupon',\r\n              prescriptions: prescriptionFromRoute,\r\n              location: valueForInputValue.trim(),\r\n              language: language\r\n            },\r\n          })\r\n      }>\r\n        {(language === 'english' || language === undefined) && 'Next: Step3'}\r\n        {language === 'spanish' && '<Spanish>Next: Step3'}\r\n        {'>>'}</button>}\r\n      <div className={styles.desktop_location_back_button} onClick={() => router.push\r\n        (\r\n          {\r\n            pathname: '/src/components/Home',\r\n            query: {\r\n              component: 'prescription',\r\n              prescriptions: prescriptionFromRoute,\r\n              location: valueForInputValue.trim(),\r\n              language: language\r\n\r\n            }\r\n          })\r\n      }><u>{'<<'}\r\n          {(language === 'english' || language === 'undefined') && ` ${(windowWidth > 520 ? \"Step 1: Your Prescription\" : \"Step 1\")}`}\r\n          {(language === 'spanish') && `${(windowWidth > 520 ? \"<Spanish>Step 1: Your Prescription\" : \"<Spanish>Step 1\")}`}\r\n        </u>\r\n      </div> */}\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Location;","import React from \"react\";\r\n//import styles from '../../../../../styles/PrescriptionDetailedForm.module.scss';// for version 1 with wire frames\r\n\r\nimport { GetLocatedDrugFormInterface, GetLocatedDrugQtyInterface, GetLocatedDrugStrengthInterface, LocatedDrugStrengthInterface } from \"../../Home/ChooseYourCoupon\";\r\n\r\n/**\r\n * @COMPONENT\r\n * Displays the details of the prescription selected\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language // the languages selected English|Spanish\r\n * @param disabled // for making the selects editable\r\n * @param dataFromServer //Prescription comming from the server\r\n * @param prescriptionFromRoute // the prescription passed in when using the route function\r\n * @useState setPrescriptionDetails // sets the prescription chosen \r\n */\r\n\r\nconst PrescriptionDetailedForm = ({ language, disabled = false, coupons, prescriptionName, setValuesForFilterCoupons,filterCoupons }:any) => {\r\n       \r\n    let manufacturer = \"\";\r\n    let form:GetLocatedDrugFormInterface[] = !Array.isArray(coupons['forms']['locatedDrugForm']) ? [coupons['forms']['locatedDrugForm']] : coupons['forms']['locatedDrugForm'][0];\r\n    let dosage:GetLocatedDrugStrengthInterface[] =  !Array.isArray(coupons['strengths']['locatedDrugStrength']) ? [coupons['strengths']['locatedDrugStrength']] : coupons['strengths']['locatedDrugStrength'].sort((a,b)=> a.strength._text.toUpperCase().localeCompare(b.strength._text.toUpperCase()));\r\n    let quantity:GetLocatedDrugQtyInterface[] = !Array.isArray(coupons['quantities']['locatedDrugQty']) ? [coupons['quantities']['locatedDrugQty']]: coupons['quantities']['locatedDrugQty'].sort((a,b)=> parseFloat(a.quantity._text) - parseFloat(b.quantity._text));\r\n    \r\n    let val={\r\n        form:form[0].form._text,\r\n        dosage:dosage[0].strength._text,\r\n        quantity:quantity[0].quantity._text                 \r\n    }\r\n    setValuesForFilterCoupons(val);\r\n      \r\n    /**\r\n     * Sets the values from the select tag\r\n     * \r\n     * @useState setPrescriptionsDetails\r\n     * @param e \r\n     */\r\n    const onChange = (e:any) => {\r\n        let val = {\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setValuesForFilterCoupons(val);\r\n        filterCoupons();\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                /**\r\n                * refrencing version of: 1/28/2021\r\n                * source: https://github.com/emilynorton?tab=repositories\r\n                */\r\n            }\r\n\r\n            {/**@param disabled used when passed by Choose your coupon component*/\r\n            !disabled && <>\r\n                {(language === 'english' || language === undefined) && <><p className=\"instructions\">Adjust the information below so it matches your exact prescription. You can also adjust the details later.</p></>}\r\n                {language === 'spanish' && <><p className=\"instructions\">{'<Spanish>'}Adjust the information below so it matches your exact prescription. You can also adjust the details later.</p></>}\r\n                \r\n                </>\r\n            }\r\n            <div id=\"rx\" className=\"rx\">\r\n                <h4> {prescriptionName.search_name}</h4>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"mfg\">Manufacturer</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"mfg\">Manufacturer</label></>}\r\n\r\n                    <select\r\n                        disabled={disabled}\r\n                        name=\"mfg\"\r\n                        onChange={onChange}\r\n                        defaultValue={manufacturer}\r\n                        id=\"mfg\"\r\n                    >\r\n                       \r\n                    \r\n                    </select>\r\n                </p>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"form\">Form</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"form\">Form</label></>}\r\n\r\n                    <select\r\n                        disabled={disabled}\r\n                        name=\"form\"\r\n                        onChange={onChange}\r\n                        id=\"form\"\r\n                    >\r\n                       {form.map((e:GetLocatedDrugFormInterface,i:number)=> <option key={i} value={e.form._text} >{e.form._text}</option>)}\r\n                    \r\n                    </select>\r\n                </p>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"dosage\">Dosage</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"dosage\">Dosage</label></>}\r\n\r\n                    <select\r\n                        name=\"dosage\"\r\n                        id=\"dosage\"\r\n                        disabled={disabled}\r\n                        onChange={onChange}\r\n                        \r\n                    >                        \r\n                        {\r\n                            dosage.map((e:GetLocatedDrugStrengthInterface,i:number) => <option key={i} value={e.strength._text} >{e.strength._text}</option>)   \r\n                        }\r\n                        \r\n                    \r\n                    </select>\r\n                </p>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"qty\">Quantity</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"qty\">Quantity</label></>}\r\n\r\n                    <select\r\n                        name=\"quantity\"\r\n                        id=\"qty\"\r\n                        disabled={disabled}\r\n                        onChange={onChange}\r\n                        \r\n                    >\r\n                     {  quantity.map((e:GetLocatedDrugQtyInterface,i:number)=> <option key={i} value={e.quantity._text} >{e.quantity._text}</option>)}   \r\n                      \r\n                    </select>\r\n                </p>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* \r\n            \r\n             \r\n             // version 1 from wire frames\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n\r\n\r\n            <div className={styles.prescription_detailed_form_container}>\r\n                <div className={styles.main_desktop_left_prescription_form_description}>\r\n\r\n                    {language === 'english' || language === undefined && `Does this match your prescription? Make adjustments below\r\n                so that we can accurately compare prices. Don't worry, you will be\r\n                able to adjust this again.`}\r\n                    {language === 'spanish' && `<Spanish> Does this match your prescription? Make adjustments below\r\n                so that we can accurately compare prices. Don't worry, you will be\r\n                able to adjust this again.`}\r\n\r\n                </div>\r\n\r\n                <div className={styles.main_desktop_left_prescription_form_title_container}>\r\n                    <div\r\n                        className={styles.main_desktop_left_prescription_form_title}>\r\n                        {(prescriptionFromRoute !== undefined ? prescriptionFromRoute.search_name : (dataFromServer === undefined ? \"\" : dataFromServer[0].search_name))}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.main_desktop_left_prescription_form_description_container}>\r\n                    <div className={styles.manufactor_container} >\r\n                        <div className={`${styles.main_desktop_left_prescription_form_manufacturer_label} ${styles.main_desktop_left_prescription_form_label}`} >\r\n                            {(language === 'english' || language === undefined) && 'Manufacture'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                        </div>\r\n                        \r\n                            <select\r\n                                disabled={disabled}\r\n                                name=\"manufactor\"\r\n                                onChange={onChange}\r\n                                defaultValue={prescriptionFromRoute && manufacturer}\r\n                                className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_manufacturer_select} ${styles.main_desktop_left_prescription_form_select}`}>\r\n                                {\r\n                                    dataFromServer && dataFromServer.map((element, index) =>\r\n                                        <option key={`manufactor${index}`} value={element.manufacturer}>{element.manufacturer}</option>\r\n\r\n                                    )\r\n                                }\r\n                                {dataFromServer === undefined && <option value={manufacturer}>{manufacturer}</option>}\r\n                            </select>\r\n                        \r\n                    </div>\r\n                    <div className={styles.form_container}>\r\n                        <div className={`${styles.main_desktop_left_prescription_form_label} ${styles.main_desktop_left_prescription_form_format_label}`}>\r\n                        {(language === 'english' || language === undefined) && 'Format'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                            \r\n                        </div>\r\n                        \r\n                        <select\r\n                            disabled={disabled}\r\n                            name=\"form\"\r\n                            onChange={onChange}\r\n                            defaultValue={prescriptionFromRoute && form}\r\n                            className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_format_select} ${styles.main_desktop_left_prescription_form_select} `}>\r\n                            {\r\n                                dataFromServer && dataFromServer.map(element =>\r\n                                    element.form.map((e, index) =>\r\n                                        <option key={`form${index}`} value={e}>{e}</option>\r\n\r\n                                    )\r\n\r\n\r\n                                )\r\n                            }\r\n                            {dataFromServer === undefined && <option value={form} >{form} </option>}\r\n                        </select>\r\n                        \r\n                    </div>\r\n                    <div className={styles.dosage_container}>\r\n                        <div className={` ${styles.main_desktop_left_prescription_form_label} ${styles.main_desktop_left_prescription_form_dosage_label}`} >\r\n                        {(language === 'english' || language === undefined) && 'Dosage'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                          \r\n                            \r\n                        </div>\r\n\r\n                        <select\r\n                            disabled={disabled}\r\n                            name=\"dosage\"\r\n                            onChange={onChange}\r\n                            defaultValue={prescriptionFromRoute && dosage}\r\n                            className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_select} ${styles.main_desktop_left_prescription_form_dosage_select}`}>\r\n                            {\r\n                                dataFromServer && dataFromServer.map(element =>\r\n                                    element.dosage.map((e, index) =>\r\n                                        <option key={`dosage${index}`} value={e.dosage}>{e.dosage}</option>\r\n\r\n                                    )\r\n\r\n                                )\r\n                            }\r\n                            {dataFromServer === undefined && <option value={dosage} > {dosage} </option>}\r\n                        </select>\r\n                    </div>\r\n                    <div className={styles.quantity_container}>\r\n                        <div className={`${styles.main_desktop_left_prescription_form_label} ${styles.main_desktop_left_prescription_form_quantity_label}`}>\r\n                        {(language === 'english' || language === undefined) && 'Quantity'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                          \r\n                            \r\n                        </div>\r\n                        <select\r\n                            disabled={disabled}\r\n                            name=\"quantity\"\r\n                            onChange={onChange}\r\n                            defaultValue={prescriptionFromRoute && quantity}\r\n                            className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_select} ${styles.main_desktop_left_prescription_form_quantity_select}`}>\r\n                            {\r\n                                dataFromServer && dataFromServer.map(element =>\r\n                                    element.quantity.map((e, index) =>\r\n                                        <option key={`quantity${index}`} value={e.quantity}>{e.quantity}</option>\r\n\r\n                                    )\r\n\r\n                                )\r\n                            }\r\n                            {dataFromServer === undefined && <option value={quantity}>{quantity}</option>}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n\r\n    );\r\n}\r\nexport default PrescriptionDetailedForm;","import React from \"react\";\r\n// import { useRouter } from \"next/router\";\r\n//import styles from '../../../../../styles/CouponsTiles.module.scss'; used in version 1\r\n\r\n\r\n/**\r\n * @Component\r\n * Tile for an overview of the coupon\r\n * \r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language the language to display the data \r\n * @param prescription the prescription details \r\n * @param couponData the dataOf the Coupon\r\n */\r\n\r\nconst CouponsTiles = ({ language, prescription, couponsData }:any) => {\r\n\r\n    \r\n    \r\n\r\n    /**\r\n     * sends the detailes of the coupon to the componentDetails\r\n     * component \r\n     */\r\n    const sendToCoupon = () => {\r\n        // router.push\r\n        //     (\r\n        //         {\r\n        //             pathname: '/src/components/Home',\r\n        //             query: { container: 'coupon', prescriptions: prescription, language: language },\r\n        //         })\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {/**\r\n             * refrencing version of: 1/28/2021\r\n             * source: https://github.com/emilynorton?tab=repositories\r\n             */}\r\n            <div className=\"coupon article\">\r\n\r\n                <div className=\"price\">\r\n                    <a href=\"#\"><div>{`$${couponsData.pricing.price._text}`}</div></a>\r\n                </div>\r\n\r\n                <div onClick={sendToCoupon} className=\"coupon_button cursor\">\r\n                    <u>  {(language === 'english' || language === undefined) && 'Get Coupon'}\r\n                        {(language === 'spanish') && '<Spanish>Get Coupon'}\r\n                    </u>\r\n                </div>\r\n\r\n                <div className=\"pharmacy\">\r\n                    <div className=\"pharmacy\"><address><strong>{couponsData.pharmacy.name._text}</strong> {`${couponsData.pharmacy.streetAddress._text}, ${couponsData.pharmacy.city._text}, ${couponsData.pharmacy.state._text} ${couponsData.pharmacy.zipCode._text.split(\"-\")[0]}`}</address>&nbsp;<a href={`https://www.google.com/maps/search/?api=1&query=${couponsData.pharmacy.latitude._text}%2C${couponsData.pharmacy.longitude._text}`} target=\"_blank\">Map</a></div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            {/*           \r\n                 used in version 1 with wire frames\r\n                // version 1 from wire frames\r\n                // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n                // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n                // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n                \r\n            <div className={styles.desktop_coupons_tiles_container}> \r\n                <div className={styles.desktop_coupons_tiles_store_info_container}>\r\n                <div className={styles.desktop_coupons_tiles_store}>\r\n                 {(language === 'english' || language === undefined ) && 'Store'}\r\n                 {(language === 'spanish') && '<Spanish>Store'}\r\n                    \r\n                </div>\r\n                <div className={styles.desktop_coupons_tiles_store_address}>\r\n                {(language === 'english' || language === undefined) &&   'Address' }\r\n                {(language === 'spanish') &&   '<Spanish>Address' }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.desktop_coupons_tiles_store_price}>$0.00</div>\r\n            <div onClick={sendToCoupon} className={styles.desktop_coupons_tiles_store_button}>\r\n                <u>  {(language === 'english' || language === undefined) &&   'Get Coupon' }\r\n                     {(language === 'spanish') &&   '<Spanish>Get Coupon' }\r\n                </u>\r\n                \r\n            </div> */}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CouponsTiles","import React, { useState } from 'react';\r\n\r\nimport PrescriptionDetailedForm from '../../component/PrescriptionDetailedForm';\r\nimport CouponsTiles from '../../component/CouponsTiles';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import styles from '../../../../../styles/ChooseYourCoupon.module.scss'; used in version 1\r\n\r\n\r\n\r\nexport interface CouponStructureInterface {\r\n  drugs: DrugsInterface;\r\n  forms: LocatedDrugFormInterface;\r\n  names: LocatedDrugNameInterface;\r\n  quantities: LocatedDrugQtyInterface;\r\n  strengths: LocatedDrugStrengthInterface;\r\n}\r\nexport interface LocatedDrugFormInterface {\r\n  locatedDrugForm: GetLocatedDrugFormInterface[];\r\n}\r\nexport interface LocatedDrugNameInterface {\r\n  locatedDrugName: GetLocatedDrugNameInterface;\r\n}\r\nexport interface DrugsInterface {\r\n  locatedDrug:LocatedDrugInterface[];\r\n}\r\nexport interface LocatedDrugQtyInterface {\r\n  locatedDrugQty: GetLocatedDrugQtyInterface[]\r\n\r\n}\r\nexport interface LocatedDrugStrengthInterface {\r\n  locatedDrugStrength: GetLocatedDrugStrengthInterface[];\r\n}\r\nexport interface GetLocatedDrugStrengthInterface {\r\n  strength: PharmacyTextInterface;\r\n  gsn: PharmacyTextInterface;\r\n  isSelected: PharmacyTextInterface;\r\n  ranking: PharmacyTextInterface;\r\n}\r\n\r\n\r\nexport interface GetLocatedDrugQtyInterface {\r\n  quantity: PharmacyTextInterface\r\n  quantityUomr: PharmacyTextInterface\r\n  gsn: PharmacyTextInterface\r\n  isSelected: PharmacyTextInterface\r\n  ranking: PharmacyTextInterface\r\n}\r\n\r\nexport interface GetLocatedDrugFormInterface {\r\n  form: PharmacyTextInterface;\r\n  gsn: PharmacyTextInterface;\r\n  isSelected: PharmacyTextInterface;\r\n  ranking: PharmacyTextInterface;\r\n  awpPrice: PharmacyTextInterface;\r\n}\r\n\r\nexport interface GetLocatedDrugNameInterface {\r\n  drugName: PharmacyTextInterface\r\n  brandGenericIndicator: PharmacyTextInterface\r\n  isSelected: PharmacyTextInterface\r\n}\r\n\r\n\r\n\r\nexport interface LocatedDrugInterface {\r\n  pharmacy: PharmacyInterface\r\n  drug: DrugInterface\r\n  pricing: PricingInterface\r\n}\r\n\r\nexport interface PharmacyInterface {\r\n  name: PharmacyTextInterface;\r\n  streetAddress: PharmacyTextInterface;\r\n  city: PharmacyTextInterface;\r\n  state: PharmacyTextInterface;\r\n  zipCode: PharmacyTextInterface;\r\n  latitude: PharmacyTextInterface;\r\n  longitude: PharmacyTextInterface;\r\n  hoursOfOperatio: PharmacyTextInterface;\r\n  phone: PharmacyTextInterface;\r\n  npi: PharmacyTextInterface;\r\n  chainCode: PharmacyTextInterface;\r\n  distance: PharmacyTextInterface;\r\n}\r\n\r\nexport interface DrugInterface {\r\n  ndcCode: PharmacyTextInterface;\r\n  brandGenericIndicator: PharmacyTextInterface;\r\n  gsn: PharmacyTextInterface;\r\n  drugRanking: PharmacyTextInterface;\r\n  quantity: PharmacyTextInterface;\r\n  quantityRacking: PharmacyTextInterface;\r\n}\r\n\r\nexport interface PricingInterface {\r\n  price: PharmacyTextInterface;\r\n  priceBasis: PharmacyTextInterface;\r\n  usualAndCustomaryPrice: PharmacyTextInterface;\r\n  macPrice: PharmacyTextInterface;\r\n  awpPrice: PharmacyTextInterface;\r\n}\r\nexport interface PharmacyTextInterface {\r\n  _text: string;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @Pages\r\n * \r\n * List of coupons based on prescriptin details\r\n * uses coupon service\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language the language to display the data \r\n * @param prescriptionFromRoute the prescription passed by the Route \r\n * @param location the location where to search\r\n * \r\n * uses\r\n * \r\n * @component CouponTiles\r\n * @component PrescriptionDetailedForm\r\n */\r\n\r\n let allTheData:CouponStructureInterface;\r\nconst ChooseYourCoupon = ({ language, prescriptionFromRoute, location }:any) => {\r\n\r\n      location = JSON.parse(location);  \r\n      prescriptionFromRoute = JSON.parse(prescriptionFromRoute);\r\n      console.log('location',location,prescriptionFromRoute);\r\n  \r\n\r\n  let pharmacyText: PharmacyTextInterface = {\r\n    _text: \"\"\r\n  }\r\n\r\n  let locatedDrugStrength: GetLocatedDrugStrengthInterface[];\r\n\r\n  let locatedDrugQty: GetLocatedDrugQtyInterface[];\r\n\r\n  let locatedDrugForm: GetLocatedDrugFormInterface[];\r\n\r\n  let drug: DrugInterface = {\r\n    ndcCode: pharmacyText,\r\n    brandGenericIndicator: pharmacyText,\r\n    gsn: pharmacyText,\r\n    drugRanking: pharmacyText,\r\n    quantity: pharmacyText,\r\n    quantityRacking: pharmacyText\r\n  }\r\n\r\n  let pharmacy: PharmacyInterface = {\r\n    name: pharmacyText,\r\n    streetAddress: pharmacyText,\r\n    city: pharmacyText,\r\n    state: pharmacyText,\r\n    zipCode: pharmacyText,\r\n    latitude: pharmacyText,\r\n    longitude: pharmacyText,\r\n    hoursOfOperatio: pharmacyText,\r\n    phone: pharmacyText,\r\n    npi: pharmacyText,\r\n    chainCode: pharmacyText,\r\n    distance: pharmacyText,\r\n  }\r\n\r\n  let pricing = {\r\n    price: pharmacyText,\r\n    priceBasis: pharmacyText,\r\n    usualAndCustomaryPrice: pharmacyText,\r\n    macPrice: pharmacyText,\r\n    awpPrice: pharmacyText,\r\n  }\r\n\r\n\r\n  let locatedDrug: LocatedDrugInterface[] = []; \r\n\r\n  let locatedDrugName: GetLocatedDrugNameInterface = {\r\n    drugName: pharmacyText,\r\n    brandGenericIndicator: pharmacyText,\r\n    isSelected: pharmacyText\r\n  }\r\n\r\n  let drugs: DrugsInterface = {\r\n    locatedDrug\r\n  };\r\n  let forms: LocatedDrugFormInterface = {\r\n    locatedDrugForm:[]\r\n  };\r\n  let names: LocatedDrugNameInterface = {\r\n    locatedDrugName\r\n\r\n  };\r\n  let quantities: LocatedDrugQtyInterface = {\r\n    locatedDrugQty:[]\r\n  };\r\n\r\n  let strengths: LocatedDrugStrengthInterface = {\r\n    locatedDrugStrength:[]\r\n  };\r\n  let couponData: CouponStructureInterface = {\r\n    drugs,\r\n    forms,\r\n    names,\r\n    quantities,\r\n    strengths\r\n\r\n  }\r\n  const [coupons, setCoupons] = useState<CouponStructureInterface>(couponData);\r\n \r\n  const [ valuesForFilter,setValuesForFilter ] = useState({\r\n    form:\"\",\r\n    dosage:\"\",\r\n    quantity:\"\"                 \r\n});\r\n  \r\n let  filterValues = {form:\"\",\r\n dosage:\"\",\r\n quantity:\"\"  }\r\n  const setValuesForFilterCoupons = (value:any) =>{\r\n         \r\n    setValuesForFilter(Object.assign(valuesForFilter ,value));\r\n        //setValuesForFilter(Object.assign(valuesForFilter,value));\r\n      \r\n        //fileterCoupons();\r\n                \r\n  }\r\n  const fileterCoupons =()=>{\r\n\r\n    //coupons.drugs.locatedDrug = allTheData.drugs.locatedDrug.filter((e:LocatedDrugInterface) => e.drug.quantity._text === valuesForFilter.quantity);\r\n    setCoupons(JSON.parse(JSON.stringify(coupons)));\r\n            \r\n  }\r\n\r\n\r\n  /**\r\n   * returns to the location pages \r\n   * \r\n   */\r\n  const returnToLocation = () => {\r\n    // router.push\r\n    //   (\r\n    //     {\r\n    //       pathname: '/src/components/Home',\r\n    //       query: {\r\n    //         component: 'location',\r\n    //         prescriptions: prescriptionFromRoute,\r\n    //         location: location,\r\n    //         language: language\r\n    //       },\r\n    //     })\r\n\r\n  }\r\n  let arr = [];\r\n\r\n  /**\r\n   * helper function for development \r\n   * filles the coupons\r\n   * \r\n   * @component CouponTiles \r\n   */\r\n  const fillCoupon = () => {\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      arr.push(\r\n        <CouponsTiles language={language} prescription={prescriptionFromRoute} couponsData={prescriptionFromRoute} />);\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Call to the service Prescription to retreve the prescriptionsfordatalist available\r\n   * @useState  setPrescriptionDetailsForPrescriptionDetailComponent\r\n   * @param setPrescriptionDetails // passed in from the function\r\n   * @useState\r\n   *  \r\n   */\r\n  // \r\n  \r\n  fillCoupon();\r\n  // Object.keys(coupons).length <= 0 && getCoupons({ variables: { prescription: prescriptionFromRoute.search_name, latitude: location.latitude, longitude: location.longitude }, context: { clientName: 'coupon' } })\r\n  //allTheData === undefined && getCoupons({ variables: { prescription: prescriptionFromRoute.search_name, latitude: location.latitude, longitude: location.longitude }, context: { clientName: 'coupon' } })\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      {/**\r\n         * refrencing version of: 1/28/2021\r\n         * source: https://github.com/emilynorton?tab=repositories\r\n         */}\r\n\r\n      {(language === 'english' || language === undefined) && <> <h3><span>Step 3 of 3: </span>Choose Your Coupon</h3></>}\r\n      {language === 'spanish' && <><h3><span>{'<Spanish>'} Step 3 of 3: </span>Choose Your Coupon</h3></>}\r\n      <div className='location cursor'>\r\n        {(language === 'english' || language === undefined) &&\r\n          <>\r\n            Location: {location.myLocation} <Link to={{\r\n                      pathname: '/src/components/Home',\r\n            query:{\r\n            component: 'location',\r\n            prescriptions: prescriptionFromRoute,\r\n            location: location,\r\n            language: language}\r\n          }}>Clear</Link>\r\n          </>\r\n\r\n        }\r\n        {language === 'spanish' &&\r\n          <>\r\n            {'<Spanish>'}Location: {location} <u onClick={returnToLocation}>Clear</u>\r\n          </>\r\n        }\r\n      </div>\r\n       {coupons['drugs'].locatedDrug.length > 0 && <PrescriptionDetailedForm language={language} \r\n                                disabled={false}\r\n                                coupons={coupons}                               \r\n                                prescriptionName={prescriptionFromRoute}\r\n                                filterCoupons={fileterCoupons}\r\n                                setValuesForFilterCoupons={setValuesForFilterCoupons} /> }\r\n      <div className=\"list_info\">\r\n        <p><span>Sorted by: </span>Price</p>\r\n        <p><span>Number of Results: </span>3</p>\r\n        <p className=\"radius\"><span>Radius: </span>15 miles</p>\r\n      </div>\r\n      <div>        \r\n        {coupons['drugs'].locatedDrug.map(element =>{  \r\n            if(element.drug.quantity._text === valuesForFilter.quantity)              \r\n                return <CouponsTiles language={language} prescription={prescriptionFromRoute} couponsData={element} />})}\r\n      </div>\r\n\r\n\r\n      \r\n        \r\n        {/* used in version 1 with wire frames\r\n        // version 1 from wire frames\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n\r\n        \r\n        <span className={styles.desktop_main_left_find_prescription_home_title} >\r\n        {(language === 'english' ||  language === undefined) && 'Step 3: Choose Your Coupon'}\r\n        {language === 'spanish' &&  '<Spanish>Step 3: Choose Your Coupon'} \r\n          \r\n          \r\n          \r\n        </span>\r\n        <div className={styles.desktop_main_left_location_caption}>\r\n        {(language === 'english' ||  language === undefined) && \r\n        <>\r\n          In { location } <u onClick={returnToLocation}>Change Location</u> \r\n        </>\r\n        \r\n        }\r\n        {language === 'spanish' &&  \r\n        <>\r\n         {'<Spanish>'}  In { location } <u onClick={returnToLocation}>Change Location</u> \r\n        </>        \r\n        }\r\n        </div>\r\n        <PrescriptionDetailedForm language={language} disabled={true}  prescriptionFromRoute={prescriptionFromRoute}   />\r\n        <br />\r\n        <div className={styles.desktop_choose_your_coupon_sort}>\r\n        {(language === 'english' ||  language === undefined) && 'Sorted by: Price'}\r\n        {language === 'spanish' &&  'Sorted by: Price'}          \r\n        </div>\r\n        <div className={styles.desktop_choose_your_coupon_list_container}>\r\n            {arr}\r\n                \r\n        </div>\r\n\r\n    </div> */}\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ChooseYourCoupon;","import React from \"react\";\r\n// import { useRouter } from \"next/router\";\r\n//import styles from '../../../../../styles/Coupon.module.scss'; used in version 1\r\n\r\n\r\n/**\r\n * @Component\r\n * \r\n * Specifics of the Coupon \r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language the language to display the data \r\n * @param prescription the prescription details \r\n * @param coupon the data for the Coupon\r\n */\r\n\r\nconst Coupon = ({ language, windowWidth, prescription, coupon = undefined }:any) => {\r\n    let search_name = \"\";\r\n    let dosage = \"\";\r\n    let form = \"\";\r\n\r\n    if (prescription !== undefined) {\r\n        prescription = JSON.parse(prescription);\r\n        search_name = prescription.search_name;\r\n        dosage = prescription.dosage;\r\n        form = prescription.form;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/**\r\n             * refrencing version of: 1/28/2021\r\n             * source: https://github.com/emilynorton?tab=repositories\r\n          */}\r\n            <article className=\"single_coupon\">\r\n                <p className=\"drugcode\"><span>{ search_name }</span>{`${form} ${dosage}`}</p>\r\n\r\n                <p className=\"price\">$8.09</p>\r\n\r\n                <p className=\"address\">\r\n                   \r\n                   {(language === 'english' || language === undefined) && 'Pick up at:'}\r\n                   {language === 'spanish' && '<Spanish> Pick up at:'}\r\n                     \r\n                    \r\n                    <address><strong>Walgreens</strong> 1201 E. Superior Street, Duluth, MN 55805 </address>\r\n                </p>\r\n                <dl>\r\n                    <dt>ID:</dt>\r\n                    <dd>######</dd>\r\n                    <dt>BIN: </dt>\r\n                    <dd>######</dd>\r\n                    <dt>PCN:</dt>\r\n                    <dd>######</dd>\r\n                    <dt>GRP:</dt>\r\n                    <dd>######</dd>\r\n                </dl>\r\n\r\n                <p className=\"disclaimer\">\r\n                   {(language === 'english' || language === undefined) && 'This is not insurance'}\r\n                   {language === 'spanish' && '<Spanish> This is not insurance'}                   \r\n                </p>\r\n\r\n                <p className=\"fineprint\">\r\n                   {(language === 'english' || language === undefined) && ' All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here.'}\r\n                   {language === 'spanish' && '<Spanish>  All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. All of the fine print text goes here. '}\r\n                </p>\r\n\r\n            </article>\r\n\r\n            {/* {\r\n\r\n            // version 1 from wire frames\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n            windowWidth > 550 ?\r\n                <div className={styles.desktop_coupon_component_container}>\r\n\r\n                    <div className={styles.desktop_coupon_component_store_info}>\r\n                        {(language === 'english' || language === undefined) &&\r\n                            <>\r\n                                <b>Show this coupon at</b>\r\n                            </>\r\n                        }\r\n                        {language === 'spanish' &&\r\n                            <>\r\n                                {'<Spanish>'}<b> Show this coupon at </b>\r\n                            </>\r\n                        }\r\n\r\n\r\n                        {'Store'}, {'Store Address'}</div>\r\n\r\n                    <div className={styles.desktop_coupon_component_phone_number} >\r\n                    {(language === 'english' || language === undefined) &&\r\n                            <>\r\n                                Questions? Give us a call at <b>800.555.1212</b>\r\n                            </>\r\n                        }\r\n                        {language === 'spanish' &&\r\n                            <>\r\n                                {'<Spanish>'}Questions? Give us a call at <b>800.555.1212</b>\r\n                            </>\r\n                        }                      \r\n                        </div>\r\n\r\n                    <div className={styles.desktop_coupon_component_prescription}> {search_name} {dosage} , {form} </div>\r\n                    <div className={styles.desktop_coupon_component_details_container}>\r\n                        <ul className={styles.desktop_coupon_component_deatils_identification}>\r\n                            <li>ID: {'XXXXXXXXXX'}</li>\r\n                            <li>BIN: {'XXXXXXXXXXX'}</li>\r\n                            <li>PCN: {'XXXXXXXXXXX'}</li>\r\n                            <li>GRP: {'XXXXXXXXXXX'}</li>\r\n                        </ul>\r\n                        <div className={styles.desktop_coupon_component_deatils_price}>${'0.00'}</div>\r\n                    </div>\r\n                    <div className={styles.desktop_coupon_component_fine_print} >\r\n                    {(language === 'english' ||  language === undefined) && 'All the fine print goes here'}\r\n                    {language === 'spanish' &&  '<Spanish>All the fine print goes here'}  \r\n                         \r\n                    </div>\r\n                    <div className={styles.desktop_coupon_component_fine_declairment}>\r\n                    {(language === 'english' || language === undefined) &&\r\n                            <>\r\n                                DISCOUNT ONLY - <br />NOT INSURANCE\r\n                            </>\r\n                        }\r\n                        {language === 'spanish' &&\r\n                            <>\r\n                                {'<Spanish>'}DISCOUNT ONLY - <br />NOT INSURANCE\r\n                            </>\r\n                        }                    \r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={styles.desktop_coupon_component_container}>\r\n                    <div className={styles.desktop_coupon_prescrition_detailes_container}>\r\n                        <div className={styles.desktop_coupon_component_prescription}> {search_name} {dosage} , {form} </div>\r\n                        <div className={styles.desktop_coupon_component_deatils_price}>${'0.00'}</div>\r\n                    </div>\r\n                    <div className={styles.desktop_coupon_component_store_info_component}>{'Store'}, {'Store Address'}</div>\r\n\r\n                    <div className={styles.desktop_coupon_component_details_container}>\r\n                        <ul className={styles.desktop_coupon_component_deatils_identification}>\r\n                            <li>ID: {'XXXXXXXXXX'}</li>\r\n                            <li>BIN: {'XXXXXXXXXXX'}</li>\r\n                            <li>PCN: {'XXXXXXXXXXX'}</li>\r\n                            <li>GRP: {'XXXXXXXXXXX'}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className={styles.desktop_coupon_component_fine_declairment}>\r\n                    {(language === 'english' || language === undefined) &&\r\n                            <>\r\n                                DISCOUNT ONLY - NOT INSURANCE\r\n                            </>\r\n                        }\r\n                        {language === 'spanish' &&\r\n                            <>\r\n                                {'<Spanish>'}DISCOUNT ONLY - NOT INSURANCE\r\n                            </>\r\n                        }                    \r\n                        \r\n                    </div>\r\n                    <div className={styles.desktop_coupon_component_fine_print} >\r\n                    {(language === 'english' ||  language === undefined) && 'All the fine print goes here'}\r\n                    {language === 'spanish' &&  '<Spanish>All the fine print goes here'}  \r\n                     \r\n                         </div>\r\n\r\n                </div>\r\n        } */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Coupon","import React, { useState } from 'react';\r\n\r\n\r\nimport Coupon from '../../component/Coupon';\r\n\r\n//import styles from './../../../../../styles/CouponDetails.module.scss'; used inversion 1\r\n\r\n// import { useAlert } from 'react-alert';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * @context textMessage\r\n * \r\n * uses \r\n * \r\n * @serviceApi text_messages\r\n *  \r\n * \r\n * */\r\n\r\n// const SEND_PHONENUMBER_AND_COUPON = gql`\r\n// mutation  SendTextMessageMutation($value:String){\r\n//     SendTextMessageMutation(value:$value)\r\n//       {\r\n//            code\r\n//            message\r\n           \r\n//       }\r\n// }\r\n// `;\r\n\r\n/**\r\n * @Pages\r\n * \r\n * Details of the coupon \r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language the language to display the data \r\n * @param prescription the prescription details \r\n * @param coupon the data for the Coupon\r\n * \r\n * uses\r\n * \r\n * @component Coupon\r\n */\r\n\r\nconst CouponDetails = ({ language, windowWidth, prescription, coupon }:any) => {\r\n\r\n   \r\n    /** @gets @sets @type String  //the phone number to be sent to the service */ \r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n    \r\n    /**\r\n     * Used on version \r\n     * print's the coupon\r\n     */    \r\n    // const printCoupon = () => {\r\n    //     window.print();        \r\n    // }\r\n\r\n      \r\n    /**\r\n     * gets the phone number from the input box\r\n     * \r\n     * @param e \r\n     * @useState setPhoneNumber\r\n     * \r\n     */   \r\n    const getPhoneNumberEvent = (e:any) => {        \r\n        setPhoneNumber(e.target.value);\r\n    }\r\n    \r\n    /**\r\n     * value check and trigers the mutation to send phone number and coupon details \r\n     *  to the service\r\n     * \r\n     * \r\n     * @param e \r\n     * \r\n     * @mutatio sendPhobneNumberAndCoupon \r\n     *  \r\n     */\r\n\r\n    const sendCouponAndPhoneNumber = (e:any) => {\r\n        \r\n        \r\n        if(isNaN(+phoneNumber) || phoneNumber.length !== 10)\r\n        {\r\n            alert(`there is an error is the format ${phoneNumber}`);\r\n            return;\r\n        }\r\n\r\n        sendPhobneNumberAndCoupon({ variables: { value: phoneNumber }, context: { clientName: 'textMessage' } });\r\n\r\n    }\r\n\r\n    // const [sendPhobneNumberAndCoupon] = useMutation(SEND_PHONENUMBER_AND_COUPON, {\r\n    //     onError(err) {\r\n    //         console.log(err);\r\n    //         alert(err);\r\n\r\n    //     },\r\n    //     update(proxy, result) {\r\n    //         console.log(result);\r\n    //         if(result.data.SendTextMessageMutation.code !== 200)\r\n    //         {\r\n    //             alert(`there was an error ${result.data.message} ` )\r\n    //             return;\r\n    //         }\r\n    //         alert(`Message succesfully sent` );\r\n    //     }\r\n    // });\r\n    \r\n    /**\r\n     * clears the input box\r\n     * \r\n     * @useState setPhoneNumber\r\n     */\r\n    const clearInput = ()=>{\r\n\r\n        setPhoneNumber(\"\");\r\n    }   \r\n\r\n    return (\r\n        <>\r\n           {/**\r\n             * refrencing version of: 1/28/2021\r\n             * source: https://github.com/emilynorton?tab=repositories\r\n             */}\r\n              \r\n              <Link to={\r\n                        {\r\n                            pathname: '/',\r\n                            query: { language: language,component:'prescription' }\r\n                        }\r\n                    }  >\r\n                        <p className=\"start_over cursor\">\r\n                            <u>\r\n                                {(language === 'english' || language === undefined) && 'New Search'}\r\n                                {language === 'spanish' && '<Spanish> New Search'}\r\n                            </u>\r\n\r\n                        </p>\r\n                        \r\n                    </Link>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>\r\n                        {(language === 'english' || language === undefined) && 'Your Coupon'}\r\n                        {language === 'spanish' && '<Spanish> Your Coupon'}                        \r\n                    </h3>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h4 className='coupon'>\r\n                    {(language === 'english' || language === undefined) && 'Show this coupon to the pharmacist at:'}\r\n                    {language === 'spanish' && '<Spanish> Show this coupon to the pharmacist at:'}                        \r\n                        <address><strong>Walgreens</strong> 1201 E. Superior Street, Duluth, MN 55805 </address><a href=\"https://maps.google.com\" target=\"_blank\">Map</a>\r\n                    </h4>\r\n                    <Coupon language={language} windowWidth={windowWidth} prescription={prescription} coupon={coupon} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<form id=\"text_coupon\" className=\"text_coupon\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"text_coupon\">Enter Mobile Number</label>\r\n                            <input\r\n                            type=\"tel\"\r\n                            onFocus={clearInput}\r\n                            value={phoneNumber}\r\n                            onChange={getPhoneNumberEvent}                            \r\n                            placeholder='Type your phone number'\r\n                            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" />\r\n\t\t\t\t\t\t\t<button type=\"submit\" form=\"text_coupon\">Text Me The Coupon</button>\r\n\t\t\t\t\t\t\t<div>\r\n                                <div className='cursor' onClick={sendCouponAndPhoneNumber}>\r\n                                    {(language === 'english' || language === undefined) && 'Text Me The Coupon'}\r\n                                    {language === 'spanish' && '<Spanish> Text Me The Coupon'}                                \r\n                                </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"clickthrough_hide\">\r\n\t\t\t\t\t\t\t<div className=\"back\">{'< Back>'}</div>\r\n\t\t\t\t\t\t\t<div>Start Over</div>\r\n\t\t\t\t\t\t</div>\t\t\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/*            \r\n             \r\n            // version 1 from wire frames\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n               \r\n            {windowWidth > 550 ?\r\n                <div className={styles.main_desktop_home_coupon_container}>\r\n                    <Link href={\r\n                        {\r\n                            pathname: '/',\r\n                            query: { language: language }\r\n                        }\r\n                    } as='/'>\r\n                        <a className={styles.main_desktop_home_coupon_new_search}>\r\n                            <u>\r\n                                {(language === 'english' || language === undefined) && 'New Search'}\r\n                                {language === 'spanish' && '<Spanish> New Search'}\r\n                            </u>\r\n                        </a>\r\n                    </Link>\r\n                    <div className={styles.main_desktop_home_coupon_printer_container}>\r\n                        <IconContext.Provider value={{ className: styles.main_desktop_home_coupon_printer_icon }}>\r\n                            <MdPrint />\r\n                        </IconContext.Provider>\r\n                        <map name=\"print\">\r\n                            <area shape=\"rect\" coords=\"0,0,82,126\" />\r\n                        </map>\r\n\r\n                        <div onClick={printCoupon} className={styles.main_desktop_home_coupon_printer_text}>\r\n                            <u>\r\n\r\n                                {(language === 'english' || language === undefined) && <>Print The <br /> Coupon</>}\r\n                                {language === 'spanish' && <>{'<Spanish>'} Print The<br />Coupon</>}\r\n                            </u>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={styles.main_desktop_home_coupon_label} >\r\n                        {(language === 'english' || language === undefined) && 'Your Coupon'}\r\n                        {language === 'spanish' && '<Spanish> Your Coupon'}\r\n                    </div>\r\n                    <Coupon language={language} windowWidth={windowWidth} prescription={prescription} coupon={coupon} />\r\n                    <div className={styles.main_desktop_home_coupon_phone_text_container}>\r\n                        <input\r\n                            type=\"tel\"\r\n                            onFocus={clearInput}\r\n                            value={phoneNumber}\r\n                            onChange={getPhoneNumberEvent}\r\n                            className={styles.main_desktop_home_coupon_phone_input}\r\n                            placeholder='Type your phone number'\r\n                            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" />\r\n                        <div onClick={sendCouponAndPhoneNumber} className={styles.main_desktop_home_coupon_text_me}>\r\n                            <u>\r\n\r\n                                {(language === 'english' || language === undefined) && 'Text Me The Coupon'}\r\n                                {language === 'spanish' && '<Spanish> Text Me The Coupon'}\r\n                            </u>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={styles.main_desktop_home_coupon_container}>\r\n                    <Link href=\r\n                        {\r\n                            {\r\n                                pathname: '/',\r\n                                query: { language: language }\r\n                            }\r\n                        }\r\n                        as='/'\r\n                    ><a className={styles.main_desktop_home_coupon_new_search}>\r\n                            <u>\r\n                                {(language === 'english' || language === undefined) && 'New Search'}\r\n                                {language === 'spanish' && '<Spanish> New Search'}\r\n                            </u>\r\n                        </a>\r\n                    </Link>\r\n\r\n                    <div className={styles.main_desktop_home_coupon_label} >\r\n                        {(language === 'english' || language === undefined) && 'Your Coupon'}\r\n                        {language === 'spanish' && '<Spanish> Your Coupon'}\r\n                    </div>\r\n                    <div className={styles.desktop_coupon_component_store_info}>\r\n                        <b>\r\n                            {(language === 'english' || language === undefined) && 'Show this coupon at'}\r\n                            {language === 'spanish' && '<Spanish> Show this coupon at'}\r\n                        </b> {'Store'}, {'Store Address'}\r\n                    </div>\r\n\r\n                    <div className={styles.desktop_coupon_component_phone_number} >\r\n                        {(language === 'english' || language === undefined) && 'Questions? Give us a call at'}\r\n                        {language === 'spanish' && '<Spanish> Questions? Give us a call at'}\r\n                        <b>800.555.1212</b>\r\n                    </div>\r\n\r\n                    <Coupon language={language} windowWidth={windowWidth} prescription={prescription} coupon={coupon} />\r\n                    <div className={styles.main_desktop_home_coupon_phone_text_container}>\r\n                        <input\r\n                            type=\"tel\"\r\n                            onFocus={clearInput}\r\n                            value={phoneNumber}\r\n                            onChange={getPhoneNumberEvent}\r\n                            className={styles.main_desktop_home_coupon_phone_input}\r\n                            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" />\r\n                        <div onClick={sendCouponAndPhoneNumber} className={styles.main_desktop_home_coupon_text_me}>\r\n                            <u>\r\n                                {(language === 'english' || language === undefined) && 'Text Me The Coupon'}\r\n                                {language === 'spanish' && '<Spanish> Text Me The Coupon'}\r\n                            </u>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            } */}\r\n        </>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default CouponDetails;\r\n\r\nfunction sendPhobneNumberAndCoupon(arg0: { variables: { value: string; }; context: { clientName: string; }; }) {\r\n    throw new Error('Function not implemented.');\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport PrescriptionDetailedForm from '../../component/PrescriptionDetailedForm';\r\nimport { Link } from 'react-router-dom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//import styles from './../../../../../styles/FindPrescriptionHome.module.scss';\r\n\r\n/**\r\n * @context prescription\r\n * \r\n * uses \r\n * \r\n * @serviceApi prescription\r\n *  \r\n * \r\n * */\r\n\r\n\r\n\r\n/**\r\n * @Pages\r\n * \r\n * It does a search of the prescirption wanted by entering key words\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language // the languages selected English|Spanish\r\n * @param location //the location where to find the prescription\r\n * @param prescriptionFromRoute // the prescription passed in when using the route function\r\n * @useState getPrescriptionDetails // prescrition set from the setPrescriptionsDetails\r\n * @useState setPrescriptionDetails // sets the prescription chosen \r\n */\r\n\r\nexport default function FindPrescriptionHome({ language, location = undefined, prescriptionFromRoute, getPrescriptionDetails, setPrescriptionDetails }:any) {\r\n\r\n  /**@gets @sets the prescriptions array passed in from the mutation used for datalist */\r\n  const [prescriptionsforDataList, setPrescriptionsForDataList] = useState([]);\r\n\r\n  /**@gets @sets The prescriptionDetails to be passed in the Prescriptions Detail component */\r\n  const [prescriptionDetailsForPrescriptionDetailComponent, setPrescriptionDetailsForPrescriptionDetailComponent] = useState([]);\r\n\r\n  /** @gets @sets resets a flag to set prescritpionFromRoute to null */\r\n  const [resetDataFromRoute, setResetDataFromRoute] = useState(false);\r\n\r\n  /**@gets @sets the value from the input field */\r\n  const [valueForInputValue, setValueForInputValue] = useState(\"\");\r\n\r\n  /**@gets @sets the value from the input field */\r\n  const [ifPrescriptionDetailsExists, setIfPrescriptionDetailsExists] = useState((prescriptionFromRoute !== undefined ? true : false));\r\n\r\n\r\n\r\n \r\n  \r\n\r\n  /**\r\n   * Call to the service Prescription to retreve the prescriptionsfordatalist available\r\n   * @useState  setPrescriptionDetailsForPrescriptionDetailComponent\r\n   * @param setPrescriptionDetails // passed in from the function\r\n   * @useState\r\n   *  \r\n   */\r\n  // const [getPrescriptions, { loading: mutationLoading, error: mutationError },] = useMutation(GET_PRESCRIPTIONS, {\r\n  //   onError(err) {\r\n  //     console.log(err);\r\n  //     alert(err);\r\n  //   },\r\n  //   update(proxy, result) {\r\n  //     console.log('result',result);\r\n  //     if (result.data.prescription.code === 200) {\r\n  //       if (result.data.prescription.prescriptions.length === 1) {\r\n  //         setIfPrescriptionDetailsExists(true);\r\n  //         console.log('result.data', result.data.prescription.prescriptions);\r\n  //         //setPrescriptionDetailsForPrescriptionDetailComponent(result.data.prescription.prescriptions);\r\n  //         let data = {\r\n  //           search_name: result.data.prescription.prescriptions[0]._text,\r\n  //         }\r\n  //         setPrescriptionDetails(data);\r\n  //         return;\r\n  //       }\r\n  //       let options = [];\r\n  //       setPrescriptionsForDataList(result.data.prescription.prescriptions);\r\n  //     }\r\n  //     else{\r\n  //       alert(result.data.prescription.message);\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  /**\r\n   * It searches for the prescription comming from the input \r\n   * @param e \r\n   * @useState setValueForInputValue // sets the value on the input field\r\n   * @mutation getPrescriptions\r\n   * @context prescription // used for apollo.link curently baseUri\r\n   */\r\n  let clicked = 0;\r\n  const searchPrescription = (e:any) => {\r\n    e.preventDefault();\r\n    let value:any = prescriptionsforDataList.find((element:any) => e.target.value.trim() === element._text );\r\n    if(value !== undefined && value._text === e.target.value.trim())\r\n    {\r\n      console.log( 'inside test', value._text, value._text === e.target.value.trim() )\r\n      let data = {\r\n        search_name: value._text,\r\n      }\r\n      setIfPrescriptionDetailsExists(true);\r\n      setPrescriptionDetails(data);\r\n      \r\n    }  \r\n    else if (e.target.value.trim().length >= 3 )\r\n    {  \r\n      console.log('clicked',clicked++);     \r\n       //getPrescriptions({ variables: { prescription: e.target.value.trim() }, context: { clientName: 'prescriptions' } });\r\n    }\r\n    else{\r\n      console.log('minimum of 3 charaters');\r\n    }\r\n    setValueForInputValue(e.target.value.trim());\r\n\r\n  }\r\n  /**\r\n   * Resets the component to initial state \r\n   * @param e\r\n   * @useState setValueForInputValue\r\n   * @useState set_prescriptionDetails\r\n   * @useState setResetDataFromValue\r\n   */\r\n  const clearInput = (e:any) => {\r\n    setValueForInputValue(\"\");\r\n    setPrescriptionDetailsForPrescriptionDetailComponent([]);\r\n    setResetDataFromRoute(true);\r\n    setIfPrescriptionDetailsExists(false);\r\n  }\r\n\r\n  /**\r\n   * Use for when the prescription is passed in by the route\r\n   * @funciton setPrescriptionsDataFromRoute\r\n   */\r\n  useEffect(() => {\r\n\r\n    if (prescriptionFromRoute !== undefined) {\r\n      setPrescriptionsDataFromRoute();\r\n      setIfPrescriptionDetailsExists(true);\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Sets the Prescription been passed in by the route\r\n   * @param setPrescriptionDetails // useState passed in from the function\r\n   * @useState setValueForInputValue\r\n   * @mutation getPrescriptions  \r\n   */\r\n  const setPrescriptionsDataFromRoute = () => {\r\n    let value = JSON.parse(prescriptionFromRoute);\r\n\r\n    setPrescriptionDetails(value);\r\n    setValueForInputValue(value.search_name);\r\n    //getPrescriptions({ variables: { prescription: prescriptionFromRoute.search_name } });\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {/**\r\n       * refrencing version of: 1/28/2021\r\n       * source: https://github.com/emilynorton?tab=repositories\r\n       */}\r\n      {/* {mutationError && <>{console.log('m',mutationError)}</>}\r\n      {mutationLoading && < div className='circular_progress'>\r\n        <CircularProgress style={{ width: '6vmax', height: '6vmax' }} />\r\n      </div>} */}\r\n       \r\n      {resetDataFromRoute && (prescriptionFromRoute = undefined)}\r\n      {(language === 'english' || language === undefined) && <> <h3><span>Start Here: Step 1 of 3: </span>Your Prescription</h3></>}\r\n      {language === 'spanish' && <><h3><span>{'<Spanish>'} Start Here: Step 1 of 3: </span>Your Prescription</h3></>}\r\n\r\n\r\n      <form id=\"find_rx\" className=\"find_rx\">\r\n        {(language === 'english' || language === undefined) && <label htmlFor=\"find_rx\">Enter Drug Name</label>}\r\n        {language === 'spanish' && <label htmlFor=\"find_rx\">{'<Spanish>'}Enter Drug Name</label>}\r\n\r\n        <input\r\n          autoComplete=\"off\"\r\n          onFocus={clearInput}\r\n          placeholder=\"Type Drug Name\"\r\n          id='first_rx'\r\n          value={valueForInputValue}\r\n          type=\"text\"\r\n          list=\"prescriptions\"\r\n          onChange={searchPrescription}\r\n        />\r\n        <datalist\r\n          className=\"desktop-main-left-find-prescription-home-datalist\"\r\n          id=\"prescriptions\">\r\n         {prescriptionsforDataList.map((element:any,i) => <option key={`prescription${i}`} value={element._text} />)}\r\n        </datalist>\r\n        \r\n\r\n        {ifPrescriptionDetailsExists &&\r\n          <>\r\n            {console.log('ifPrescriptionDetailsExists',ifPrescriptionDetailsExists)}\r\n            <div style={{width:'inherit',height:'3vh'}} > </div>\r\n             {/* <PrescriptionDetailedForm language={language} dataFromServer={prescriptionDetailsForPrescriptionDetailComponent} prescriptionFromRoute={prescriptionFromRoute} setPrescriptionDetails={setPrescriptionDetails} /> */}\r\n            <div className=\"clickthrough\">\r\n              <a><div className=\"back cursor\" onClick={clearInput}>Start Over</div></a>\r\n              <Link className='cursor' to={                \r\n                  {\r\n                    pathname: '/src/components/Home',\r\n                    query: {\r\n                      component: 'location',\r\n                      prescriptions: JSON.stringify(getPrescriptionDetails),\r\n                      location: location,\r\n                      language: language\r\n                    }\r\n                  }                \r\n                }\r\n              > {(language === 'english' || language === undefined) && 'Next: Step2 >>'} {language === 'spanish' && '<Spanish>Next: Step2 >>'}\r\n              </Link>\r\n            </div>\r\n\r\n          </>}\r\n\r\n        {(!ifPrescriptionDetailsExists) && <section className=\"help\">\r\n          {(language === 'english' || language === undefined) &&\r\n            <>\r\n              <p>FirstRx is a free service. No login or account is needed.</p>\r\n\r\n              <ol>\r\n                <li>Enter Your Prescription information (Step 1)</li>\r\n                <li>Indicate your location (Step 2)</li>\r\n                <li>Pick a coupon from the pharmacy where you’d like to go. Pharmacies might have different prices but we’ll show show you the lowest priced pharmacies first. (Step 3)</li>\r\n              </ol>\r\n\r\n              <p>Then FirstRx will text you a coupon that you can show to the pharmacist.</p>\r\n            </>}\r\n          {(language === 'spanish') &&\r\n            <>\r\n              {'<Spanish>'}\r\n              <p>FirstRx is a free service. No login or account is needed.</p>\r\n\r\n              <ol>\r\n                <li>Enter Your Prescription information (Step 1)</li>\r\n                <li>Indicate your location (Step 2)</li>\r\n                <li>Pick a coupon from the pharmacy where you’d like to go. Pharmacies might have different prices but we’ll show show you the lowest priced pharmacies first. (Step 3)</li>\r\n              </ol>\r\n\r\n              <p>Then FirstRx will text you a coupon that you can show to the pharmacist.</p>\r\n            </>}\r\n\r\n        </section>}\r\n\r\n      </form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* \r\n        \r\n        used in version 1 with wire frames\r\n        // version 1 from wire frames\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n\r\n\r\n      {(language === 'english' || language === undefined) && <span className={styles.desktop_main_left_find_prescription_home_title} >Step 1: Your Prescription</span>}\r\n      {language === 'spanish'  && <span className={styles.desktop_main_left_find_prescription_home_title} >{'<Spanish>'} Step 1: Your Prescription</span>}\r\n       \r\n        <input \r\n        autoComplete=\"off\" \r\n        onFocus={clearInput} \r\n        placeholder=\"Type Drug Name\" \r\n        className={styles.desktop_main_left_find_prescription_home_input}\r\n        value={valueForInputValue} \r\n        type=\"text\" \r\n        list=\"prescriptionsfordatalist\" \r\n        onChange={searchPrescription} \r\n        id=\"prescription\" />\r\n        <datalist \r\n        className=\"desktop-main-left-find-prescription-home-datalist\" \r\n        id=\"prescriptions\">\r\n          {prescriptionsfordatalist}\r\n        </datalist>\r\n      \r\n      {prescriptionDetailsForPrescriptionDetailComponent.length === 1 &&\r\n        <>\r\n          <PrescriptionDetailedForm  language={language} dataFromServer={prescriptionDetailsForPrescriptionDetailComponent} prescriptionFromRoute={prescriptionFromRoute} setPrescriptionDetails={setPrescriptionDetails} />\r\n          <button className={`next-button ${styles.next_button_find_prescription}`} onClick={() => router.push\r\n            (\r\n              {\r\n                pathname: '/src/components/Home',\r\n                query: {\r\n                  component: 'location',\r\n                  prescriptions: JSON.stringify(getPrescriptionDetails),\r\n                  location: location,\r\n                  language:language\r\n                }\r\n              }\r\n            )\r\n          }> {(language === 'english' || language === undefined) && 'Next: Step2 >>'} {language === 'spanish'  && '<Spanish>Next: Step2 >>'} </button>\r\n          {mutationLoading && <p>Loading...</p>}\r\n          {mutationError && <p>Error :( Please try again</p>}\r\n        </>\r\n      } */}\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport FindPrescriptionHome from './FindPrescriptionHome';\r\nimport Location from './Location';\r\n\r\nimport ChooseYourCoupon from './ChooseYourCoupon';\r\nimport CouponDetails from './CouponDetails';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//import styles from './../../../../styles/Home.module.scss'; used for version 1\r\n\r\n/**\r\n * @Pages\r\n * \r\n * Home page\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories \r\n * \r\n * uses\r\n * \r\n * @pages ChooseYourCoupon\r\n * @pages FindPrescriptionHome\r\n * @pages Location\r\n * @pages CouponDetails\r\n * \r\n */\r\n\r\n const r ={\r\n    component:\"\",\r\n    prescriptions:\"\",\r\n    location:\"\",\r\n    coupon:\"\",\r\n    container:\"\",\r\n    language:\"\",\r\n}  ;\r\n\r\nconst Home = ({router = r }:any) => {\r\n    \r\n\r\n    const{\r\n            component,\r\n            prescriptions,\r\n            location,\r\n            coupon,\r\n            container,\r\n            language,\r\n    }  = router;\r\n\r\n\r\n    /**@gets @sets  sets the has path for reload page in order not to flicker beteween components */\r\n    const [routerHasPath, setRouterHasPath] = useState((router.asPath === '/' ? false : true));\r\n\r\n    let data = {\r\n        search_name: \"\",        \r\n    }\r\n\r\n    /**@gets @sets    sthe size of the window used in version 1*/\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n\r\n    /** @gets @sets prescription used when using the back button to pass the pescription*/\r\n    const [getPrescription, setPrescriptionUseState] = useState(data);\r\n\r\n    /**\r\n     * Used for responsive design for version 1 of wire frames \r\n     */\r\n    // const getSizes = () => {\r\n    //     setWindowWidth(window.innerWidth);\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     setWindowWidth(window.innerWidth);\r\n    //     window.addEventListener(\r\n    //         \"resize\", getSizes, false);\r\n\r\n    // });\r\n\r\n    const setPrescription = (value:any) => {\r\n\r\n        setPrescriptionUseState(value);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                /**\r\n                  * refrencing version of: 1/28/2021\r\n                  * source: https://github.com/emilynorton?tab=repositories\r\n                  */\r\n            }\r\n\r\n            <main>\r\n                <h2>Save on Prescriptions!</h2>\r\n\r\n                <section className={`stepped_process`}>\r\n\r\n                    \r\n                    {(container === undefined || container === '' || container === null) &&\r\n                        <>\r\n\r\n                            {/** first component when the page   loads*/}\r\n                            {((component === undefined || component === '' || component === null) && !routerHasPath) && <FindPrescriptionHome  language={language} prescriptionFromRoute={prescriptions} getPrescriptionDetails={getPrescription} setPrescriptionDetails={setPrescription} />}\r\n                            {component === 'choose-your-coupon' && < ChooseYourCoupon language={language} prescriptionFromRoute={prescriptions} location={location} />}\r\n                            {component === 'prescription' &&\r\n                                <FindPrescriptionHome\r\n                                    language={language}\r\n                                    location={location}\r\n                                    prescriptionFromRoute={prescriptions}\r\n                                    getPrescriptionDetails={getPrescription}\r\n                                    setPrescriptionDetails={setPrescription} />}\r\n\r\n\r\n                            {component === 'location' && <Location  language={language} prescriptionFromRoute={prescriptions} location={location} />}\r\n\r\n                        </>}\r\n                    {container === 'coupon' && <CouponDetails language={language} windowWidth={windowWidth} prescription={prescriptions} coupon={coupon} />}\r\n\r\n                </section>\r\n\r\n            </main>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* \r\n            \r\n                  // version 1 from wire frames\r\n                  // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n                  // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n                  // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n   \r\n            \r\n                {(windowWidth <= 550 && container === 'coupon') &&                  \r\n                <CouponDetails language={language} windowWidth={windowWidth} prescription={prescriptions} coupon={coupon} />\r\n            \r\n            }\r\n            { (windowWidth > 1440 || (windowWidth <= 550 && container !== 'coupon' )) &&\r\n                 <>    \r\n                     <div className={styles.main_desktop_container}>\r\n                     {(language === 'english' ||  language === undefined) && <> <div className={styles.main_desktop_title}>Check here <b>First</b> for your <b>Rx</b> savings!</div></>}\r\n                     {language === 'spanish' &&   <><div className={styles.main_desktop_title}> Spanish  <b>Spanish</b> for your <b>Rx</b> Spanish!</div></>}\r\n                      \r\n                        <div className={styles.main_desktop_sides_container}>\r\n                            {(container === undefined || container === '' || container === null) &&\r\n                                <div className={styles.main_desktop_sides_inner_container}>\r\n                                    <span className={styles.main_desktop_side_left}>\r\n                                        {component === 'choose-your-coupon' && < ChooseYourCoupon language={language} prescriptionFromRoute={prescriptions} location={location} />}\r\n                                        {component === 'prescription' &&\r\n                                            <FindPrescriptionHome\r\n                                                language={language}\r\n                                                location={location}\r\n                                                prescriptionFromRoute={prescriptions}\r\n                                                getPrescriptionDetails={getPrescription}\r\n                                                setPrescriptionDetails={setPrescription} />}\r\n                                         \r\n                                         \r\n                                        {component === 'location' && <Location language={language} prescriptionFromRoute={prescriptions} location={location} />}\r\n                                        {(component === undefined || component === '' || component === null) && <FindPrescriptionHome language={language} prescriptionFromRoute={prescriptions} getPrescriptionDetails={getPrescription} setPrescriptionDetails={setPrescription} />}\r\n\r\n\r\n                                    </span>\r\n\r\n                                    {windowWidth > 550 && <span className={styles.main_desktop_side_right}></span>}\r\n                                </div>\r\n                            }\r\n                            {container === 'coupon' && <CouponDetails language={language} windowWidth={windowWidth} prescription={prescriptions} coupon={coupon} />}\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.main_desktop_bottom_container}>\r\n                    { (language === 'english' ||  language === undefined) &&    <span className={styles.main_desktop_bottom_text}>This is an easy and simple process to get big savings. Find the lowest price at a\r\n                    pharmacy near you. Get texted a coupon. Bring to your pharmacist. Save $.</span>}\r\n                    {language === 'spanish' &&    <span className={styles.main_desktop_bottom_text}>{'<<Spanish>>'} This is an easy and simple process to get big savings. Find the lowest price at a\r\n                    pharmacy near you. Get texted a coupon. Bring to your pharmacist. Save $.</span>}\r\n                    \r\n                    </div>\r\n                </>}\r\n            { (windowWidth > 550 && windowWidth <= 1440 ) &&\r\n                 <>    \r\n                     \r\n                     {(language === 'english' ||  language === undefined) &&   <><div className={styles.main_desktop_title}>Check here <b>First</b> for your <b>Rx</b> savings!</div></>}\r\n                     {language === 'spanish' &&   <><div className={styles.main_desktop_title}> Spanish  <b>Spanish</b> for your <b>Rx</b> Spanish!</div></> }\r\n                     \r\n                        <div className={styles.main_desktop_sides_container}>\r\n                        {(container === undefined || container === '' || container === null) &&\r\n                                <div className={styles.main_desktop_sides_inner_container}>\r\n                                    <span className={styles.main_desktop_side_left}>\r\n                                        {component === 'choose-your-coupon' && < ChooseYourCoupon language={language} prescriptionFromRoute={prescriptions} location={location} />}\r\n                                        {component === 'prescription' &&\r\n                                            <FindPrescriptionHome\r\n                                                language={language}\r\n                                                location={location}\r\n                                                prescriptionFromRoute={prescriptions}\r\n                                                getPrescriptionDetails={getPrescription}\r\n                                                setPrescriptionDetails={setPrescription} />}\r\n\r\n                                        {component === 'location' && <Location language={language} prescriptionFromRoute={prescriptions} location={location} />}\r\n                                        {(component === undefined || component === '' || component === null) && <FindPrescriptionHome  language={language} prescriptionFromRoute={prescriptions} getPrescriptionDetails={getPrescription} setPrescriptionDetails={setPrescription} />}\r\n\r\n\r\n                                    </span>\r\n\r\n                                    {windowWidth > 550 && <span className={styles.main_desktop_side_right}></span>}\r\n                                </div>\r\n                            }\r\n                            {container === 'coupon' && <CouponDetails language={language} windowWidth={windowWidth} prescription={prescriptions} coupon={coupon} />}\r\n                        </div>\r\n                    \r\n                    <div className={styles.main_desktop_bottom_container}>\r\n                    {(language === 'english' ||  language === undefined) &&    <span className={styles.main_desktop_bottom_text}>This is an easy and simple process to get big savings. Find the lowest price at a\r\n                    pharmacy near you. Get texted a coupon. Bring to your pharmacist. Save $.</span>}\r\n                    {language === 'spanish' &&    <span className={styles.main_desktop_bottom_text}>{'<<Spanish>>'} This is an easy and simple process to get big savings. Find the lowest price at a\r\n                    pharmacy near you. Get texted a coupon. Bring to your pharmacist. Save $.</span>}\r\n                    </div>\r\n                </>} \r\n                </main> */}\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport async function getStaticProps() {\r\n\r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n        props: {\r\n            render: {},\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport Route from \"react-router-dom/Route\";\r\nimport Switch from \"react-router-dom/Switch\";\r\nimport Redirect from \"react-router-dom/Redirect\";\r\nimport './fonts/MyriadProRegular.otf';\r\n\r\nimport Notfound from \"./components/notfound/notfound\";\r\nimport RoleManagementComponent from './roles';\r\nimport LoginComponent from './components/login';\r\nimport UserManagementComponent from \"./users\";\r\nimport ResetPassword from \"./resetpassword\";\r\nimport ClaimProcessingCenterComponent from './Claims/claimsprocessingcenter';\r\n\r\nimport DashboardComponent from \"./dashboard\";\r\nimport PlayerSupport from \"./Player/Home\";\r\nimport PlayerReports from \"./Player/Reports/Home\";\r\nimport PlayerReportTable from \"./playerreporttable\";\r\nimport PlayerReportsCustom from \"./playerreportscustom\";\r\nimport ClaimSupportComponent from \"./Claims/claimsupport\";\r\nimport ClaimReportsQueriesComponent from \"./Claims/claimreportsqueries\";\r\nimport RejectClaimComponent from \"./Claims/rejectedClaim\";\r\nimport ClaimUpdateComponent from \"./Claims/claimupdate\";\r\nimport ClaimResearchComponent from \"./Claims/claimresearch\";\r\n\r\n\r\nimport ClaimDetailsEditableComponent from \"./Claims/claimdetailseditable\";\r\nimport ClaimDetailsReadOnlyComponent from \"./Claims/claimdetailsreadonly\";\r\nimport ClaimReportsComponent from \"./Claims/claimreports\";\r\nimport ClaimReportsCustomComponent from \"./Claims/claimreportscustom\";\r\nimport ClaimDetailsComponent from \"./Claims/claimDetails\";\r\nimport ClaimPaymentHistoryComponent from \"./Claims/claimPaymentHistory\";\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SystemDashboardComponent from \"./systemdashboard\";\r\nimport SystemStatsComponent from \"./systemstats\";\r\nimport SystemDetailsComponent from \"./systemdetails\";\r\nimport ComingSoonComponent from \"./Misc/ComingSoon\";\r\nimport PlayerSearchGenericComponent from \"./Player/Search\";\r\nimport PlayerHubComponent from \"./Player/Hub\";\r\nimport ActionAuditComponent from \"./users/ActionAudit\";\r\nimport SecurityHomeComponent from \"./SecurityHome\";\r\nimport FrequentCasherComponent from \"./FrequentCasher\";\r\nimport MFAComponent from \"./components/login/MFA\";\r\nimport MFAPolicyComponent from \"./Admin/MFAPolicy\";\r\nimport SettingsHubComponent from \"./Admin/Settings/Hub\";\r\nimport FinanceComponent from \"./Finance\";\r\nimport ACHActivityComponent from \"./Finance/ACHActivity\";\r\nimport ACHActivityBatchDetailComponent from \"./Finance/ACHActivityBatchDetail\";\r\nimport ACHActivityRejectDetailComponent from \"./Finance/ACHActivityRejectDetail\";\r\nimport DailyReconciliationReportComponent from \"./Finance/DailyReconciliationReport\";\r\nimport Location  from \"./pages/src/components/Home/Location\";\r\nimport ChooseYourCoupon  from \"./pages/src/components/Home/ChooseYourCoupon\";\r\nimport CouponDetails  from \"./pages/src/components/Home/CouponDetails\";\r\nimport FindPrescriptionHome  from \"./pages/src/components/Home/FindPrescriptionHome\";\r\nimport Home  from \"./pages/src/components/Home\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n        const authed = localStorage.getItem('userName');\r\n        let  enviroment = <Route\r\n        {...rest}\r\n        \r\n        render={(props) => authed\r\n            ? <Component {...props} />\r\n            : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n    />;  \r\n      \r\n    return ( enviroment )\r\n}\r\nconst Routes = props => (\r\n    <Switch>\r\n            {/* <Route exact path=\"/\" component={LoginComponent} /> */}\r\n            <Route exact path=\"/\" >\r\n                <Home />\r\n            </Route>\r\n            <Route path=\"/src/components/\" >\r\n               <FindPrescriptionHome  language ={undefined} location = {undefined} prescriptionFromRoute={\"\"} getPrescriptionDetails={\"\"} setPrescriptionDetails={\"\"} />\r\n            </Route>\r\n            <Route exact path=\"/login\" component={LoginComponent} />\r\n            <PrivateRoute path=\"/usermanagement\" component={(props) => <UserManagementComponent title=\"User Management\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/rolemanagement\" component={(props) => <RoleManagementComponent title=\"Role Management\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path='/dashboard' component={(props) => <DashboardComponent title=\"Home\" showBackButton={false} {...props}/>} />\r\n            <PrivateRoute path=\"/playersupport\" component={(props) => <PlayerSupport title=\"Player Support\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/playerreports/table\" component={(props) => <PlayerReportTable title=\"Player Reports - Table\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/playerreports/customtable\" component={(props) => <PlayerReportTable title=\"Player Reports - Custom\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/playerreports/locked\" component={(props) => <PlayerReportTable title=\"Player Reports - Locked Accounts\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/playerreports/idfailed\" component={(props) => <PlayerReportTable title=\"Player Reports - Failed Identity Verification\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/playerreports/noidcheck\" component={(props) => <PlayerReportTable title=\"Player Reports - Incomplete Player Registration\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/playerreports/custom\" component={(props) => <PlayerReportsCustom title=\"Player Reports - Custom\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/playerreports\" component={(props) => <PlayerReports title=\"Player Reports\" {...props} showBackButton={true} />} />\r\n            <Route path=\"/setpassword/:token/:username\" component={ResetPassword} />\r\n            <PrivateRoute path=\"/setpassword/:token/:username\" component={ResetPassword} />\r\n\r\n            <PrivateRoute path=\"/user/audit/:id\" component={(props) => <ActionAuditComponent {...props} showBackButton={true} />} />\r\n\r\n            {/*Player Routes*/}\r\n            <PrivateRoute path=\"/player/search\" component={(props) => <PlayerSearchGenericComponent title=\"Player Search\" {...props} showBackButton={true} />} />\r\n\r\n            {/*Claim Routes*/}\r\n            <PrivateRoute path=\"/claimsupport\" component={(props) => <ClaimSupportComponent title=\"Claim Support\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/research\" component={(props) => <ClaimResearchComponent title=\"Claim Search - View\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/edit/:id\" component={(props) => <ClaimDetailsEditableComponent title=\"Update Claim\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/view/:id\" component={(props) => <ClaimDetailsReadOnlyComponent title=\"Claim Details\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/process\" component={(props) => <ClaimProcessingCenterComponent title=\"Claim Processing Center\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/search/reportsandqueries\" component={(props) => <ClaimReportsQueriesComponent title=\"Claim Reports/Queries\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/reject\" component={(props) => <RejectClaimComponent title=\"Rejected Claims\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/check\" component={(props) => <RejectClaimComponent title=\"Claims Check Request\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/update\" component={(props) => <ClaimUpdateComponent title=\"Claim Search - Update\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/reports\" component={(props) => <ClaimReportsComponent title=\"Claim Reports\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/reports/custom\" component={(props) => <ClaimReportsCustomComponent title=\"Claim Reports - Custom\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/:id/paymenthistory\" component={(props) => <ClaimPaymentHistoryComponent title=\"Transaction History\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/claim/:id\" component={(props) => <ClaimDetailsComponent title=\"Claim Details\" {...props} showBackButton={true} />} />\r\n\r\n            {/*System Support Routes*/}\r\n            <PrivateRoute path=\"/system/dashboard\" component={(props) => <SystemDashboardComponent title=\"System Dashboard\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/system/stats\" component={(props) => <SystemStatsComponent title=\"System Stats\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/system/details\" component={(props) => <SystemDetailsComponent title=\"System Details\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/player/hub\" component={(props) => <PlayerHubComponent{...props} showBackButton={true} />} />\r\n\r\n            {/*Security Home page*/}\r\n            <PrivateRoute path=\"/security/home\" component={(props) => <SecurityHomeComponent title=\"Security\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/security/frequentcasher\" component={(props) => <FrequentCasherComponent title=\"Frequent Casher\" {...props} showBackButton={true} />} />\r\n\r\n            {/*Settings*/}\r\n            <PrivateRoute path=\"/admin/settings/mfa\" component={(props) => <MFAPolicyComponent title=\"Multi-Factor Auth Bypass Rules\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/admin/settings\" component={(props) => <SettingsHubComponent title=\"Settings\" {...props} showBackButton={true} />} />\r\n            <PrivateRoute path=\"/login/mfa\" component={MFAComponent} />\r\n\r\n            {/*Finance*/}\r\n            <PrivateRoute path=\"/finance/claims/dailyreconciliation\" component={(props) => <DailyReconciliationReportComponent title=\"Mobile Claims Daily Reconciliation Report\" {...props} showBackButton={true} />} />} />\r\n            <PrivateRoute path=\"/finance/claims/reject/details\" component={(props) => <ACHActivityRejectDetailComponent title=\"Reject Details\" {...props} showBackButton={true} />} />} />\r\n            <PrivateRoute path=\"/finance/claims/batch/details\" component={(props) => <ACHActivityBatchDetailComponent title=\"Batch Details\" {...props} showBackButton={true} />} />} />\r\n            <PrivateRoute path=\"/finance/claims/transactions\" component={(props) => <ACHActivityComponent title=\"ACH Activity\" {...props} showBackButton={true} />} />} />\r\n            <PrivateRoute path=\"/finance\" component={(props) => <FinanceComponent title=\"Finance/Payments\" {...props} showBackButton={true} />} />} />\r\n\r\n            {/*Misc*/}\r\n            <PrivateRoute path=\"/comingsoon\" component={(props) => <ComingSoonComponent {...props} showBackButton={true} />} />\r\n            <PrivateRoute component={Notfound} />\r\n\r\n    </Switch>\r\n);\r\n\r\nexport default Routes\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. login is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {action, observable} from 'mobx';\r\nimport config from \"../config\";\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport moment from \"moment\";\r\nimport {toJS} from \"mobx\";\r\nimport {timeOfDayFormat} from \"../constants.js\";\r\n\r\n\r\nexport class PlayerStore {\r\n\r\n    rootStore = null;\r\n    authStore = null;\r\n\r\n    @observable isLoading = false;\r\n    @observable showToast = false;\r\n    @observable selectedPlayerDetails = null;\r\n    @observable selectedPlayerID = null;\r\n    @observable tableHeader = null;\r\n    @observable tableRows = null;\r\n    @observable ticketHistoryTableHeader = null;\r\n    @observable ticketHistoryTableRows = null;\r\n    @observable eventHistoryTableHeader = null;\r\n    @observable eventHistoryTableRows = null;\r\n    @observable errorMessage = null;\r\n    @observable successMessage = null;\r\n    @observable titleText = null;\r\n    @observable showUpdateModal = false;\r\n    @observable showConfirmEmailModal = false;\r\n    @observable showPlayerVerifyModal = false;\r\n    @observable showPlayerLockUnlockModal = false;\r\n    @observable showPlayerEnableDisableModal = false;\r\n    @observable showFrequentCasherConfirmModal = false;\r\n\r\n    // Back-office user audit\r\n    @observable selectedBackofficeUserID = null;\r\n    @observable selectedBackofficeUserFullName = null;\r\n    @observable selectedBackofficeUserName = null;\r\n    @observable AuditActionsTableHeader = null;\r\n    @observable AuditActionsTableRows = null;\r\n    @observable UserNameTitleText = null;\r\n\r\n    //\r\n    @observable loggedInUserID = null;\r\n\r\n    @observable showTicketHistoryToast = false;\r\n    @observable TicketHistoryAPIResult = null;\r\n    @observable TicketHistoryFilteredResult = null;\r\n    @observable selectedGameType = null;\r\n    @observable allGameTypes = [];\r\n    @observable selectedWinStatus = null;\r\n    @observable allWinStatuses = [];\r\n    @observable selectedStatus = null;\r\n    @observable allStatuses = [];\r\n    @observable isTicketHistoryInSearchMode = false;\r\n    @observable showEventHistoryToast = false;\r\n    @observable isEventHistoryInSearchMode = false;\r\n\r\n    @observable EventHistoryAPIResult = null;\r\n    @observable EventHistoryFilteredResult = null;\r\n    @observable selectedDeviceType = null;\r\n    @observable allDeviceTypes = [];\r\n    @observable selectedEvent = null;\r\n    @observable allEvents = [];\r\n\r\n    // Auth Layout\r\n    @observable showMainToast = false;\r\n    @observable mainErrorMessage = '';\r\n    @observable mainSuccessMessage = '';\r\n\r\n    // Player Hub\r\n    @observable playerHubNavigateToFirstTab = false;\r\n\r\n    // Claims\r\n    @observable claimHistoryTableHeader = null;\r\n    @observable claimHistoryTableRows = null;\r\n    @observable selectedClaimId = null;\r\n    @observable selectedClaimStatus = null;\r\n    @observable claimDetails = null;\r\n    @observable paymentHistoryData = null;\r\n    @observable paymentDetails = null;\r\n    @observable eSignatureURL = null;\r\n\r\n    @observable selectedTabKey = 'Player Details';\r\n\r\n    //  Spinner State\r\n    @observable isSpinnerLoading = false;\r\n\r\n    @observable toggle = false;\r\n\r\n    setToggle(toggle) {\r\n        this.toggle = toggle;        \r\n    }\r\n\r\n    @action setToastErrorSuccessMessage(showToast, errorMessage, successMessage) {\r\n        this.showMainToast = showToast;\r\n        this.mainErrorMessage = errorMessage;\r\n        this.mainSuccessMessage = successMessage;\r\n    }\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.authStore = this.rootStore.authStore;\r\n    }\r\n\r\n    @action clear() {\r\n        this.isLoading = false;\r\n    }\r\n\r\n    clearPlayerSearchResults() {\r\n        this.tableHeader = null;\r\n        this.tableRows = null;\r\n    }\r\n\r\n    clearTicketHistorySearchResults() {\r\n        this.selectedGameType = 'All';\r\n        this.selectedWinStatus = 'All';\r\n        this.selectedStatus = 'All';\r\n        this.ticketHistoryTableHeader = null;\r\n        this.ticketHistoryTableRows = null;\r\n    }\r\n\r\n    clearEventHistorySearchResults() {\r\n        this.selectedDeviceType = 'All';\r\n        this.selectedEvent = 'All';\r\n        this.eventHistoryTableHeader = null;\r\n        this.eventHistoryTableRows = null;\r\n    }\r\n\r\n    clearUserAuditActionSearchResults() {\r\n        this.AuditActionsTableHeader = null;\r\n        this.AuditActionsTableRows = null;\r\n    }\r\n\r\n    updateUserDetails(value, param) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity, account} = _selectedPlayerDetails;\r\n        identity[param] = value;\r\n        this.selectedPlayerDetails = _selectedPlayerDetails;\r\n    }\r\n\r\n    updateUserEmail(value, param) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {account} = _selectedPlayerDetails;\r\n        account[param] = value;\r\n        this.selectedPlayerDetails = _selectedPlayerDetails;\r\n    }\r\n\r\n    updatePlayerDateOfBirth(newDateOfBirth) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        identity['dateOfBirth'] = newDateOfBirth;\r\n        this.selectedPlayerDetails = _selectedPlayerDetails;\r\n    }\r\n\r\n    // API call to fetch player details\r\n    @action getPlayerDetails(playerId='') {\r\n        const id = playerId || this.selectedPlayerID;\r\n        this.isSpinnerLoading = true;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/player/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.isSpinnerLoading = false;\r\n                if(playerId) {\r\n                    if (res && res.message) {\r\n                        this.setToastErrorSuccessMessage(true, res.message, null);\r\n                    } else {\r\n                        const row = res.identity || {};\r\n                        if(!res.identity) {\r\n                            row.firstName = '';\r\n                            row.lastName = '';\r\n                            row.address = '';\r\n                        }\r\n                        row.playerId = res.account && res.account.id ? res.account.id: '';\r\n                        row.email = res.account && res.account.email ? res.account.email : '';\r\n                        this.tableHeader = [\r\n                            {key: 'email', label: 'Email'},\r\n                            {key: 'firstName', label: 'First Name'},\r\n                            {key: 'lastName', label: 'Last Name'},\r\n                            {key: 'address', label: 'Address', width: '30%'},\r\n                            {key: 'select', label: 'Select'}\r\n                        ];\r\n                        this.tableRows = [row];\r\n                    }\r\n                } else {\r\n                    if (res && res.error) {\r\n                        this.errorMessage = res.error;\r\n                    } else {\r\n                        if(!res.hasOwnProperty('identity') || !res.identity) {\r\n                           res.identity = {\r\n                               \"id\": '',\r\n                               \"playerId\": res.account && res.account.id ? res.account.id: '',\r\n                               \"identityFingerprint\": \"\",\r\n                               \"firstName\": \"\",\r\n                               \"lastName\": \"\",\r\n                               \"gender\": \"\",\r\n                               \"ssn\": \"\",\r\n                               \"dateOfBirth\": \"\",\r\n                               \"address1\": \"\",\r\n                               \"address2\": \"\",\r\n                               \"city\": \"\",\r\n                               \"state\": \"\",\r\n                               \"zip5\": \"\",\r\n                               \"phone\": \"\",\r\n                               \"acceptedEmailCommunication\": false,\r\n                               \"acceptedSmsCommunication\": false,\r\n                               \"termsAcceptedDate\": \"\",\r\n                               \"activeFrom\": \"\",\r\n                               \"activeTo\": null,\r\n                               \"identityCheckResult\": \"\",\r\n                               \"identityCheckSource\": \"\",\r\n                               \"identityCheckNotes\": \"\",\r\n                               \"identitySource\": \"\",\r\n                               \"identityCheckRequestId\": \"\",\r\n                               \"identityServiceTermsAcceptedDate\": \"\",\r\n                               \"status\": \"\"\r\n                           }\r\n                        }\r\n                        res.identity.phone = res.identity.phone.substring(2);\r\n                        res.identity.dateOfBirth = res.identity.dateOfBirth ? moment(res.identity.dateOfBirth).format('MM/DD/YYYY') : '';\r\n                        this.selectedPlayerDetails = res;\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                this.isSpinnerLoading = false;\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action searchPlayers(queryParams) {\r\n        this.isLoading = true;\r\n        this.isSpinnerLoading = true;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/player/search${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.data) {\r\n                    this.setPlayerData(res.data);\r\n                    const errorMessage = res.data.length <= 0 ? 'No Results Matching Criteria Have Been Found' : null;\r\n                    const showToast = res.data.length <= 0 ? true : false;\r\n                    this.setToastErrorSuccessMessage(showToast, null, errorMessage)\r\n                } else if (res && res.error) {\r\n                    this.setPlayerData(res.data);\r\n                    const errorMessage = res.error;\r\n                    const showToast = true;\r\n                    this.setToastErrorSuccessMessage(showToast, errorMessage, null)\r\n                }\r\n                this.isSpinnerLoading = false;\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n                this.isSpinnerLoading = false;\r\n                // this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    setTicketHistorySearchMode(flag) {\r\n        this.isTicketHistoryInSearchMode = flag;\r\n    }\r\n\r\n    // API call to fetch tickets associated with a player\r\n    @action searchTickets(queryParams) {\r\n        const id = this.selectedPlayerID;\r\n        this.isLoading = true;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/player/${id}/ticket-scanner-events${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    //this.showResetPasswordModal = false;\r\n                    //this.showTicketHistoryToast = true;\r\n                    this.showToast = true;\r\n                } else if (res && res.data) {\r\n                    if (res.data.length > 0) {\r\n                        this.setTicketHistoryData(res.data);\r\n                        this.setTicketHistorySearchMode(false)\r\n                        let allGameTypes = this.getAllGameTypesFromTicketHistoryResult();\r\n                        let allWinStatuses = this.getAllWinStatusesFromTicketHistoryResult();\r\n                        let allStatuses = this.getAllStatusesFromTicketHistoryResult();\r\n                        this.setTicketHistoryFilters(allGameTypes, allWinStatuses, allStatuses)\r\n                    } else {\r\n                        this.setTicketHistorySearchMode(true)\r\n                        this.successMessage = 'No Results Matching the Criteria have been Found.';\r\n                        this.errorMessage = null;\r\n                        //this.showResetPasswordModal = false;\r\n                        //this.showTicketHistoryToast = true;\r\n                        this.showToast = true;\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    setEventHistorySearchMode(flag) {\r\n        this.isEventHistoryInSearchMode = flag;\r\n    }\r\n\r\n    @action searchEvents(queryParams) {\r\n        const id = this.selectedPlayerID;\r\n        this.isLoading = true;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/player/${id}/player-events${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    //this.showResetPasswordModal = false;\r\n                    //this.showEventHistoryToast = true;\r\n                    this.showToast = true;\r\n                } else if (res && res.data) {\r\n                    if (res.data.length > 0) {\r\n                        this.setEventHistoryData(res.data);\r\n                        this.setEventHistorySearchMode(false)\r\n                        let allDeviceTypes = this.getAllDeviceTypesFromEventHistoryResult();\r\n                        let allEvents = this.getAllEventTypesFromEventHistoryResult();\r\n                        this.setEventHistoryFilters(allDeviceTypes, allEvents)\r\n                    } else {\r\n                        this.setEventHistorySearchMode(true)\r\n                        this.successMessage = 'No Results Matching the Criteria have been Found.';\r\n                        this.errorMessage = null;\r\n                        //this.showResetPasswordModal = false;\r\n                        //this.showEventHistoryToast = true;\r\n                        this.showToast = true;\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action searchUserAuditActions(queryParams) {\r\n        const id = this.selectedBackofficeUserID;\r\n        this.isLoading = true;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/user/${id}/auditactions${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n\r\n                if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    //this.showResetPasswordModal = false;\r\n                    this.showToast = true;\r\n                } else if (res) {\r\n                    if (res.length > 0) {\r\n                        this.setUserAuditActionsData(res);\r\n                    } else {\r\n                        this.successMessage = 'No Results Matching the Criteria have been Found.';\r\n                        this.errorMessage = null;\r\n                        //this.showResetPasswordModal = false;\r\n                        this.showToast = true;\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action updatePlayer(isFlag = false) {\r\n\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity, account} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        this.isLoading = true;\r\n        const playerData = {\r\n            firstName: identity.hasOwnProperty('firstName') && identity['firstName'] ? identity['firstName'].trim() : '',\r\n            lastName: identity.hasOwnProperty('lastName') && identity['lastName'] ? identity['lastName'].trim() : '',\r\n            email: account.hasOwnProperty('email') && account['email'] ? account['email'].trim() : '',\r\n            address1: identity.hasOwnProperty('address1') && identity['address1'] ? identity['address1'].trim() : '',\r\n            address2: identity.hasOwnProperty('address2') && identity['address2'] ? identity['address2'].trim() : '',\r\n            city: identity.hasOwnProperty('city') && identity['city'] ? identity['city'].trim() : '',\r\n            state: identity.hasOwnProperty('state') && identity['state'] ? identity['state'] : '',\r\n            zip5: identity.hasOwnProperty('zip5') && identity['zip5'] ? identity['zip5'].trim() : '',\r\n            phone: identity.hasOwnProperty('phone') && identity['phone'] ? identity['phone'].trim() : '',\r\n            gender: identity.hasOwnProperty('gender') && identity['gender'] ? identity['gender'] : '',\r\n            dateOfBirth: identity.hasOwnProperty('dateOfBirth') && identity['dateOfBirth'] ? identity['dateOfBirth'] : '',\r\n            ssn: identity.hasOwnProperty('ssn') && identity['ssn'] ? identity['ssn'].trim() : ''\r\n        }\r\n\r\n        // Do not update SSN if its just last 4 digits that originally came from API response\r\n        if (identity.hasOwnProperty('ssn') && identity['ssn'] && identity['ssn'].trim().startsWith(\"***-**\")) {\r\n            delete playerData.ssn;\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/player/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(playerData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showUpdateModal = false;\r\n                    this.showToast = true;\r\n                    this.playerHubNavigateToFirstTab = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showUpdateModal = false;\r\n                    this.showToast = true;\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action updateSSNAndVerifyPlayer(identification1, identification2, comment1, comment2) {\r\n\r\n\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity, account} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        this.isLoading = true;\r\n        const playerData = {\r\n            ssn: identity['ssn'].trim()\r\n        }\r\n\r\n        // Do not update SSN if its just last 4 digits that originally came from API response\r\n        if (identity['ssn'].trim().startsWith(\"***-**\")) {\r\n            delete playerData.ssn;\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/player/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(playerData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n\r\n                if (res && res.message) {\r\n                    //this.successMessage = res.message;\r\n                    //this.errorMessage = null;\r\n                    //this.showUpdateModal = false;\r\n                    //this.showToast = true;\r\n                    //this.playerHubNavigateToFirstTab = true;\r\n                    this.verifyPlayer(identification1, identification2, comment1, comment2);\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showUpdateModal = false;\r\n                    this.showToast = true;\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    setPlayerData(data) {\r\n        if (data) {\r\n            const rows = Object.values(data).map(d => d);\r\n            this.tableHeader = [\r\n                {key: 'email', label: 'Email'},\r\n                {key: 'firstName', label: 'First Name'},\r\n                {key: 'lastName', label: 'Last Name'},\r\n                {key: 'address', label: 'Address', width: '30%'},\r\n                {key: 'select', label: 'Select'}\r\n            ];\r\n            this.tableRows = rows;\r\n        } else {\r\n            this.tableHeader = [];\r\n            this.tableRows = [];\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    setTicketHistoryData(data) {\r\n        if (data) {\r\n            this.TicketHistoryAPIResult = data;\r\n            const rows = Object.values(data).map(d => d);\r\n            this.ticketHistoryTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'gameType', label: 'Game'},\r\n                {key: 'winStatus', label: 'Win Status'},\r\n                {key: 'amount', label: 'Amount'},\r\n                {key: 'status', label: 'Approval Status'},\r\n                {key: 'computedStatus', label: 'Ticket Status'},\r\n                {key: 'rejectReason', label: 'Reason', width: '12%'},\r\n                {key: 'barcode', label: 'Barcode'}\r\n            ];\r\n            rows.forEach(element => element.requestTimestamp = moment(element.requestTimestamp).format());\r\n            this.ticketHistoryTableRows = rows;\r\n        } else {\r\n            this.ticketHistoryTableHeader = [];\r\n            this.ticketHistoryTableRows = [];\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    setTicketHistoryFilteredData(data) {\r\n        if (data) {\r\n            this.TicketHistoryFilteredResult = data;\r\n            const rows = Object.values(data).map(d => d);\r\n            this.ticketHistoryTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'gameType', label: 'Game'},\r\n                {key: 'winStatus', label: 'Win Status'},\r\n                {key: 'amount', label: 'Amount'},\r\n                {key: 'status', label: 'Approval Status'},\r\n                {key: 'computedStatus', label: 'Ticket Status'},\r\n                {key: 'rejectReason', label: 'Reason'},\r\n                {key: 'barcode', label: 'Barcode'}\r\n            ];\r\n            this.ticketHistoryTableRows = rows;\r\n        } else {\r\n            this.ticketHistoryTableHeader = [];\r\n            this.ticketHistoryTableRows = [];\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    setTicketHistoryFilters(allGameTypes, allWinStatuses, allStatuses) {\r\n        this.allGameTypes = allGameTypes;\r\n        this.allWinStatuses = allWinStatuses;\r\n        this.allStatuses = allStatuses;\r\n    }\r\n\r\n    setEventHistoryData(data) {\r\n        if (data) {\r\n            this.EventHistoryAPIResult = data;\r\n            const rows = Object.values(data).map(d => d);\r\n            this.eventHistoryTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'clientOs', label: 'Device Type'},\r\n                {key: 'authEvent', label: 'Event'}\r\n            ];\r\n            rows.forEach(element => element.eventTimestamp = moment(element.eventTimestamp).format());\r\n            this.eventHistoryTableRows = rows;\r\n        } else {\r\n            this.eventHistoryTableHeader = [];\r\n            this.eventHistoryTableRows = [];\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    setEventHistoryFilteredData(data) {\r\n        if (data) {\r\n            this.EventHistoryFilteredResult = data;\r\n            const rows = Object.values(data).map(d => d);\r\n            this.eventHistoryTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'clientOs', label: 'Device Type'},\r\n                {key: 'authEvent', label: 'Event'}\r\n            ];\r\n            this.eventHistoryTableRows = rows;\r\n        } else {\r\n            this.eventHistoryTableHeader = [];\r\n            this.eventHistoryTableRows = [];\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    setEventHistoryFilters(allDeviceTypes, allEvents) {\r\n        this.allDeviceTypes = allDeviceTypes;\r\n        this.allEvents = allEvents;\r\n    }\r\n\r\n    setUserAuditActionsData(data) {\r\n        if (data) {\r\n            const rows = Object.values(data).map(d => d);\r\n            this.AuditActionsTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'target', label: 'Target'},\r\n                {key: 'actions', label: 'Action'},\r\n                {key: 'data', label: 'Data'}\r\n            ];\r\n            this.AuditActionsTableRows = rows;\r\n        } else {\r\n            this.AuditActionsTableHeader = [];\r\n            this.AuditActionsTableRows = [];\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    setSelectedPlayerDetails(selectedId) {\r\n        if (this.tableRows && this.tableRows.length) {\r\n            const data = this.tableRows.find(row => row.playerId === selectedId);\r\n            this.selectedPlayerDetails = data;\r\n            this.titleText = `Player: ${data.firstName} ${data.lastName}`;\r\n            this.selectedPlayerID = selectedId;\r\n        }\r\n        this.selectedTabKey = 'Player Details';\r\n    }\r\n\r\n    setSelectedBackOfficeUserID(selectedId) {\r\n        this.selectedBackofficeUserID = selectedId;\r\n    }\r\n\r\n    setSelectedBackOfficeUserName(selectedUserName) {\r\n        this.selectedBackofficeUserName = selectedUserName;\r\n    }\r\n\r\n    setToast(flag) {\r\n        this.showToast = flag;\r\n        this.successMessage = null;\r\n        this.errorMessage = null;\r\n    }\r\n\r\n    setEventHistoryToast(flag) {\r\n        this.showEventHistoryToast = flag;\r\n        this.successMessage = null;\r\n        this.errorMessage = null;\r\n    }\r\n\r\n    setTicketHistoryToast(flag) {\r\n        this.showTicketHistoryToast = flag;\r\n        this.successMessage = null;\r\n        this.errorMessage = null;\r\n    }\r\n\r\n    // API call to reset player password\r\n    @action confirmPlayerEmail() {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        const obj = {\r\n            firstName: identity['firstName'], lastName: identity['lastName']\r\n        };\r\n        this.isLoading = true;\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/${id}/verify-email`;\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(obj),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showConfirmEmailModal = false;\r\n                    this.showToast = true;\r\n                    this.playerHubNavigateToFirstTab = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showConfirmEmailModal = false;\r\n                    this.showToast = true;\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    // API calls to enable player account\r\n    @action enablePlayer(reason, comment) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        const obj = {\r\n            firstName: identity['firstName'], lastName: identity['lastName'],\r\n            reason: reason, comment: comment\r\n        }\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/${id}/enable`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(obj),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showPlayerLockUnlockModal = false;\r\n                    this.showToast = true;\r\n                    this.playerHubNavigateToFirstTab = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showPlayerLockUnlockModal = false;\r\n                    this.showToast = true;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    // API calls to disable player account\r\n    @action disablePlayer(reason, comment) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        const obj = {\r\n            firstName: identity['firstName'], lastName: identity['lastName'],\r\n            reason: reason, comment: comment\r\n        }\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/${id}/disable`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(obj),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showPlayerLockUnlockModal = false;\r\n                    this.showToast = true;\r\n                    this.playerHubNavigateToFirstTab = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showPlayerLockUnlockModal = false;\r\n                    this.showToast = true;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    // API calls to enable player account\r\n    @action enablePlayerScan(reason, comment) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        const obj = {\r\n            firstName: identity['firstName'], lastName: identity['lastName'],\r\n            reason: reason, comment: comment\r\n        }\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/${id}/enable-scans`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(obj),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showPlayerEnableDisableModal = false;\r\n                    this.showToast = true;\r\n                    this.playerHubNavigateToFirstTab = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showPlayerEnableDisableModal = false;\r\n                    this.showToast = true;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    // API calls to disable player account\r\n    @action disablePlayerScan(reason, comment) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        const obj = {\r\n            firstName: identity['firstName'], lastName: identity['lastName'],\r\n            reason: reason, comment: comment\r\n        }\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/${id}/disable-scans`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(obj),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showPlayerEnableDisableModal = false;\r\n                    this.showToast = true;\r\n                    this.playerHubNavigateToFirstTab = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showPlayerEnableDisableModal = false;\r\n                    this.showToast = true;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    // API call to add a person to the Frequent Casher list\r\n    @action AddFrequentCasher(firstName, lastName, ssn) {\r\n\r\n        const player = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            ssn: ssn\r\n        }\r\n\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/add-frequent-casher`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(player),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.showFrequentCasherConfirmModal = false;\r\n                    this.setToastErrorSuccessMessage(true, null, res.message)\r\n                } else if (res && res.error) {\r\n                    this.showFrequentCasherConfirmModal = false;\r\n                    this.setToastErrorSuccessMessage(true, res.error, null)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n\r\n    }\r\n\r\n    // API call to remove a person from the Frequent Casher list\r\n    @action RemoveFrequentCasher(firstName, lastName, ssn) {\r\n\r\n        const player = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            ssn: ssn\r\n        }\r\n\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/remove-frequent-casher`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(player),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.showFrequentCasherConfirmModal = false;\r\n                    this.setToastErrorSuccessMessage(true, null, res.message)\r\n                } else if (res && res.error) {\r\n                    this.showFrequentCasherConfirmModal = false;\r\n                    this.setToastErrorSuccessMessage(true, res.error, null)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    setShowUpdateModal(flag) {\r\n        this.showUpdateModal = flag\r\n    }\r\n\r\n    setShowConfirmEmailModal(flag) {\r\n        this.showConfirmEmailModal = flag\r\n    }\r\n\r\n    setShowPlayerVerifyModal(flag) {\r\n        this.showPlayerVerifyModal = flag\r\n    }\r\n\r\n    setshowPlayerLockUnlockModal(flag) {\r\n        this.showPlayerLockUnlockModal = flag\r\n    }\r\n    \r\n    setShowPlayerEnableDisableModal(flag) {\r\n        this.showPlayerEnableDisableModal = flag;\r\n    }\r\n\r\n    setShowFrequentCasherConfirmModal(flag) {\r\n        this.showFrequentCasherConfirmModal = flag\r\n    }\r\n\r\n    // API call to verify player\r\n    @action verifyPlayer(identification1, identification2, comment1, comment2) {\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const id = this.selectedPlayerID;\r\n        const verifyData = {\r\n            firstName: identity['firstName'],\r\n            lastName: identity['lastName'],\r\n            identification1: identification1,\r\n            identification2: identification2,\r\n            comment1: comment1,\r\n            comment2: comment2\r\n        }\r\n        let url = `${config.SERVER_BASE_URL}/v1/player/${id}/verify`;\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(verifyData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showPlayerVerifyModal = false;\r\n                    this.showToast = true;\r\n                    this.playerHubNavigateToFirstTab = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showPlayerVerifyModal = false;\r\n                    this.showToast = true;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action logAction(actionCategory, action, target = '', comments = '') {\r\n\r\n        const logline = {\r\n            category: actionCategory,\r\n            action: action,\r\n            target: target,\r\n            comments: comments\r\n        }\r\n\r\n        this.isLoading = true;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/log/action`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(logline),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res) {\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action getUserInfo(id) {\r\n        this.selectedBackofficeUserID = id;\r\n        this.isLoading = true;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/user/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res) {\r\n                    const {firstname, lastname} = res;\r\n                    this.UserNameTitleText = `${firstname} ${lastname}`\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    // filterJSONObjectArrayOnCriteria(input.data, {  \"gameType\": \"INSTANT\",  \"winStatus\":\"CASHING_LIMIT_EXCEEDED\",  \"status\":\"REJECTED\"});\r\n    // filterJSONObjectArrayOnCriteria([]);\r\n    // filterJSONObjectArrayOnCriteria(input);\r\n    @action filterJSONObjectArrayOnCriteria(list, criteria = '') {\r\n\r\n        if (list == null || list.length === 0)\r\n            return [];\r\n\r\n        if (criteria === '')\r\n            return list;\r\n\r\n        return list.filter(candidate =>\r\n            Object.keys(criteria).every(key => candidate[key] == criteria[key]\r\n            )\r\n        );\r\n    }\r\n\r\n    // getAllValuesForKeyFromJSONObjectArray(input.data)\r\n    @action getAllValuesForKeyFromJSONObjectArray(list, key) {\r\n\r\n        let result = new Set();\r\n\r\n        result.add('All')\r\n\r\n        let obj = ''\r\n        let option = ''\r\n        for (let i = 0; i < list.length; i++) {\r\n            obj = list[i];\r\n            option = obj[key];\r\n            if (option != null && option !== '')\r\n                result.add(option);\r\n        }\r\n\r\n        return Array.from(result);\r\n    }\r\n\r\n    @action filterTicketHistoryResult() {\r\n\r\n        let criteria = {};\r\n\r\n        if (this.selectedGameType && this.selectedGameType !== 'All' && this.selectedGameType !== '') {\r\n            criteria['gameType'] = this.selectedGameType;\r\n        }\r\n\r\n        if (this.selectedWinStatus && this.selectedWinStatus !== 'All' && this.selectedWinStatus !== '') {\r\n            criteria['winStatus'] = this.selectedWinStatus;\r\n        }\r\n\r\n        if (this.selectedStatus && this.selectedStatus !== 'All' && this.selectedStatus !== '') {\r\n            criteria['status'] = this.selectedStatus;\r\n        }\r\n\r\n        //alert(JSON.stringify(criteria))\r\n\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const PlayerName = `Player Name: ${identity['firstName']} ${identity['lastName']}`\r\n\r\n        this.logAction(UserActionCategory.FILTER_RESULTS, UserAction.TICKET_HISTORY, PlayerName, criteria)\r\n\r\n        let data = this.filterJSONObjectArrayOnCriteria(this.TicketHistoryAPIResult, criteria);\r\n        this.setTicketHistoryFilteredData(data)\r\n    }\r\n\r\n    @action filterEventHistoryResult() {\r\n\r\n        let criteria = {};\r\n\r\n        if (this.selectedDeviceType && this.selectedDeviceType !== 'All' && this.selectedDeviceType !== '') {\r\n            criteria['clientOs'] = this.selectedDeviceType;\r\n        }\r\n\r\n        if (this.selectedEvent && this.selectedEvent !== 'All' && this.selectedEvent !== '') {\r\n            criteria['authEvent'] = this.selectedEvent;\r\n        }\r\n        //alert(JSON.stringify(criteria))\r\n\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const PlayerName = `Player Name: ${identity['firstName']} ${identity['lastName']}`\r\n\r\n        this.logAction(UserActionCategory.FILTER_RESULTS, UserAction.EVENT_HISTORY, PlayerName, criteria)\r\n\r\n\r\n        let data = this.filterJSONObjectArrayOnCriteria(this.EventHistoryAPIResult, criteria);\r\n        this.setEventHistoryFilteredData(data)\r\n    }\r\n\r\n    // Returns all the values for the key - clientOs, from the Event History Results\r\n    @action getAllDeviceTypesFromEventHistoryResult() {\r\n        return this.getAllValuesForKeyFromJSONObjectArray(this.EventHistoryAPIResult, 'clientOs');\r\n    }\r\n\r\n    // Returns all the values for the key - AuthEvent, from the Event History Results\r\n    @action getAllEventTypesFromEventHistoryResult() {\r\n        return this.getAllValuesForKeyFromJSONObjectArray(this.EventHistoryAPIResult, 'authEvent');\r\n    }\r\n\r\n    // Returns all the values for the key - gameType, from the Ticket History Results\r\n    @action getAllGameTypesFromTicketHistoryResult() {\r\n        return this.getAllValuesForKeyFromJSONObjectArray(this.TicketHistoryAPIResult, 'gameType');\r\n    }\r\n\r\n    // Returns all the values for the key - winStatus, from the Ticket History Results\r\n    @action getAllWinStatusesFromTicketHistoryResult() {\r\n        return this.getAllValuesForKeyFromJSONObjectArray(this.TicketHistoryAPIResult, 'winStatus');\r\n    }\r\n\r\n    // Returns all the values for the key - status, from the Ticket History Results\r\n    @action getAllStatusesFromTicketHistoryResult() {\r\n        return this.getAllValuesForKeyFromJSONObjectArray(this.TicketHistoryAPIResult, 'status');\r\n    }\r\n\r\n    @action ClearTicketHistoryFilters() {\r\n        this.selectedGameType = 'All';\r\n        this.selectedWinStatus = 'All';\r\n        this.selectedStatus = 'All';\r\n        this.filterTicketHistoryResult();\r\n    }\r\n\r\n    @action ClearEventHistoryFilters() {\r\n        this.selectedDeviceType = 'All';\r\n        this.selectedEvent = 'All';\r\n        this.filterEventHistoryResult();\r\n    }\r\n\r\n    @action setSelectedGameType(val) {\r\n        this.selectedGameType = val;\r\n    }\r\n\r\n    @action setSelectedWinStatus(val) {\r\n        this.selectedWinStatus = val;\r\n    }\r\n\r\n    @action setSelectedStatus(val) {\r\n        this.selectedStatus = val;\r\n    }\r\n\r\n    @action setSelectedDeviceType(val) {\r\n        this.selectedDeviceType = val;\r\n    }\r\n\r\n    @action setSelectedEvent(val) {\r\n        this.selectedEvent = val;\r\n    }\r\n\r\n    showFileNewTab(data, isSkip = false) {\r\n        if (data === undefined || isSkip) return\r\n        let file = new Blob([data], {type: 'application/pdf'});\r\n        let fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL);\r\n    }\r\n\r\n    @action downloadPDF(filename) {\r\n        let url = `${config.SERVER_BASE_URL}/v1/download/${filename}`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json application/pdf',\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.setToastErrorSuccessMessage(true, 'No Document Found.', null)\r\n                    return\r\n                }\r\n                return response.blob();\r\n            })\r\n            .then(this.showFileNewTab)\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    setClaimHistoryData(data) {\r\n        if (data) {\r\n            const rows = Object.values(data).map(d => d.claim);\r\n\r\n            this.claimHistoryTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'referenceNumber', label: 'Claim ID'},\r\n                {key: 'status', label: 'Status'},\r\n            ];\r\n\r\n            rows.forEach(element => {\r\n                const date = moment(element.activeFrom).format('MM-DD-YYYY');\r\n                const time = moment(element.activeFrom).format(timeOfDayFormat);\r\n                element.date = date;\r\n                element.time = time;\r\n                // element.requestTimestamp = moment(element.requestTimestamp).format()\r\n            });\r\n            this.claimHistoryTableRows = rows;\r\n        } else {\r\n            this.claimHistoryTableHeader = [];\r\n            this.claimHistoryTableRows = [];\r\n            this.showToast = true;\r\n            this.successMessage = 'Player has no Claims';\r\n            this.errorMessage = null;\r\n        }\r\n    }\r\n\r\n    // API call to fetch tickets associated with a player\r\n    @action fetchAllClaims() {\r\n        const id = this.selectedPlayerID;\r\n        this.isLoading = true;\r\n        const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n        const {identity} = _selectedPlayerDetails;\r\n        const obj = {\r\n            firstName: identity['firstName'],\r\n            lastName: identity['lastName'],\r\n            playerId: identity['id'],\r\n            reason: 'reason',\r\n            comment: 'comment'\r\n        }\r\n        const url = `${config.SERVER_BASE_URL}/v1/player/${id}/claims`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(obj),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showToast = true;\r\n                } else if (res && res.claims) {\r\n                    if (res.claims.length > 0) {\r\n                        this.setClaimHistoryData(res.claims);\r\n                    } else {\r\n                        this.claimHistoryTableHeader = [];\r\n                        this.claimHistoryTableRows = [];\r\n                        this.showToast = true;\r\n                        this.successMessage = 'Player has no Claims';\r\n                        this.errorMessage = null;\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n                this.showToast = true;\r\n                this.successMessage = null;\r\n            });\r\n    }\r\n\r\n    setSelectedClaim(claim, cb, flag=false) {\r\n        if(flag) {\r\n            this.selectedPlayerDetails = {\r\n                identity: {\r\n                    firstName: claim.playerFirstName,\r\n                    lastName: claim.playerLastName\r\n                }\r\n            }\r\n        }\r\n        this.selectedClaimId = claim.referenceNumber;\r\n        this.selectedClaimStatus = claim.status;\r\n        cb();\r\n    }\r\n\r\n    setClaimDetails(data, count) {\r\n        if (data && data.currState) {\r\n            const rowData = data.prevStates || [];\r\n\r\n            const claimHistoryTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'status', label: 'Status'},\r\n                {key: 'prizeAmountInCents', label: 'Amount', type: 'currency', classes: 'currency-column'},\r\n            ];\r\n\r\n            rowData.forEach(element => {\r\n                const date = moment(element.activeFrom).format('MM-DD-YYYY');\r\n                const time = moment(element.activeFrom).format(timeOfDayFormat);\r\n\r\n                element.date = date;\r\n                element.time = time;\r\n\r\n                element.prizeAmountInCents = element.prizeAmountInCents ? (element.prizeAmountInCents / 100).toFixed(2) : 0;\r\n            });\r\n\r\n\r\n            const selectedClaimDetails = data.currState || null;\r\n\r\n            this.eSignatureURL = data.eSignatureUrl || null;\r\n\r\n            selectedClaimDetails.rejectedCount = count;\r\n\r\n            const stateTax = data.lineItems ? data.lineItems.find(item => item.type === 'TAX_STATE') : null;\r\n            selectedClaimDetails.taxWithholding = stateTax && stateTax.amountInCents ? (stateTax.amountInCents / 100).toFixed(2) : 0;\r\n\r\n            if (selectedClaimDetails.taxWithholding < 0) {\r\n                selectedClaimDetails.taxWithholding *= -1;\r\n            }\r\n            const offsetTax = data.lineItems ? data.lineItems.find(item => item.type === 'OFFSET') : null;\r\n            selectedClaimDetails.offsetWithholding = offsetTax && offsetTax.amountInCents ? (offsetTax.amountInCents / 100).toFixed(2) : 0;\r\n\r\n            if (selectedClaimDetails.offsetWithholding < 0) {\r\n                selectedClaimDetails.offsetWithholding *= -1;\r\n            }\r\n\r\n            selectedClaimDetails.netPaymentAmountInCents = (data.netPaymentAmountInCents).toFixed(2) || 0;\r\n            this.claimDetails = {\r\n                claimHistoryTableHeader,\r\n                claimHistoryTableRows: rowData,\r\n                selectedClaimDetails: selectedClaimDetails\r\n            };\r\n\r\n        } else {\r\n            this.claimDetails = {\r\n                claimHistoryTableHeader: [],\r\n                claimHistoryTableRows: []\r\n            };\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    // API call to fetch claim details\r\n    @action fetchClaimDetails() {\r\n        const claimReferenceNumber = this.selectedClaimId;\r\n        if (this.selectedClaimId) {\r\n            this.isLoading = true;\r\n            const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n            const {identity} = _selectedPlayerDetails;\r\n            const obj = {\r\n                firstName: identity['firstName'],\r\n                lastName: identity['lastName'],\r\n                reason: 'reason',\r\n                comment: 'comment'\r\n            }\r\n            const url = `${config.SERVER_BASE_URL}/v1/claim/${claimReferenceNumber}/details`;\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(obj),\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res && res.error) {\r\n                        this.successMessage = null;\r\n                        this.errorMessage = res.error\r\n                        this.showToast = true;\r\n                    } else if (res && res.claim) {\r\n                        if (res.claim.prevStates) {\r\n                            let count = 0;\r\n                            if (res.hasOwnProperty('rejectCount')) {\r\n                                count = res.rejectCount;\r\n                            }\r\n                            this.setClaimDetails(res.claim, count);\r\n                        } else {\r\n                            this.successMessage = 'No Results.';\r\n                            this.errorMessage = null;\r\n                            this.showToast = true;\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.errorMessage = error.toString();\r\n                });\r\n        }\r\n    }\r\n\r\n    setPaymentHistoryData(data) {\r\n        const rows = data.map(item => {\r\n            if (item.details) {\r\n                const {createdAt, amountInCents} = item.details;\r\n                const date = moment(createdAt).format('MM-DD-YYYY');\r\n                const time = moment(createdAt).format(timeOfDayFormat);\r\n                item.date = date;\r\n                item.time = time;\r\n                item.amount = amountInCents ? (amountInCents / 100) : 0;\r\n                item.amount = item.amount.toFixed(2);\r\n            }\r\n            return item;\r\n        })\r\n        this.paymentHistoryData = rows || [];\r\n    }\r\n\r\n    // API call to fetch claim payment history data\r\n    @action fetchPaymentHistoryDetails() {\r\n        const claimReferenceNumber = this.selectedClaimId;\r\n        if (this.selectedClaimId) {\r\n            this.isLoading = true;\r\n            const _selectedPlayerDetails = JSON.parse(JSON.stringify(this.selectedPlayerDetails));\r\n            const {identity} = _selectedPlayerDetails;\r\n            const obj = {\r\n                firstName: identity['firstName'],\r\n                lastName: identity['lastName'],\r\n                reason: 'reason',\r\n                comment: 'comment'\r\n            }\r\n            const url = `${config.SERVER_BASE_URL}/v1/claim/${claimReferenceNumber}/transactions/history`;\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(obj),\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res && res.error) {\r\n                        this.successMessage = null;\r\n                        this.errorMessage = res.error\r\n                        this.showToast = true;\r\n                    } else if (res && res.transactions) {\r\n                        this.setPaymentHistoryData(res.transactions);\r\n                    } else {\r\n                        this.successMessage = 'No Results.';\r\n                        this.errorMessage = null;\r\n                        this.showToast = true;\r\n                        this.paymentHistoryData = []\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.errorMessage = error.toString();\r\n                });\r\n        }\r\n    }\r\n    \r\n    @action clearESig(){\r\n        this.eSignatureURL = null;\r\n    }\r\n\r\n    /*\r\n    @action fetchESigFormForClaim() {\r\n        const id = this.selectedClaimId;\r\n        let isFailed = false;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/claim/${id}/ESig`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json application/pdf',\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.setToastErrorSuccessMessage(true, 'No E-Signature is associated to this Claim.', null)\r\n                    return\r\n                }\r\n                if(response.status === 404) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = 'No E-Signature is associated to this Claim';\r\n                    this.showToast = true;\r\n                    isFailed = true;\r\n                    return 0;\r\n                }\r\n                return response.blob(); //Will need to examine the data coming back here\r\n            })\r\n            .then(data => this.eSignatureData = data)\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n    */\r\n    @action fetchW2GFormForClaim() {\r\n        const id = this.selectedClaimId;\r\n        let isFailed = false;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/claim/${id}/W2G`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json application/pdf',\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.setToastErrorSuccessMessage(true, 'No W2G is attached to this Claim.', null)\r\n                    return\r\n                }\r\n                if (response.status === 404) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = 'No W2G is attached to this Claim';\r\n                    this.showToast = true;\r\n                    isFailed = true;\r\n                    return 0;\r\n                }\r\n                return response.blob();\r\n            })\r\n            .then(data => this.showFileNewTab(data, isFailed))\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    setSelectedTabKey(key) {\r\n        this.selectedTabKey = key;\r\n    }\r\n\r\n    setPaymentDetails(data, cb) {\r\n        this.paymentDetails = data;\r\n        cb();\r\n    }\r\n\r\n    setSpinnerState(flag) {\r\n        this.isSpinnerLoading = flag;\r\n    }\r\n\r\n    @action unlockUser(userData, cb) {\r\n        if(userData && userData.id) {\r\n\r\n            this.loading = true;\r\n            const obj ={\r\n                id: userData.id,\r\n                username: userData.username\r\n            }\r\n            fetch(`${config.SERVER_BASE_URL}/v1/user/unlock`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json application/pdf',\r\n                },\r\n                body: JSON.stringify(obj),\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res && res.error) {\r\n                        this.mainSuccessMessage = null;\r\n                        this.mainErrorMessage = res.error.toString();\r\n                        this.showMainToast = true;\r\n                        this.isSpinnerLoading = false;\r\n                    } else if (res && res.success) {\r\n                        this.mainErrorMessage = null;\r\n                        this.mainSuccessMessage = 'User unlocked';\r\n                        this.showMainToast = true;\r\n                        this.isSpinnerLoading = false;\r\n                        cb();\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.mainErrorMessage = error.toString();\r\n                    this.mainSuccessMessage = null;\r\n                    this.showMainToast = true;\r\n                    this.isSpinnerLoading = false;\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport {action, observable, toJS} from \"mobx\";\r\nimport config from \"../config\";\r\n\r\nexport class SettingsStore {\r\n\r\n    rootStore = null;\r\n\r\n    @observable showConfirmSaveModal = false;\r\n    @observable showToast = false;\r\n    @observable successMessage = '';\r\n    @observable errorMessage = '';\r\n\r\n    @observable inboundRules = []\r\n    @observable inboundRules_UNMODIFIED = []\r\n\r\n    @observable myIPAddress = '';\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n\r\n    }\r\n\r\n    setShowConfirmSaveModal(flag) {\r\n        this.showConfirmSaveModal = flag\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @action getMFABypassRules() {\r\n\r\n        /*        this.inboundRules = [\r\n                    {id: 1, source: 'source1', ip: '0.0.0.0', description: 'test1'},\r\n                    {id: 2, source: 'source2', ip: '1.1.1.1', description: 'test2'},\r\n                    {id: 3, source: 'source3', ip: '2.2.2.2', description: 'test3'}\r\n                ];\r\n\r\n                this.inboundRules_UNMODIFIED = this.inboundRules;\r\n\r\n        */\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/settings/inboundrules`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.data) {\r\n                    this.setMFABypassRules(res.data);\r\n                    this.setMFABypassRules_UNMODIFIED(res.data);\r\n                } else if (res && res.error) {\r\n                    const errorMessage = res.error;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                // alert(error.toString())\r\n                this.errorMessage = error.toString();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     */\r\n    @action setMFABypassRules(data) {\r\n        //this.inboundRules.splice(0, this.inboundRules.length)\r\n        if (data) {\r\n            this.inboundRules = data;\r\n        } else {\r\n            this.inboundRules = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     */\r\n    @action setMFABypassRules_UNMODIFIED(data) {\r\n        this.inboundRules_UNMODIFIED.splice(0, this.inboundRules_UNMODIFIED.length)\r\n        if (data) {\r\n            this.inboundRules_UNMODIFIED = data;\r\n        } else {\r\n            this.inboundRules_UNMODIFIED = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param source\r\n     * @param description\r\n     */\r\n    @action addMFABypassRule(source, description) {\r\n        const _inboundRules = this.inboundRules;\r\n        const id = Math.random();\r\n        const obj = {\r\n            id: id,\r\n            source: '',\r\n            ip: '',\r\n            description: ''\r\n        }\r\n        _inboundRules.push(obj);\r\n        this.inboundRules = _inboundRules;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param source\r\n     * @param description\r\n     */\r\n    @action deleteMFABypassRule(id) {\r\n        const _inboundRules = toJS(this.inboundRules);\r\n        const index = _inboundRules.findIndex(obj => obj.id === id);\r\n        _inboundRules.splice(index, 1);\r\n        this.inboundRules = _inboundRules;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @action saveMFABypassRules() {\r\n\r\n        //alert(JSON.stringify(this.inboundRules))\r\n\r\n        // API CALL\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/settings/inboundrules`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.inboundRules),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.setMFABypassRules_UNMODIFIED(this.inboundRules);\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showToast = true;\r\n                    this.showConfirmSaveModal = false;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showToast = true;\r\n                    this.showConfirmSaveModal = false;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action discardMFABypassRuleChanges() {\r\n        this.inboundRules.splice(0, this.inboundRules.length);\r\n        this.inboundRules = this.inboundRules_UNMODIFIED;\r\n    }\r\n\r\n    @action getMyIPAddress() {\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/ipaddress`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.text())\r\n            .then(res => {\r\n                if (res) {\r\n                    this.myIPAddress = res;\r\n                } else if (res && res.error) {\r\n                    const errorMessage = res.error;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(error.toString())\r\n                this.errorMessage = error.toString();\r\n            });\r\n\r\n        return this.myIPAddress;\r\n    }\r\n\r\n    setToast(flag) {\r\n        this.showToast = flag;\r\n        this.successMessage = null;\r\n        this.errorMessage = null;\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {action, observable} from \"mobx\";\r\nimport config from \"../config\";\r\nimport moment from \"moment\";\r\nimport {timeOfDayFormat} from \"../constants.js\";\r\nexport class ClaimStore {\r\n\r\n    rootStore = null;\r\n    authStore = null;\r\n\r\n    @observable isLoading = false;\r\n\r\n    @observable reconDate = null;\r\n    @observable reconTableRows = [];\r\n    @observable reconTableHeader = [];\r\n    @observable ESAValidations = '$0.00';\r\n    @observable mobileClaims = '$0.00';\r\n    @observable playerPayments = '$0.00';\r\n    @observable taxes = '$0.00';\r\n    @observable ACHTotal = '$0.00';\r\n    @observable returnedPayments = '$0.00';\r\n    @observable ACHRetries = '$0.00';\r\n    @observable paperCheckRetries = '$0.00';\r\n\r\n\r\n    @observable startDate = null;\r\n    @observable endDate = null;\r\n    @observable rejectFileReference = '';\r\n    @observable batchNumber = '';\r\n\r\n    @observable tableRows = [];\r\n    @observable tableHeader = [];\r\n    @observable showToast = false;\r\n    @observable successMessage = null;\r\n    @observable errorMessage = null;\r\n    @observable selectedBatchId = null;\r\n    @observable selectedBatchData = null;\r\n    @observable selectedRejectData = null;\r\n    @observable selectedRejectReferenceNumber = null;\r\n    @observable selectedRejectId = null;\r\n    @observable batchDetails = null;\r\n    @observable rejectFileDetails = null;\r\n    @observable rejectedClaimsDetails = null;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.authStore = this.rootStore.authStore;\r\n    }\r\n\r\n    resetToast() {\r\n        this.showToast = false;\r\n        this.errorMessage = null;\r\n        this.successMessage = null;\r\n    }\r\n\r\n    setReconData(data) {\r\n        //debugger;\r\n        \r\n        const tableHeader = [\r\n            {key: 'reportType', label: 'Report'},\r\n            {key: 'batchReference', label: 'Batch Ref.'},\r\n            {key: 'recordCount', label: 'Record Count'},\r\n            {key: 'amount', label: 'Total Amount'},\r\n            {key: 'timestamp', label: 'Date'},\r\n        ];\r\n\r\n        const lightTableHeader = ['Report', 'Batch Ref.', 'Record Count', 'Total Amount', 'Date'];\r\n        let lightTableData = [];\r\n\r\n        let playerPaymentsVal = 0;\r\n        let taxesVal = 0;\r\n        let ACHTotalVal = 0;\r\n        let returnedPaymentsVal = 0;\r\n        let ACHRetriesVal = 0;\r\n        let paperCheckRetriesVal = 0;\r\n\r\n        for(let i = 0; i < data.itemizedReports.length; i++){\r\n\r\n            let tempItemizedAmount = `$` + `${data.itemizedReports[i].amount}`.padStart(3, '0');\r\n            tempItemizedAmount = [tempItemizedAmount.slice(0, tempItemizedAmount.length - 2), '.', tempItemizedAmount.slice(tempItemizedAmount.length - 2)].join('');\r\n\r\n            let formattedTime = moment(data.itemizedReports[i].timestamp).format('MM/DD/YYYY hh:mm:ss a');\r\n            //let tempReport = <a href={'google.com'}>{data.itemizedReports[i].reportType}</a>;\r\n            switch(data.itemizedReports[i].reportType){\r\n                case 'Player Payments by ACH':\r\n                    playerPaymentsVal += data.itemizedReports[i].amount;\r\n                    break;\r\n                case 'Taxes to DOR by ACH':\r\n                    taxesVal += data.itemizedReports[i].amount;\r\n                    break;\r\n                case 'Returned ACH Payments':\r\n                    returnedPaymentsVal += parseInt(data.itemizedReports[i].amount, 10);\r\n                    break;\r\n                case 'Payment Retries by ACH':\r\n                    ACHRetriesVal += data.itemizedReports[i].amount;\r\n                    break;\r\n                case 'Payment Retries by Paper Check':\r\n                    paperCheckRetriesVal += data.itemizedReports[i].amount;\r\n                    break;\r\n            }\r\n\r\n            lightTableData.unshift({\r\n                id: `${i + 1}`,\r\n                items: [data.itemizedReports[i].reportType, data.itemizedReports[i].batchReference, `${data.itemizedReports[i].recordCount}`, tempItemizedAmount, formattedTime],\r\n                label: data.itemizedReports[i].reportType,\r\n            });\r\n        }\r\n\r\n        ACHTotalVal = playerPaymentsVal + taxesVal;\r\n\r\n        /*\r\n        this.reconTableHeader = tableHeader;\r\n        this.reconTableRows = data.itemizedReports;\r\n        */\r\n\r\n        this.reconTableHeader = lightTableHeader;\r\n        this.reconTableRows = lightTableData;\r\n\r\n        //@observable ESAValidations = '$0.00';\r\n        //@observable mobileClaims = '$0.00';\r\n\r\n        //pad the amount values with 0's if it's under 3 characters, then add the '.' character and '$' character for the currency string\r\n        let tempESA = `$` + `${data.ESAValidation}`.padStart(3, '0');\r\n        this.ESAValidations = [tempESA.slice(0, tempESA.length - 2), '.', tempESA.slice(tempESA.length - 2)].join('');\r\n\r\n        let tempMobile = `$` + `${data.RTCMobileClaims}`.padStart(3, '0');\r\n        this.mobileClaims = [tempMobile.slice(0, tempMobile.length - 2), '.', tempMobile.slice(tempMobile.length - 2)].join('');\r\n\r\n        let tempPlayerPayments = `$` + `${playerPaymentsVal}`.padStart(3, '0');\r\n        this.playerPayments = [tempPlayerPayments.slice(0, tempPlayerPayments.length - 2), '.', tempPlayerPayments.slice(tempPlayerPayments.length - 2)].join('');\r\n\r\n        let tempTaxes = `$` + `${taxesVal}`.padStart(3, '0');\r\n        this.taxes = [tempTaxes.slice(0, tempTaxes.length - 2), '.', tempTaxes.slice(tempTaxes.length - 2)].join('');\r\n\r\n        let tempACHTotal = `$` + `${ACHTotalVal}`.padStart(3, '0');\r\n        this.ACHTotal = [tempACHTotal.slice(0, tempACHTotal.length - 2), '.', tempACHTotal.slice(tempACHTotal.length - 2)].join('');\r\n\r\n        let tempReturnedPayments = `$` + `${returnedPaymentsVal}`.padStart(3, '0');\r\n        this.returnedPayments = [tempReturnedPayments.slice(0, tempReturnedPayments.length - 2), '.', tempReturnedPayments.slice(tempReturnedPayments.length - 2)].join('');\r\n \r\n        let tempACHRetries = `$` + `${ACHRetriesVal}`.padStart(3, '0');\r\n        this.ACHRetries = [tempACHRetries.slice(0, tempACHRetries.length - 2), '.', tempACHRetries.slice(tempACHRetries.length - 2)].join('');\r\n\r\n        let tempPaperCheckRetries = `$` + `${paperCheckRetriesVal}`.padStart(3, '0');\r\n        this.paperCheckRetries = [tempPaperCheckRetries.slice(0, tempPaperCheckRetries.length - 2), '.', tempPaperCheckRetries.slice(tempPaperCheckRetries.length - 2)].join('');\r\n    }   \r\n\r\n    /*\r\n    @observable ACHTotal = '$0.00';\r\n    @observable returnedPayments = '$0.00';\r\n    @observable ACHRetries = '$0.00';\r\n    @observable paperCheckRetries = '$0.00';\r\n    */\r\n\r\n    setData(data) {\r\n        const tableHeader = [\r\n            {key: 'startDate', label: 'Date Submitted'},\r\n            {key: 'endDate', label: 'Date Received'},\r\n            {key: 'time', label: 'Time'},\r\n            {key: 'batchnumber', label: 'Batch #'},\r\n            {key: 'rejectreferencenumber', label: 'Reject Ref #'},\r\n            {key: 'totalnumberofrecords', label: 'Number of Records'},\r\n            {key: 'amount', label: 'Amount', type: 'currency', classes: 'currency-column'},\r\n            {key: 'status', label: 'Status'},\r\n            {key: 'sftpresponse', label: 'SFTP Response'},\r\n        ];\r\n        data.forEach(element => {\r\n            let startDate = '';\r\n            let endDate = '';\r\n\r\n\r\n            if (element.batchnumber) {\r\n                startDate = moment(element.filesubmissiondatetime).format('MM-DD-YYYY');\r\n                element.startDate = startDate;\r\n                element.rejectreferencenumber = '';\r\n            }\r\n\r\n            if (element.rejectreferencenumber) {\r\n                endDate = moment(element.processtimestamp).format('MM-DD-YYYY');\r\n                element.endDate = endDate;\r\n                element.batchnumber = '';\r\n            }\r\n\r\n            const time = moment(element.batchnumber ? element.filesubmissiondatetime : element.processtimestamp).format(timeOfDayFormat);\r\n\r\n            element.time = time;\r\n            element.amount = element.amount ? (element.amount / 100) : 0;\r\n            element.amount = element.amount.toFixed(2);\r\n        });\r\n        this.tableHeader = tableHeader;\r\n        this.tableRows = data;\r\n    }\r\n\r\n    @action getAchData(queryParams) {\r\n        this.isLoading = true;\r\n\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/ach/batch/reports${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    this.showToast = true;\r\n                    this.errorMessage = res.error;\r\n                    this.tableRows = [];\r\n                    this.tableHeader = [];\r\n                } else {\r\n                    if (res && res.hasOwnProperty('data') && res.data.length === 0) {\r\n                        this.showToast = true;\r\n                        this.errorMessage = 'No Files matching the criteria have been found';\r\n                        this.tableRows = [];\r\n                        this.tableHeader = [];\r\n                    } else if (res && res.hasOwnProperty('data') && res.data.length > 0) {\r\n                        this.setData(res.data)\r\n                    }\r\n                }\r\n                this.isLoading = false;\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n                this.isLoading = false;\r\n            });\r\n    }\r\n\r\n    @action getReconData(queryParams) {\r\n        this.isLoading = true;\r\n\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/claim/dailyrecon${queryParams}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    this.showToast = true;\r\n                    this.errorMessage = res.error;\r\n                    this.tableRows = [];\r\n                    this.tableHeader = [];\r\n                } else {\r\n                    if (res && res.hasOwnProperty('itemizedReports') && res.itemizedReports.length === 0) {\r\n                        this.showToast = true;\r\n                        this.errorMessage = 'No Files matching the criteria have been found';\r\n                        this.tableRows = [];\r\n                        this.tableHeader = [];\r\n                        this.setReconData(res);\r\n                    } else if (res && res.hasOwnProperty('itemizedReports') && res.itemizedReports.length > 0) {\r\n                        this.setReconData(res)\r\n                    }\r\n                }\r\n                this.isLoading = false;\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n                this.isLoading = false;\r\n            });\r\n    }\r\n\r\n    setToast() {\r\n        this.errorMessage = null;\r\n        this.showToast = false;\r\n    }\r\n\r\n    setStartEndDate(_startDate = '', _endDate = '') {\r\n        if (_startDate !== '') {\r\n            this.startDate = _startDate;\r\n        }\r\n        if (_endDate !== '') {\r\n            this.endDate = _endDate;\r\n        }\r\n    }\r\n\r\n    setReconDate(_reconDate = '') {\r\n        if (_reconDate !== '') {\r\n            this.reconDate = _reconDate;\r\n        }\r\n    }\r\n\r\n    setBatchNumber(value) {\r\n        this.batchNumber = value;\r\n    }\r\n\r\n    setRejectFileReference(value) {\r\n        this.rejectFileReference = value;\r\n    }\r\n\r\n    clearTableData() {\r\n        this.tableRows = [];\r\n        this.tableHeader = [];\r\n        this.batchNumber = '';\r\n        this.rejectFileReference = '';\r\n        this.batchNumber = '';\r\n        this.startDate = null;\r\n        this.endDate = null;\r\n    }\r\n\r\n    reconSetSelectedBatchId(data) {\r\n        this.selectedBatchId = data.items[1];\r\n        this.selectedBatchData = data;\r\n        this.selectedRejectData = null;\r\n        this.selectedRejectReferenceNumber = null;\r\n    }\r\n\r\n    reconSetSelectedRejectReferenceNumber(data) {\r\n        this.selectedRejectReferenceNumber = data.items[1];\r\n        //this.selectedRejectId = data.id;\r\n        this.selectedRejectData = data;\r\n        this.selectedBatchId = null;\r\n        this.selectedBatchData = null;\r\n    }\r\n\r\n    setSelectedBatchId(data) {\r\n        this.selectedBatchId = data.batchnumber;\r\n        this.selectedBatchData = data;\r\n        this.selectedRejectData = null;\r\n        this.selectedRejectReferenceNumber = null;\r\n    }\r\n\r\n    setSelectedRejectReferenceNumber(data) {\r\n        this.selectedRejectReferenceNumber = data.rejectreferencenumber;\r\n        this.selectedRejectId = data.id;\r\n        this.selectedRejectData = data;\r\n        this.selectedBatchId = null;\r\n        this.selectedBatchData = null;\r\n    }\r\n\r\n    setBatchDetails(data) {\r\n        if (data) {\r\n\r\n            const batchDetailTableHeader = [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'claimid', label: 'Claim ID'},\r\n                {key: 'transactionid', label: 'Transaction ID'},\r\n                {key: 'netamount', label: 'Net Amount', type: 'currency', classes: 'currency-column'},\r\n                {key: 'maksedroutingnumber', label: 'Routing Number'},\r\n                {key: 'maskedaccountnumber', label: 'Account Number'},\r\n                {key: 'rtcstatus', label: 'Status'},\r\n                {key: 'tracenumber', label: 'Trace Number'},\r\n                {key: 'tracenumber', label: 'Detail Sequence'},\r\n            ];\r\n\r\n            data.forEach(element => {\r\n\r\n                element.maksedroutingnumber = element.routingnumber ? '**********' : '-';\r\n                element.maskedaccountnumber = element.accountnumber ? '**********' : '-';\r\n\r\n                element.date = element.timestamp\r\n                    ? moment(element.timestamp).format('MM-DD-YYYY')\r\n                    : '-';\r\n                element.time = element.timestamp\r\n                    ? moment(element.timestamp).format(timeOfDayFormat)\r\n                    : '-';\r\n\r\n                element.fileCreationDate = element.filecreationdatetime\r\n                    ? moment(element.filecreationdatetime).format('MM-DD-YYYY')\r\n                    : '-';\r\n                element.fileCreationTime = element.filecreationdatetime\r\n                    ? moment(element.filecreationdatetime).format(timeOfDayFormat)\r\n                    : '-';\r\n\r\n                element.dateSubmitted = element.filesubmissiondatetime\r\n                    ? moment(element.filesubmissiondatetime).format('MM-DD-YYYY')\r\n                    : '-';\r\n                element.submittedTime = element.filesubmissiondatetime\r\n                    ? moment(element.filesubmissiondatetime).format(timeOfDayFormat)\r\n                    : '-';\r\n\r\n                element.effectiveEntryDate = element.effectiveentrydate\r\n                    ? moment(element.effectiveentrydate).format('MM-DD-YYYY')\r\n                    : '-';\r\n\r\n                element.settlementDate = element.settlementdate\r\n                    ? moment(element.settlementdate).format('MM-DD-YYYY')\r\n                    : '-';\r\n\r\n                element.netamount = element.netamount ? Number(element.netamount) / 100 : 0;\r\n                element.netamount = element.netamount.toFixed(2);\r\n            });\r\n\r\n            this.batchDetails = {\r\n                batchDetailsTableHeader: batchDetailTableHeader,\r\n                batchDetailsTableRows: data,\r\n                selectedBatchDetails: this.selectedBatchData\r\n            };\r\n\r\n        } else {\r\n            this.batchDetails = {\r\n                batchDetailsTableHeader: [],\r\n                batchDetailsTableRows: [],\r\n                selectedBatchDetails: {}\r\n            };\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    fetchBatchDetails() {\r\n        this.isLoading = true;\r\n        const batchId = this.selectedBatchId;\r\n        if (batchId) {\r\n            this.isLoading = true;\r\n            const url = `${config.SERVER_BASE_URL}/v1/ach/batch/${batchId}`;\r\n            fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    this.isLoading = false;\r\n                    if (res && res.error) {\r\n                        this.errorMessage = res.error\r\n                        this.showToast = true;\r\n                    } else if (res && res.data) {\r\n                        if (res.data.length > 0) {\r\n                            this.setBatchDetails(res.data);\r\n                        } else {\r\n                            this.errorMessage = 'No Results.';\r\n                            this.showToast = true;\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.isLoading = false;\r\n                    this.errorMessage = error.toString();\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    setRejectFileDetails(data) {\r\n        if (data) {\r\n\r\n            const rejectDetailTableHeader = [\r\n                {key: 'date', label: 'Original Submission Date'},\r\n                {key: 'time', label: 'Original Submission Time'},\r\n                {key: 'batchnumber', label: 'Original Batch #'},\r\n                {key: 'claimid', label: 'Claim ID'},\r\n                {key: 'transactionid', label: 'Transaction ID'},\r\n                {key: 'netamount', label: 'Net Amount', type: 'currency', classes: 'currency-column'},\r\n                {key: 'maksedroutingnumber', label: 'Routing Number'},\r\n                {key: 'maskedaccountnumber', label: 'Account Number'},\r\n                {key: 'rtcstatus', label: 'Status'},\r\n                {key: 'tracenumber', label: 'Trace Number'},\r\n                {key: 'tracenumber', label: 'Detail Sequence'},\r\n            ];\r\n\r\n            data.forEach(element => {\r\n\r\n                element.maksedroutingnumber = element.routingnumber ? '**********' : '-';\r\n                element.maskedaccountnumber = element.accountnumber ? '**********' : '-';\r\n\r\n                element.date = element.timestamp\r\n                    ? moment(element.timestamp).format('MM-DD-YYYY')\r\n                    : '-';\r\n                element.time = element.timestamp\r\n                    ? moment(element.timestamp).format(timeOfDayFormat)\r\n                    : '-';\r\n\r\n                element.fileCreationDate = element.recievetimestamp\r\n                    ? moment(element.recievetimestamp).format('MM-DD-YYYY')\r\n                    : '-';\r\n                element.fileCreationTime = element.recievetimestamp\r\n                    ? moment(element.recievetimestamp).format(timeOfDayFormat)\r\n                    : '-';\r\n\r\n                element.fileReceivedDate = element.processtimestamp\r\n                    ? moment(element.processtimestamp).format('MM-DD-YYYY')\r\n                    : '-';\r\n                element.fileReceivedTime = element.processtimestamp\r\n                    ? moment(element.processtimestamp).format(timeOfDayFormat)\r\n                    : '-';\r\n\r\n                element.effectiveEntryDate = element.effectiveentrydate\r\n                    ? moment(element.effectiveentrydate).format('MM-DD-YYYY')\r\n                    : '-';\r\n\r\n                element.settlementDate = element.settlementdate\r\n                    ? moment(element.settlementdate).format('MM-DD-YYYY')\r\n                    : '-';\r\n\r\n                element.netamount = element.netamount ? Number(element.netamount) / 100 : 0;\r\n                element.netamount = element.netamount.toFixed(2);\r\n            });\r\n\r\n            this.rejectFileDetails = {\r\n                rejectFileTableHeader: rejectDetailTableHeader,\r\n                rejectFileTableRows: data,\r\n                selectedRejectFileDetails: this.selectedRejectData\r\n            };\r\n\r\n        } else {\r\n            this.rejectFileDetails = {\r\n                rejectFileTableHeader: [],\r\n                rejectFileTableRows: [],\r\n                selectedRejectFileDetails: {}\r\n            };\r\n            this.showToast = true;\r\n        }\r\n    }\r\n\r\n    fetchRejectFileDetails() {\r\n        this.isLoading = true;\r\n        if (this.selectedRejectReferenceNumber) {\r\n            this.isLoading = true;\r\n            const url = `${config.SERVER_BASE_URL}/v1/ach/reject/${this.selectedRejectReferenceNumber}`;\r\n            fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    this.isLoading = false;\r\n                    if (res && res.error) {\r\n                        this.errorMessage = res.error\r\n                        this.showToast = true;\r\n                    } else if (res && res.data) {\r\n                        if (res.data.length > 0) {\r\n                            this.setRejectFileDetails(res.data);\r\n                        } else {\r\n                            this.errorMessage = 'No Results.';\r\n                            this.showToast = true;\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.isLoading = false;\r\n                    this.errorMessage = error.toString();\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    setRejectedClaimData = (tableHeader, data, isClaimCheck) => {\r\n        const tableRows = [];\r\n        if(data && data.length > 0) {\r\n            data.forEach(row => {\r\n                if(row && row.claim && row.transactions) {\r\n                    const {referenceNumber, prizeAmountInCents, playerFirstName, playerLastName, activeFrom} = row.claim;\r\n                    const date = activeFrom\r\n                        ? moment(activeFrom).format('MM-DD-YYYY')\r\n                        : '-';\r\n                    const time = activeFrom\r\n                        ? moment(activeFrom).format(timeOfDayFormat)\r\n                        : '-';\r\n                    const playerName = `${playerFirstName} ${playerLastName}`;\r\n                    const amount = prizeAmountInCents ? (prizeAmountInCents / 100) : 0;\r\n                    if(!isClaimCheck && row.transactions.length === 1) {\r\n                        tableRows.push({\r\n                            date: date,\r\n                            time: time,\r\n                            player: playerName,\r\n                            referenceNumber: referenceNumber,\r\n                            amount: amount\r\n                        })\r\n                    } else if(isClaimCheck && row.transactions.length > 1) {\r\n                        tableRows.push({\r\n                            date: date,\r\n                            time: time,\r\n                            player: playerName,\r\n                            referenceNumber: referenceNumber,\r\n                            amount: amount\r\n                        })\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n        this.rejectedClaimsDetails = {tableHeader, tableRows};\r\n    }\r\n\r\n    @action fetchRejectClaims(isClaimCheck=false) {\r\n        this.isLoading = true;\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/rejectedclaims`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    this.showToast = true;\r\n                    this.errorMessage = res.error;\r\n                } else {\r\n                    const tableHeader = [\r\n                        {key: 'date', label: 'Date'},\r\n                        {key: 'time', label: 'Time'},\r\n                        {key: 'player', label: 'Player'},\r\n                        {key: 'referenceNumber', label: 'Claim Ref #'},\r\n                        {key: 'amount', label: 'Amount', type: 'currency', classes: 'currency-column'}\r\n                    ];\r\n                    if (res && res.hasOwnProperty('rejectedClaims') && res.rejectedClaims.length === 0) {\r\n                        this.showToast = true;\r\n                        this.errorMessage = 'No Rejected Claims';\r\n                        this.setRejectedClaimData(tableHeader, [])\r\n                    } else if (res && res.hasOwnProperty('rejectedClaims') && res.rejectedClaims.length > 0) {\r\n                        this.setRejectedClaimData(tableHeader, res.rejectedClaims, isClaimCheck)\r\n                    }\r\n                }\r\n                this.isLoading = false;\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n                this.isLoading = false;\r\n            });\r\n    }\r\n\r\n    @action resubmitACHPayment(claimReferenceNumber, accountNumber, routingNumber, accountType) {\r\n\r\n        const data = {\r\n            \"claimReferenceNumber\": claimReferenceNumber,\r\n            \"newAchAccount\": {\r\n                \"achAccountNumber\": accountNumber,\r\n                \"achRoutingNumber\": routingNumber,\r\n                \"achAccountType\": accountType\r\n            }\r\n        };\r\n\r\n        let url = `${config.SERVER_BASE_URL}/v1/ach/payment/resubmit`;\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.message) {\r\n                    this.successMessage = res.message;\r\n                    this.errorMessage = null;\r\n                    this.showToast = true;\r\n                } else if (res && res.error) {\r\n                    this.successMessage = null;\r\n                    this.errorMessage = res.error\r\n                    this.showToast = true;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {toJS, observable} from 'mobx';\r\n\r\nexport class MiscellaneousStore {\r\n\r\n    rootStore = null;\r\n\r\n    // Cron JOB error data\r\n    @observable notificationErrorList = [];\r\n    @observable showNotificationToast = false;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    setFailedJobDetails(data) {\r\n        if(this.notificationErrorList) {\r\n            this.notificationErrorList.push(data)\r\n        } else {\r\n            this.notificationErrorList = [data];\r\n        }\r\n        this.showNotificationToast = true;\r\n    }\r\n\r\n    toggleNotification(data) {\r\n        debugger\r\n        if(this.notificationErrorList) {\r\n            const cronJobData = JSON.parse(JSON.stringify(toJS(this.notificationErrorList)));\r\n            const index = cronJobData.findIndex(d => d.id === data.id);\r\n            cronJobData.splice(index, 1);\r\n            this.notificationErrorList = cronJobData;\r\n            this.showNotificationToast = cronJobData.length !== 0;\r\n        }\r\n    }\r\n\r\n}","import {create} from 'mobx-persist';\r\nimport {PlayerStore} from \"./PlayerStore\";\r\nimport {AuthStore} from \"./AuthStore\";\r\nimport {SettingsStore} from \"./SettingsStore\";\r\nimport {ClaimStore} from \"./ClaimStore\";\r\nimport {MiscellaneousStore} from \"./MiscellaneousStore\";\r\n\r\nconst hydrate = create({\r\n    storage: localStorage\r\n});\r\n\r\nclass RootStore {\r\n\r\n    playerStore = null;\r\n    authStore = null;\r\n    settingsStore = null;\r\n    claimStore = null;\r\n    miscellaneousStore = null;\r\n\r\n    constructor() {\r\n\r\n        this.playerStore = new PlayerStore(this);\r\n        this.authStore = new AuthStore(this);\r\n        this.settingsStore = new SettingsStore(this);\r\n        this.claimStore = new ClaimStore(this);\r\n        this.miscellaneousStore = new MiscellaneousStore(this);\r\n\r\n        Promise.all([\r\n            hydrate('auth', this.authStore),\r\n            hydrate('player', this.playerStore),\r\n            hydrate('settings', this.settingsStore),\r\n            hydrate('claim', this.claimStore),\r\n            hydrate('miscellaneous', this.miscellaneousStore)\r\n        ])\r\n            .then(() => console.log('All Stores Hydrated.'));\r\n    }\r\n\r\n}\r\n\r\nexport const rootStore = new RootStore()\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nimport {Provider} from 'mobx-react'\r\nimport Routes from './routes';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './fonts/MyriadProRegular.otf';\r\nimport {rootStore} from \"./store/RootStore\";\r\n\r\nconst Root = (props) => (\r\n    \r\n    <HashRouter>\r\n        <Routes/>\r\n    </HashRouter>\r\n);\r\n \r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider\r\n            rootStore={rootStore}\r\n            authStore={rootStore.authStore}\r\n            playerStore={rootStore.playerStore}\r\n            claimStore={rootStore.claimStore}\r\n            settingsStore={rootStore.settingsStore}\r\n            miscellaneousStore={rootStore.miscellaneousStore}\r\n        ><Root/></Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}