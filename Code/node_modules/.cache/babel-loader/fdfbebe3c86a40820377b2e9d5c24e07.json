{"ast":null,"code":"const axios = require('axios');\n\nconst makeHttpCall = async options => {\n  try {\n    let source = {\n      headers: {\n        'X-API-Key': process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY\n      }\n    };\n    options = Object.assign(options, source);\n    let response = await axios(options);\n    return response.data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const getImageType = event => {\n  console.log(event.target.value);\n};\nexport const getDocumentType = event => {\n  console.log(event.target.value);\n};\nexport const toggleHideShow = async (setToggle, toggle, playerId) => {\n  setToggle(!toggle);\n  const options = {\n    method: 'get',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/document/' + playerId\n  };\n\n  try {\n    const data = await makeHttpCall(options);\n  } catch (e) {\n    alert(e);\n  }\n};\nexport const deleteImage = uploadId => {\n  const options = {\n    method: 'delete',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/document/' + uploadId\n  };\n\n  try {\n    makeHttpCall(options);\n  } catch (e) {\n    alert(e);\n  }\n};","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/components/DisplayDocument/functions.js"],"names":["axios","require","makeHttpCall","options","source","headers","process","env","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY","Object","assign","response","data","e","Error","getImageType","event","console","log","target","value","getDocumentType","toggleHideShow","setToggle","toggle","playerId","method","url","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE","alert","deleteImage","uploadId"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,MAAMC,YAAY,GAAG,MAAOC,OAAP,IAAmB;AAEpC,MAAI;AACA,QAAIC,MAAM,GAAE;AACRC,MAAAA,OAAO,EAAE;AAAC,qBAAaC,OAAO,CAACC,GAAR,CAAYC;AAA1B;AADD,KAAZ;AAGAL,IAAAA,OAAO,GAAGM,MAAM,CAACC,MAAP,CAAcP,OAAd,EAAuBC,MAAvB,CAAV;AACA,QAAIO,QAAQ,GAAG,MAAMX,KAAK,CAACG,OAAD,CAA1B;AACA,WAAQQ,QAAQ,CAACC,IAAjB;AACH,GAPD,CAQA,OAAOC,CAAP,EAAU;AACN,UAAM,IAAIC,KAAJ,CAAUD,CAAV,CAAN;AACH;AACJ,CAbD;;AAeA,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AAEH,CAHM;AAKP,OAAO,MAAMC,eAAe,GAAIL,KAAD,IAAW;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AAEH,CAHM;AAKP,OAAO,MAAME,cAAc,GAAG,OAAOC,SAAP,EAAkBC,MAAlB,EAAyBC,QAAzB,KAAsC;AAEhEF,EAAAA,SAAS,CAAC,CAACC,MAAF,CAAT;AACA,QAAMrB,OAAO,GACb;AACIuB,IAAAA,MAAM,EAAE,KADZ;AAEIC,IAAAA,GAAG,EAAErB,OAAO,CAACC,GAAR,CAAYqB,qCAAZ,GAAkD,YAAlD,GAAgEH;AAFzE,GADA;;AAKA,MAAG;AACC,UAAMb,IAAI,GAAG,MAAMV,YAAY,CAACC,OAAD,CAA/B;AACH,GAFD,CAGA,OAAMU,CAAN,EAAQ;AACJgB,IAAAA,KAAK,CAAChB,CAAD,CAAL;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMiB,WAAW,GAAIC,QAAD,IAAc;AACrC,QAAM5B,OAAO,GACb;AACIuB,IAAAA,MAAM,EAAE,QADZ;AAEIC,IAAAA,GAAG,EAAErB,OAAO,CAACC,GAAR,CAAYqB,qCAAZ,GAAkD,YAAlD,GAAgEG;AAFzE,GADA;;AAMA,MACA;AACG7B,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACF,GAHD,CAGC,OAAMU,CAAN,EAAQ;AACLgB,IAAAA,KAAK,CAAChB,CAAD,CAAL;AACH;AAEJ,CAdM","sourcesContent":["const axios = require('axios');\r\n\r\n\r\nconst makeHttpCall = async (options) => {\r\n\r\n    try {\r\n        let source ={\r\n            headers: {'X-API-Key': process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY}\r\n        }\r\n        options = Object.assign(options, source)\r\n        let response = await axios(options);\r\n        return  response.data;\r\n    }\r\n    catch (e) {\r\n        throw new Error(e);\r\n    }\r\n}\r\n\r\nexport const getImageType = (event) => {\r\n    console.log(event.target.value);\r\n\r\n}\r\n\r\nexport const getDocumentType = (event) => {\r\n    console.log(event.target.value);\r\n\r\n}\r\n\r\nexport const toggleHideShow = async (setToggle, toggle,playerId) => {\r\n   \r\n    setToggle(!toggle);\r\n    const options =\r\n    {\r\n        method: 'get',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/document/'+ playerId\r\n    }\r\n    try{\r\n        const data = await makeHttpCall(options);    \r\n    } \r\n    catch(e){\r\n        alert(e);\r\n    }\r\n}\r\n\r\nexport const deleteImage = (uploadId) => {\r\n    const options =\r\n    {\r\n        method: 'delete',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/document/'+ uploadId\r\n    }\r\n\r\n    try\r\n    { \r\n       makeHttpCall(options);\r\n    }catch(e){\r\n        alert(e);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}