{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import PrescriptionDetailedForm from'../../component/PrescriptionDetailedForm';import CouponsTiles from'../../component/CouponsTiles';import{Link}from'react-router-dom';//import styles from '../../../../../styles/ChooseYourCoupon.module.scss'; used in version 1\n/**\r\n * @Pages\r\n * \r\n * List of coupons based on prescriptin details\r\n * uses coupon service\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language the language to display the data \r\n * @param prescriptionFromRoute the prescription passed by the Route \r\n * @param location the location where to search\r\n * \r\n * uses\r\n * \r\n * @component CouponTiles\r\n * @component PrescriptionDetailedForm\r\n */var allTheData;var ChooseYourCoupon=function ChooseYourCoupon(_ref){var language=_ref.language,prescriptionFromRoute=_ref.prescriptionFromRoute,location=_ref.location;location=JSON.parse(location);prescriptionFromRoute=JSON.parse(prescriptionFromRoute);console.log('location',location,prescriptionFromRoute);var pharmacyText={_text:\"\"};var locatedDrugStrength;var locatedDrugQty;var locatedDrugForm;var drug={ndcCode:pharmacyText,brandGenericIndicator:pharmacyText,gsn:pharmacyText,drugRanking:pharmacyText,quantity:pharmacyText,quantityRacking:pharmacyText};var pharmacy={name:pharmacyText,streetAddress:pharmacyText,city:pharmacyText,state:pharmacyText,zipCode:pharmacyText,latitude:pharmacyText,longitude:pharmacyText,hoursOfOperatio:pharmacyText,phone:pharmacyText,npi:pharmacyText,chainCode:pharmacyText,distance:pharmacyText};var pricing={price:pharmacyText,priceBasis:pharmacyText,usualAndCustomaryPrice:pharmacyText,macPrice:pharmacyText,awpPrice:pharmacyText};var locatedDrug=[];var locatedDrugName={drugName:pharmacyText,brandGenericIndicator:pharmacyText,isSelected:pharmacyText};var drugs={locatedDrug:locatedDrug};var forms={locatedDrugForm:[]};var names={locatedDrugName:locatedDrugName};var quantities={locatedDrugQty:[]};var strengths={locatedDrugStrength:[]};var couponData={drugs:drugs,forms:forms,names:names,quantities:quantities,strengths:strengths};var _useState=useState(couponData),_useState2=_slicedToArray(_useState,2),coupons=_useState2[0],setCoupons=_useState2[1];var _useState3=useState({form:\"\",dosage:\"\",quantity:\"\"}),_useState4=_slicedToArray(_useState3,2),valuesForFilter=_useState4[0],setValuesForFilter=_useState4[1];var filterValues={form:\"\",dosage:\"\",quantity:\"\"};var setValuesForFilterCoupons=function setValuesForFilterCoupons(value){setValuesForFilter(Object.assign(valuesForFilter,value));//setValuesForFilter(Object.assign(valuesForFilter,value));\n//fileterCoupons();\n};var fileterCoupons=function fileterCoupons(){//coupons.drugs.locatedDrug = allTheData.drugs.locatedDrug.filter((e:LocatedDrugInterface) => e.drug.quantity._text === valuesForFilter.quantity);\nsetCoupons(JSON.parse(JSON.stringify(coupons)));};/**\r\n   * returns to the location pages \r\n   * \r\n   */var returnToLocation=function returnToLocation(){// router.push\n//   (\n//     {\n//       pathname: '/src/components/Home',\n//       query: {\n//         component: 'location',\n//         prescriptions: prescriptionFromRoute,\n//         location: location,\n//         language: language\n//       },\n//     })\n};var arr=[];/**\r\n   * helper function for development \r\n   * filles the coupons\r\n   * \r\n   * @component CouponTiles \r\n   */var fillCoupon=function fillCoupon(){for(var i=0;i<7;i++){arr.push(/*#__PURE__*/React.createElement(CouponsTiles,{language:language,prescription:prescriptionFromRoute,couponsData:prescriptionFromRoute}));}};/**\r\n   * Call to the service Prescription to retreve the prescriptionsfordatalist available\r\n   * @useState  setPrescriptionDetailsForPrescriptionDetailComponent\r\n   * @param setPrescriptionDetails // passed in from the function\r\n   * @useState\r\n   *  \r\n   */ // \nfillCoupon();// Object.keys(coupons).length <= 0 && getCoupons({ variables: { prescription: prescriptionFromRoute.search_name, latitude: location.latitude, longitude: location.longitude }, context: { clientName: 'coupon' } })\n//allTheData === undefined && getCoupons({ variables: { prescription: prescriptionFromRoute.search_name, latitude: location.latitude, longitude: location.longitude }, context: { clientName: 'coupon' } })\nreturn/*#__PURE__*/React.createElement(\"div\",null,(language==='english'||language===undefined)&&/*#__PURE__*/React.createElement(React.Fragment,null,\" \",/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(\"span\",null,\"Step 3 of 3: \"),\"Choose Your Coupon\")),language==='spanish'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(\"span\",null,'<Spanish>',\" Step 3 of 3: \"),\"Choose Your Coupon\")),/*#__PURE__*/React.createElement(\"div\",{className:\"location cursor\"},(language==='english'||language===undefined)&&/*#__PURE__*/React.createElement(React.Fragment,null,\"Location: \",location.myLocation,\" \",/*#__PURE__*/React.createElement(Link,{to:{pathname:'/src/components/Home',query:{component:'location',prescriptions:prescriptionFromRoute,location:location,language:language}}},\"Clear\")),language==='spanish'&&/*#__PURE__*/React.createElement(React.Fragment,null,'<Spanish>',\"Location: \",location,\" \",/*#__PURE__*/React.createElement(\"u\",{onClick:returnToLocation},\"Clear\"))),coupons['drugs'].locatedDrug.length>0&&/*#__PURE__*/React.createElement(PrescriptionDetailedForm,{language:language,disabled:false,coupons:coupons,prescriptionName:prescriptionFromRoute,filterCoupons:fileterCoupons,setValuesForFilterCoupons:setValuesForFilterCoupons}),/*#__PURE__*/React.createElement(\"div\",{className:\"list_info\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",null,\"Sorted by: \"),\"Price\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",null,\"Number of Results: \"),\"3\"),/*#__PURE__*/React.createElement(\"p\",{className:\"radius\"},/*#__PURE__*/React.createElement(\"span\",null,\"Radius: \"),\"15 miles\")),/*#__PURE__*/React.createElement(\"div\",null,coupons['drugs'].locatedDrug.map(function(element){if(element.drug.quantity._text===valuesForFilter.quantity)return/*#__PURE__*/React.createElement(CouponsTiles,{language:language,prescription:prescriptionFromRoute,couponsData:element});})));};export default ChooseYourCoupon;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/pages/src/components/Home/ChooseYourCoupon/index.tsx"],"names":["React","useState","PrescriptionDetailedForm","CouponsTiles","Link","allTheData","ChooseYourCoupon","language","prescriptionFromRoute","location","JSON","parse","console","log","pharmacyText","_text","locatedDrugStrength","locatedDrugQty","locatedDrugForm","drug","ndcCode","brandGenericIndicator","gsn","drugRanking","quantity","quantityRacking","pharmacy","name","streetAddress","city","state","zipCode","latitude","longitude","hoursOfOperatio","phone","npi","chainCode","distance","pricing","price","priceBasis","usualAndCustomaryPrice","macPrice","awpPrice","locatedDrug","locatedDrugName","drugName","isSelected","drugs","forms","names","quantities","strengths","couponData","coupons","setCoupons","form","dosage","valuesForFilter","setValuesForFilter","filterValues","setValuesForFilterCoupons","value","Object","assign","fileterCoupons","stringify","returnToLocation","arr","fillCoupon","i","push","undefined","myLocation","pathname","query","component","prescriptions","length","map","element"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,wBAAP,KAAqC,0CAArC,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA;AAuGA;;;;;;;;;;;;;;;;;GAmBC,GAAIC,CAAAA,UAAJ,CACD,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAuD,IAApDC,CAAAA,QAAoD,MAApDA,QAAoD,CAA1CC,qBAA0C,MAA1CA,qBAA0C,CAAnBC,QAAmB,MAAnBA,QAAmB,CAE1EA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX,CACAD,qBAAqB,CAAGE,IAAI,CAACC,KAAL,CAAWH,qBAAX,CAAxB,CACAI,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAuBJ,QAAvB,CAAgCD,qBAAhC,EAGJ,GAAIM,CAAAA,YAAmC,CAAG,CACxCC,KAAK,CAAE,EADiC,CAA1C,CAIA,GAAIC,CAAAA,mBAAJ,CAEA,GAAIC,CAAAA,cAAJ,CAEA,GAAIC,CAAAA,eAAJ,CAEA,GAAIC,CAAAA,IAAmB,CAAG,CACxBC,OAAO,CAAEN,YADe,CAExBO,qBAAqB,CAAEP,YAFC,CAGxBQ,GAAG,CAAER,YAHmB,CAIxBS,WAAW,CAAET,YAJW,CAKxBU,QAAQ,CAAEV,YALc,CAMxBW,eAAe,CAAEX,YANO,CAA1B,CASA,GAAIY,CAAAA,QAA2B,CAAG,CAChCC,IAAI,CAAEb,YAD0B,CAEhCc,aAAa,CAAEd,YAFiB,CAGhCe,IAAI,CAAEf,YAH0B,CAIhCgB,KAAK,CAAEhB,YAJyB,CAKhCiB,OAAO,CAAEjB,YALuB,CAMhCkB,QAAQ,CAAElB,YANsB,CAOhCmB,SAAS,CAAEnB,YAPqB,CAQhCoB,eAAe,CAAEpB,YARe,CAShCqB,KAAK,CAAErB,YATyB,CAUhCsB,GAAG,CAAEtB,YAV2B,CAWhCuB,SAAS,CAAEvB,YAXqB,CAYhCwB,QAAQ,CAAExB,YAZsB,CAAlC,CAeA,GAAIyB,CAAAA,OAAO,CAAG,CACZC,KAAK,CAAE1B,YADK,CAEZ2B,UAAU,CAAE3B,YAFA,CAGZ4B,sBAAsB,CAAE5B,YAHZ,CAIZ6B,QAAQ,CAAE7B,YAJE,CAKZ8B,QAAQ,CAAE9B,YALE,CAAd,CASA,GAAI+B,CAAAA,WAAmC,CAAG,EAA1C,CAEA,GAAIC,CAAAA,eAA4C,CAAG,CACjDC,QAAQ,CAAEjC,YADuC,CAEjDO,qBAAqB,CAAEP,YAF0B,CAGjDkC,UAAU,CAAElC,YAHqC,CAAnD,CAMA,GAAImC,CAAAA,KAAqB,CAAG,CAC1BJ,WAAW,CAAXA,WAD0B,CAA5B,CAGA,GAAIK,CAAAA,KAA+B,CAAG,CACpChC,eAAe,CAAC,EADoB,CAAtC,CAGA,GAAIiC,CAAAA,KAA+B,CAAG,CACpCL,eAAe,CAAfA,eADoC,CAAtC,CAIA,GAAIM,CAAAA,UAAmC,CAAG,CACxCnC,cAAc,CAAC,EADyB,CAA1C,CAIA,GAAIoC,CAAAA,SAAuC,CAAG,CAC5CrC,mBAAmB,CAAC,EADwB,CAA9C,CAGA,GAAIsC,CAAAA,UAAoC,CAAG,CACzCL,KAAK,CAALA,KADyC,CAEzCC,KAAK,CAALA,KAFyC,CAGzCC,KAAK,CAALA,KAHyC,CAIzCC,UAAU,CAAVA,UAJyC,CAKzCC,SAAS,CAATA,SALyC,CAA3C,CA3E8E,cAmFhDpD,QAAQ,CAA2BqD,UAA3B,CAnFwC,wCAmFvEC,OAnFuE,eAmF9DC,UAnF8D,8BAqF/BvD,QAAQ,CAAC,CACtDwD,IAAI,CAAC,EADiD,CAEtDC,MAAM,CAAC,EAF+C,CAGtDlC,QAAQ,CAAC,EAH6C,CAAD,CArFuB,yCAqFtEmC,eArFsE,eAqFtDC,kBArFsD,eA2F/E,GAAKC,CAAAA,YAAY,CAAG,CAACJ,IAAI,CAAC,EAAN,CACpBC,MAAM,CAAC,EADa,CAEpBlC,QAAQ,CAAC,EAFW,CAApB,CAGC,GAAMsC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,KAAD,CAAc,CAE9CH,kBAAkB,CAACI,MAAM,CAACC,MAAP,CAAcN,eAAd,CAA+BI,KAA/B,CAAD,CAAlB,CACI;AAEA;AAEL,CAPD,CAQA,GAAMG,CAAAA,cAAc,CAAE,QAAhBA,CAAAA,cAAgB,EAAI,CAExB;AACAV,UAAU,CAAC9C,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACyD,SAAL,CAAeZ,OAAf,CAAX,CAAD,CAAV,CAED,CALD,CAQA;;;KAIA,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,CAbD,CAcA,GAAIC,CAAAA,GAAG,CAAG,EAAV,CAEA;;;;;KAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAEvB,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1BF,GAAG,CAACG,IAAJ,cACE,oBAAC,YAAD,EAAc,QAAQ,CAAEjE,QAAxB,CAAkC,YAAY,CAAEC,qBAAhD,CAAuE,WAAW,CAAEA,qBAApF,EADF,EAGD,CAGF,CATD,CAWA;;;;;;KAnJ8E,CA0J9E;AAEA8D,UAAU,GACV;AACA;AAGA,mBACE,+BAOG,CAAC/D,QAAQ,GAAK,SAAb,EAA0BA,QAAQ,GAAKkE,SAAxC,gBAAsD,yDAAG,2CAAI,gDAAJ,sBAAH,CAPzD,CAQGlE,QAAQ,GAAK,SAAb,eAA0B,qDAAE,2CAAI,gCAAO,WAAP,kBAAJ,sBAAF,CAR7B,cASE,2BAAK,SAAS,CAAC,iBAAf,EACG,CAACA,QAAQ,GAAK,SAAb,EAA0BA,QAAQ,GAAKkE,SAAxC,gBACC,qDACahE,QAAQ,CAACiE,UADtB,kBACkC,oBAAC,IAAD,EAAM,EAAE,CAAE,CAChCC,QAAQ,CAAE,sBADsB,CAE1CC,KAAK,CAAC,CACNC,SAAS,CAAE,UADL,CAENC,aAAa,CAAEtE,qBAFT,CAGNC,QAAQ,CAAEA,QAHJ,CAINF,QAAQ,CAAEA,QAJJ,CAFoC,CAAV,UADlC,CAFJ,CAcGA,QAAQ,GAAK,SAAb,eACC,wCACG,WADH,cAC0BE,QAD1B,kBACoC,yBAAG,OAAO,CAAE2D,gBAAZ,UADpC,CAfJ,CATF,CA6BIb,OAAO,CAAC,OAAD,CAAP,CAAiBV,WAAjB,CAA6BkC,MAA7B,CAAsC,CAAtC,eAA2C,oBAAC,wBAAD,EAA0B,QAAQ,CAAExE,QAApC,CACnB,QAAQ,CAAE,KADS,CAEnB,OAAO,CAAEgD,OAFU,CAGnB,gBAAgB,CAAE/C,qBAHC,CAInB,aAAa,CAAE0D,cAJI,CAKnB,yBAAyB,CAAEJ,yBALR,EA7B/C,cAmCE,2BAAK,SAAS,CAAC,WAAf,eACE,0CAAG,8CAAH,SADF,cAEE,0CAAG,sDAAH,KAFF,cAGE,yBAAG,SAAS,CAAC,QAAb,eAAsB,2CAAtB,YAHF,CAnCF,cAwCE,+BACGP,OAAO,CAAC,OAAD,CAAP,CAAiBV,WAAjB,CAA6BmC,GAA7B,CAAiC,SAAAC,OAAO,CAAG,CACxC,GAAGA,OAAO,CAAC9D,IAAR,CAAaK,QAAb,CAAsBT,KAAtB,GAAgC4C,eAAe,CAACnC,QAAnD,CACI,mBAAO,oBAAC,YAAD,EAAc,QAAQ,CAAEjB,QAAxB,CAAkC,YAAY,CAAEC,qBAAhD,CAAuE,WAAW,CAAEyE,OAApF,EAAP,CAAuG,CAF9G,CADH,CAxCF,CADF,CA6FD,CA9PD,CAgQA,cAAe3E,CAAAA,gBAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PrescriptionDetailedForm from '../../component/PrescriptionDetailedForm';\r\nimport CouponsTiles from '../../component/CouponsTiles';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import styles from '../../../../../styles/ChooseYourCoupon.module.scss'; used in version 1\r\n\r\n\r\n\r\nexport interface CouponStructureInterface {\r\n  drugs: DrugsInterface;\r\n  forms: LocatedDrugFormInterface;\r\n  names: LocatedDrugNameInterface;\r\n  quantities: LocatedDrugQtyInterface;\r\n  strengths: LocatedDrugStrengthInterface;\r\n}\r\nexport interface LocatedDrugFormInterface {\r\n  locatedDrugForm: GetLocatedDrugFormInterface[];\r\n}\r\nexport interface LocatedDrugNameInterface {\r\n  locatedDrugName: GetLocatedDrugNameInterface;\r\n}\r\nexport interface DrugsInterface {\r\n  locatedDrug:LocatedDrugInterface[];\r\n}\r\nexport interface LocatedDrugQtyInterface {\r\n  locatedDrugQty: GetLocatedDrugQtyInterface[]\r\n\r\n}\r\nexport interface LocatedDrugStrengthInterface {\r\n  locatedDrugStrength: GetLocatedDrugStrengthInterface[];\r\n}\r\nexport interface GetLocatedDrugStrengthInterface {\r\n  strength: PharmacyTextInterface;\r\n  gsn: PharmacyTextInterface;\r\n  isSelected: PharmacyTextInterface;\r\n  ranking: PharmacyTextInterface;\r\n}\r\n\r\n\r\nexport interface GetLocatedDrugQtyInterface {\r\n  quantity: PharmacyTextInterface\r\n  quantityUomr: PharmacyTextInterface\r\n  gsn: PharmacyTextInterface\r\n  isSelected: PharmacyTextInterface\r\n  ranking: PharmacyTextInterface\r\n}\r\n\r\nexport interface GetLocatedDrugFormInterface {\r\n  form: PharmacyTextInterface;\r\n  gsn: PharmacyTextInterface;\r\n  isSelected: PharmacyTextInterface;\r\n  ranking: PharmacyTextInterface;\r\n  awpPrice: PharmacyTextInterface;\r\n}\r\n\r\nexport interface GetLocatedDrugNameInterface {\r\n  drugName: PharmacyTextInterface\r\n  brandGenericIndicator: PharmacyTextInterface\r\n  isSelected: PharmacyTextInterface\r\n}\r\n\r\n\r\n\r\nexport interface LocatedDrugInterface {\r\n  pharmacy: PharmacyInterface\r\n  drug: DrugInterface\r\n  pricing: PricingInterface\r\n}\r\n\r\nexport interface PharmacyInterface {\r\n  name: PharmacyTextInterface;\r\n  streetAddress: PharmacyTextInterface;\r\n  city: PharmacyTextInterface;\r\n  state: PharmacyTextInterface;\r\n  zipCode: PharmacyTextInterface;\r\n  latitude: PharmacyTextInterface;\r\n  longitude: PharmacyTextInterface;\r\n  hoursOfOperatio: PharmacyTextInterface;\r\n  phone: PharmacyTextInterface;\r\n  npi: PharmacyTextInterface;\r\n  chainCode: PharmacyTextInterface;\r\n  distance: PharmacyTextInterface;\r\n}\r\n\r\nexport interface DrugInterface {\r\n  ndcCode: PharmacyTextInterface;\r\n  brandGenericIndicator: PharmacyTextInterface;\r\n  gsn: PharmacyTextInterface;\r\n  drugRanking: PharmacyTextInterface;\r\n  quantity: PharmacyTextInterface;\r\n  quantityRacking: PharmacyTextInterface;\r\n}\r\n\r\nexport interface PricingInterface {\r\n  price: PharmacyTextInterface;\r\n  priceBasis: PharmacyTextInterface;\r\n  usualAndCustomaryPrice: PharmacyTextInterface;\r\n  macPrice: PharmacyTextInterface;\r\n  awpPrice: PharmacyTextInterface;\r\n}\r\nexport interface PharmacyTextInterface {\r\n  _text: string;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @Pages\r\n * \r\n * List of coupons based on prescriptin details\r\n * uses coupon service\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language the language to display the data \r\n * @param prescriptionFromRoute the prescription passed by the Route \r\n * @param location the location where to search\r\n * \r\n * uses\r\n * \r\n * @component CouponTiles\r\n * @component PrescriptionDetailedForm\r\n */\r\n\r\n let allTheData:CouponStructureInterface;\r\nconst ChooseYourCoupon = ({ language, prescriptionFromRoute, location }:any) => {\r\n\r\n      location = JSON.parse(location);  \r\n      prescriptionFromRoute = JSON.parse(prescriptionFromRoute);\r\n      console.log('location',location,prescriptionFromRoute);\r\n  \r\n\r\n  let pharmacyText: PharmacyTextInterface = {\r\n    _text: \"\"\r\n  }\r\n\r\n  let locatedDrugStrength: GetLocatedDrugStrengthInterface[];\r\n\r\n  let locatedDrugQty: GetLocatedDrugQtyInterface[];\r\n\r\n  let locatedDrugForm: GetLocatedDrugFormInterface[];\r\n\r\n  let drug: DrugInterface = {\r\n    ndcCode: pharmacyText,\r\n    brandGenericIndicator: pharmacyText,\r\n    gsn: pharmacyText,\r\n    drugRanking: pharmacyText,\r\n    quantity: pharmacyText,\r\n    quantityRacking: pharmacyText\r\n  }\r\n\r\n  let pharmacy: PharmacyInterface = {\r\n    name: pharmacyText,\r\n    streetAddress: pharmacyText,\r\n    city: pharmacyText,\r\n    state: pharmacyText,\r\n    zipCode: pharmacyText,\r\n    latitude: pharmacyText,\r\n    longitude: pharmacyText,\r\n    hoursOfOperatio: pharmacyText,\r\n    phone: pharmacyText,\r\n    npi: pharmacyText,\r\n    chainCode: pharmacyText,\r\n    distance: pharmacyText,\r\n  }\r\n\r\n  let pricing = {\r\n    price: pharmacyText,\r\n    priceBasis: pharmacyText,\r\n    usualAndCustomaryPrice: pharmacyText,\r\n    macPrice: pharmacyText,\r\n    awpPrice: pharmacyText,\r\n  }\r\n\r\n\r\n  let locatedDrug: LocatedDrugInterface[] = []; \r\n\r\n  let locatedDrugName: GetLocatedDrugNameInterface = {\r\n    drugName: pharmacyText,\r\n    brandGenericIndicator: pharmacyText,\r\n    isSelected: pharmacyText\r\n  }\r\n\r\n  let drugs: DrugsInterface = {\r\n    locatedDrug\r\n  };\r\n  let forms: LocatedDrugFormInterface = {\r\n    locatedDrugForm:[]\r\n  };\r\n  let names: LocatedDrugNameInterface = {\r\n    locatedDrugName\r\n\r\n  };\r\n  let quantities: LocatedDrugQtyInterface = {\r\n    locatedDrugQty:[]\r\n  };\r\n\r\n  let strengths: LocatedDrugStrengthInterface = {\r\n    locatedDrugStrength:[]\r\n  };\r\n  let couponData: CouponStructureInterface = {\r\n    drugs,\r\n    forms,\r\n    names,\r\n    quantities,\r\n    strengths\r\n\r\n  }\r\n  const [coupons, setCoupons] = useState<CouponStructureInterface>(couponData);\r\n \r\n  const [ valuesForFilter,setValuesForFilter ] = useState({\r\n    form:\"\",\r\n    dosage:\"\",\r\n    quantity:\"\"                 \r\n});\r\n  \r\n let  filterValues = {form:\"\",\r\n dosage:\"\",\r\n quantity:\"\"  }\r\n  const setValuesForFilterCoupons = (value:any) =>{\r\n         \r\n    setValuesForFilter(Object.assign(valuesForFilter ,value));\r\n        //setValuesForFilter(Object.assign(valuesForFilter,value));\r\n      \r\n        //fileterCoupons();\r\n                \r\n  }\r\n  const fileterCoupons =()=>{\r\n\r\n    //coupons.drugs.locatedDrug = allTheData.drugs.locatedDrug.filter((e:LocatedDrugInterface) => e.drug.quantity._text === valuesForFilter.quantity);\r\n    setCoupons(JSON.parse(JSON.stringify(coupons)));\r\n            \r\n  }\r\n\r\n\r\n  /**\r\n   * returns to the location pages \r\n   * \r\n   */\r\n  const returnToLocation = () => {\r\n    // router.push\r\n    //   (\r\n    //     {\r\n    //       pathname: '/src/components/Home',\r\n    //       query: {\r\n    //         component: 'location',\r\n    //         prescriptions: prescriptionFromRoute,\r\n    //         location: location,\r\n    //         language: language\r\n    //       },\r\n    //     })\r\n\r\n  }\r\n  let arr = [];\r\n\r\n  /**\r\n   * helper function for development \r\n   * filles the coupons\r\n   * \r\n   * @component CouponTiles \r\n   */\r\n  const fillCoupon = () => {\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      arr.push(\r\n        <CouponsTiles language={language} prescription={prescriptionFromRoute} couponsData={prescriptionFromRoute} />);\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Call to the service Prescription to retreve the prescriptionsfordatalist available\r\n   * @useState  setPrescriptionDetailsForPrescriptionDetailComponent\r\n   * @param setPrescriptionDetails // passed in from the function\r\n   * @useState\r\n   *  \r\n   */\r\n  // \r\n  \r\n  fillCoupon();\r\n  // Object.keys(coupons).length <= 0 && getCoupons({ variables: { prescription: prescriptionFromRoute.search_name, latitude: location.latitude, longitude: location.longitude }, context: { clientName: 'coupon' } })\r\n  //allTheData === undefined && getCoupons({ variables: { prescription: prescriptionFromRoute.search_name, latitude: location.latitude, longitude: location.longitude }, context: { clientName: 'coupon' } })\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      {/**\r\n         * refrencing version of: 1/28/2021\r\n         * source: https://github.com/emilynorton?tab=repositories\r\n         */}\r\n\r\n      {(language === 'english' || language === undefined) && <> <h3><span>Step 3 of 3: </span>Choose Your Coupon</h3></>}\r\n      {language === 'spanish' && <><h3><span>{'<Spanish>'} Step 3 of 3: </span>Choose Your Coupon</h3></>}\r\n      <div className='location cursor'>\r\n        {(language === 'english' || language === undefined) &&\r\n          <>\r\n            Location: {location.myLocation} <Link to={{\r\n                      pathname: '/src/components/Home',\r\n            query:{\r\n            component: 'location',\r\n            prescriptions: prescriptionFromRoute,\r\n            location: location,\r\n            language: language}\r\n          }}>Clear</Link>\r\n          </>\r\n\r\n        }\r\n        {language === 'spanish' &&\r\n          <>\r\n            {'<Spanish>'}Location: {location} <u onClick={returnToLocation}>Clear</u>\r\n          </>\r\n        }\r\n      </div>\r\n       {coupons['drugs'].locatedDrug.length > 0 && <PrescriptionDetailedForm language={language} \r\n                                disabled={false}\r\n                                coupons={coupons}                               \r\n                                prescriptionName={prescriptionFromRoute}\r\n                                filterCoupons={fileterCoupons}\r\n                                setValuesForFilterCoupons={setValuesForFilterCoupons} /> }\r\n      <div className=\"list_info\">\r\n        <p><span>Sorted by: </span>Price</p>\r\n        <p><span>Number of Results: </span>3</p>\r\n        <p className=\"radius\"><span>Radius: </span>15 miles</p>\r\n      </div>\r\n      <div>        \r\n        {coupons['drugs'].locatedDrug.map(element =>{  \r\n            if(element.drug.quantity._text === valuesForFilter.quantity)              \r\n                return <CouponsTiles language={language} prescription={prescriptionFromRoute} couponsData={element} />})}\r\n      </div>\r\n\r\n\r\n      \r\n        \r\n        {/* used in version 1 with wire frames\r\n        // version 1 from wire frames\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n        // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n\r\n        \r\n        <span className={styles.desktop_main_left_find_prescription_home_title} >\r\n        {(language === 'english' ||  language === undefined) && 'Step 3: Choose Your Coupon'}\r\n        {language === 'spanish' &&  '<Spanish>Step 3: Choose Your Coupon'} \r\n          \r\n          \r\n          \r\n        </span>\r\n        <div className={styles.desktop_main_left_location_caption}>\r\n        {(language === 'english' ||  language === undefined) && \r\n        <>\r\n          In { location } <u onClick={returnToLocation}>Change Location</u> \r\n        </>\r\n        \r\n        }\r\n        {language === 'spanish' &&  \r\n        <>\r\n         {'<Spanish>'}  In { location } <u onClick={returnToLocation}>Change Location</u> \r\n        </>        \r\n        }\r\n        </div>\r\n        <PrescriptionDetailedForm language={language} disabled={true}  prescriptionFromRoute={prescriptionFromRoute}   />\r\n        <br />\r\n        <div className={styles.desktop_choose_your_coupon_sort}>\r\n        {(language === 'english' ||  language === undefined) && 'Sorted by: Price'}\r\n        {language === 'spanish' &&  'Sorted by: Price'}          \r\n        </div>\r\n        <div className={styles.desktop_choose_your_coupon_list_container}>\r\n            {arr}\r\n                \r\n        </div>\r\n\r\n    </div> */}\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ChooseYourCoupon;"]},"metadata":{},"sourceType":"module"}