{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Layout\\\\AuthLayoutHOC.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Toast } from 'react-bootstrap';\nimport Header from \"../Header/header\";\nimport Sidebar from \"../Sidebar\";\nimport './AuthLayoutHOC.css';\nimport BackArrow from \"../components/Icons/backArrow\";\nimport { inject, observer } from \"mobx-react\";\nimport AppToast from \"../toast\";\nimport Spinner from \"../Spinner\";\nimport config from \"../config\";\n\nconst AuthLayoutHOC = WrappedComponent => {\n  var _dec, _class, _temp;\n\n  let HOC = (_dec = inject('playerStore', 'claimStore', 'authStore', 'miscellaneousStore'), _dec(_class = observer(_class = (_temp = class HOC extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.onBackButtonClick = () => {\n        if (this.state.isUpdate) {\n          this.setState({\n            showBackConfirm: true\n          });\n        } else {\n          this.props.playerStore.clearTicketHistorySearchResults();\n          this.props.playerStore.clearUserAuditActionSearchResults();\n          this.props.playerStore.clearEventHistorySearchResults();\n          this.props.history.goBack();\n        }\n      };\n\n      this.onHomeButtonClick = () => {\n        this.props.history.push('/dashboard');\n      };\n\n      this.handleUpdate = flag => {\n        this.setState({\n          isUpdate: flag\n        });\n      };\n\n      this.handlePopup = flag => {\n        flag ? this.props.history.goBack() : this.setState({\n          showBackConfirm: false\n        });\n      };\n\n      this.handleToastClose = () => {\n        this.props.playerStore.setToastErrorSuccessMessage(false, '', '');\n        this.props.claimStore.resetToast();\n      };\n\n      this.toggleCronJobToast = details => {\n        this.props.miscellaneousStore.toggleNotification(details);\n      };\n\n      this.handleDetailViewClick = (event, details) => {\n        alert('Details page under construction');\n      };\n\n      this.state = {\n        isUpdate: false,\n        showBackConfirm: false\n      };\n    }\n\n    render() {\n      const customWidth = `${window.outerWidth - 255}px`;\n      const customStyle = {\n        width: customWidth\n      };\n      const {\n        showBackConfirm\n      } = this.state;\n      const {\n        showMainToast,\n        mainErrorMessage,\n        mainSuccessMessage,\n        isSpinnerLoading\n      } = this.props.playerStore;\n      const {\n        isLoading,\n        selectedBatchId,\n        selectedRejectReferenceNumber,\n        showToast,\n        errorMessage,\n        successMessage\n      } = this.props.claimStore;\n      const {\n        showNotificationToast,\n        notificationErrorList\n      } = this.props.miscellaneousStore;\n      let title = this.props.title || 'Title';\n\n      if (this.props.history.location.pathname.startsWith('/player/hub')) {\n        title = this.props.playerStore.titleText || 'Title';\n      } else if (this.props.history.location.pathname.startsWith('/user/audit')) {\n        title = this.props.playerStore.UserNameTitleText || 'Title';\n      } else if (this.props.history.location.pathname.startsWith(`/claim/${this.props.playerStore.selectedClaimId}/paymenthistory`)) {\n        title = `Transaction ${this.props.playerStore.paymentDetails.transactionId}`;\n      } else if (this.props.history.location.pathname.startsWith(`/claim/${this.props.playerStore.selectedClaimId}`)) {\n        title = `Claim ${this.props.playerStore.selectedClaimId}`;\n      } else if (this.props.history.location.pathname.startsWith('/finance/claims/batch/details')) {\n        title = `Batch ${selectedBatchId}`;\n      } else if (this.props.history.location.pathname.startsWith('/finance/claims/reject/details')) {\n        title = `Reject File ${selectedRejectReferenceNumber}`;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"auth-app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }), isSpinnerLoading || isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 54\n        }\n      }) : null, notificationErrorList && notificationErrorList.length ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cron-job-toast\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }\n      }, notificationErrorList.map((item, index) => {\n        return /*#__PURE__*/React.createElement(Toast, {\n          show: showNotificationToast,\n          onClose: () => this.toggleCronJobToast(item),\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 44\n          }\n        }, /*#__PURE__*/React.createElement(Toast.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          className: \"mr-auto\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 45\n          }\n        }, item.title)), /*#__PURE__*/React.createElement(Toast.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 45\n          }\n        }, item.errorMessage), /*#__PURE__*/React.createElement(\"a\", {\n          onClick: e => this.handleDetailViewClick(e, item),\n          href: \"javascript:void(0)\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 45\n          }\n        }, \"Click here for more details\")));\n      })) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"auth-app-sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"auth-app-sidebar-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"home-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"home-button-header\"\n        /*onClick={() => this.toggleList()}*/\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dd-header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/icons/home-Icon.svg\",\n        onClick: () => this.onHomeButtonClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dd-label\",\n        onClick: () => this.onHomeButtonClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 41\n        }\n      }, \"Home\")))), /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vertical-separator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"auth-app-center-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app-center-panel-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, showMainToast ? /*#__PURE__*/React.createElement(AppToast, {\n        showToast: showMainToast,\n        message: mainSuccessMessage ? mainSuccessMessage : mainErrorMessage,\n        isSuccessMessage: mainSuccessMessage !== null,\n        handleClose: () => this.handleToastClose(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }) : null, showToast ? /*#__PURE__*/React.createElement(AppToast, {\n        showToast: showToast,\n        message: successMessage ? successMessage : errorMessage,\n        isSuccessMessage: successMessage !== null,\n        handleClose: () => this.handleToastClose(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"title-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }, title)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-info-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, this.props.showBackButton ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"back-arrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(BackArrow, {\n        color: \"#FFFFFF\",\n        onClick: () => this.onBackButtonClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 45\n        }\n      })) : null), /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({\n        showBackConfirm: showBackConfirm,\n        handlePopup: this.handlePopup,\n        onUpdate: this.handleUpdate\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      })))));\n    }\n\n  }, _temp)) || _class) || _class);\n  return HOC;\n};\n\nAuthLayoutHOC.defaultProps = {\n  showBackButton: true\n};\nAuthLayoutHOC.propTypes = {\n  showBackButton: PropTypes.bool\n};\nexport default AuthLayoutHOC;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Layout/AuthLayoutHOC.js"],"names":["React","PropTypes","Toast","Header","Sidebar","BackArrow","inject","observer","AppToast","Spinner","config","AuthLayoutHOC","WrappedComponent","HOC","Component","constructor","props","onBackButtonClick","state","isUpdate","setState","showBackConfirm","playerStore","clearTicketHistorySearchResults","clearUserAuditActionSearchResults","clearEventHistorySearchResults","history","goBack","onHomeButtonClick","push","handleUpdate","flag","handlePopup","handleToastClose","setToastErrorSuccessMessage","claimStore","resetToast","toggleCronJobToast","details","miscellaneousStore","toggleNotification","handleDetailViewClick","event","alert","render","customWidth","window","outerWidth","customStyle","width","showMainToast","mainErrorMessage","mainSuccessMessage","isSpinnerLoading","isLoading","selectedBatchId","selectedRejectReferenceNumber","showToast","errorMessage","successMessage","showNotificationToast","notificationErrorList","title","location","pathname","startsWith","titleText","UserNameTitleText","selectedClaimId","paymentDetails","transactionId","length","map","item","index","e","showBackButton","defaultProps","propTypes","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Toast} from 'react-bootstrap';\r\nimport Header from \"../Header/header\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport './AuthLayoutHOC.css';\r\nimport BackArrow from \"../components/Icons/backArrow\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport AppToast from \"../toast\";\r\nimport Spinner from \"../Spinner\";\r\nimport config from \"../config\";\r\n\r\n\r\nconst AuthLayoutHOC = (WrappedComponent) => {\r\n\r\n    @inject('playerStore', 'claimStore', 'authStore', 'miscellaneousStore')\r\n    @observer\r\n    class HOC extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                isUpdate: false,\r\n                showBackConfirm: false,\r\n            }\r\n        }\r\n\r\n        onBackButtonClick = () => {\r\n            if (this.state.isUpdate) {\r\n                this.setState({showBackConfirm: true});\r\n            } else {\r\n                this.props.playerStore.clearTicketHistorySearchResults()\r\n                this.props.playerStore.clearUserAuditActionSearchResults()\r\n                this.props.playerStore.clearEventHistorySearchResults()\r\n                this.props.history.goBack();\r\n            }\r\n        }\r\n\r\n        onHomeButtonClick = () => {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n        handleUpdate = (flag) => {\r\n            this.setState({isUpdate: flag});\r\n        }\r\n\r\n        handlePopup = (flag) => {\r\n            flag ? this.props.history.goBack() : this.setState({showBackConfirm: false});\r\n        }\r\n\r\n        handleToastClose = () => {\r\n            this.props.playerStore.setToastErrorSuccessMessage(false, '', '');\r\n            this.props.claimStore.resetToast();\r\n        }\r\n        toggleCronJobToast = (details) => {\r\n            this.props.miscellaneousStore.toggleNotification(details)\r\n        }\r\n        handleDetailViewClick = (event, details) => {\r\n            alert('Details page under construction');\r\n        }\r\n\r\n        render() {\r\n            const customWidth = `${window.outerWidth - 255}px`;\r\n            const customStyle = {width: customWidth}\r\n            const {showBackConfirm} = this.state;\r\n            const {showMainToast, mainErrorMessage, mainSuccessMessage, isSpinnerLoading} = this.props.playerStore;\r\n            const {isLoading, selectedBatchId, selectedRejectReferenceNumber, showToast, errorMessage, successMessage} = this.props.claimStore;\r\n            const {showNotificationToast, notificationErrorList} = this.props.miscellaneousStore;\r\n            let title = this.props.title || 'Title'\r\n            if (this.props.history.location.pathname.startsWith('/player/hub')) {\r\n                title = this.props.playerStore.titleText || 'Title';\r\n            } else if (this.props.history.location.pathname.startsWith('/user/audit')) {\r\n                title = this.props.playerStore.UserNameTitleText || 'Title';\r\n            } else if (this.props.history.location.pathname.startsWith(`/claim/${this.props.playerStore.selectedClaimId}/paymenthistory`)) {\r\n                title = `Transaction ${this.props.playerStore.paymentDetails.transactionId}`;\r\n            } else if (this.props.history.location.pathname.startsWith(`/claim/${this.props.playerStore.selectedClaimId}`)) {\r\n                title = `Claim ${this.props.playerStore.selectedClaimId}`;\r\n            } else if (this.props.history.location.pathname.startsWith('/finance/claims/batch/details')) {\r\n                title = `Batch ${selectedBatchId}`;\r\n            } else if (this.props.history.location.pathname.startsWith('/finance/claims/reject/details')) {\r\n                title = `Reject File ${selectedRejectReferenceNumber}`;\r\n            }\r\n            return (\r\n                <div className='auth-app'>\r\n                    <Header/>\r\n                    {isSpinnerLoading || isLoading ? <Spinner /> : null}\r\n                    {notificationErrorList && notificationErrorList.length\r\n                        ? <div\r\n                            className='cron-job-toast'\r\n                        >\r\n                            {\r\n                                notificationErrorList.map((item, index) => {\r\n                                    return <Toast show={showNotificationToast} onClose={() => this.toggleCronJobToast(item)} key={index}>\r\n                                        <Toast.Header>\r\n                                            <strong className=\"mr-auto\">{item.title}</strong>\r\n                                        </Toast.Header>\r\n                                        <Toast.Body>\r\n                                            <div>{item.errorMessage}</div>\r\n                                            <a onClick={(e) => this.handleDetailViewClick(e, item)} href='javascript:void(0)'>Click here for more details</a>\r\n                                        </Toast.Body>\r\n                                    </Toast>\r\n                                })\r\n                            }\r\n\r\n                        </div>\r\n                        : null\r\n                    }\r\n                    <div className='auth-app-sidebar'>\r\n                        <div className='auth-app-sidebar-wrapper'>\r\n                            <div className='home-button'>\r\n                                <div className=\"home-button-header\"/*onClick={() => this.toggleList()}*/>\r\n                                    <div className=\"dd-header-title\">\r\n                                        <img src='/icons/home-Icon.svg' onClick={() => this.onHomeButtonClick()}/>\r\n                                        <div className='dd-label' onClick={() => this.onHomeButtonClick()}>Home</div>\r\n                                        {/*{listOpen*/}\r\n                                        {/*    ? <FaAngleUp />*/}\r\n                                        {/*    : <FaAngleDown />*/}\r\n                                        {/*}*/}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <Sidebar {...this.props} />\r\n                            <div className=\"vertical-separator\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='auth-app-center-panel'>\r\n                        <div className='app-center-panel-wrapper'>\r\n                            {showMainToast ?\r\n                                <AppToast showToast={showMainToast}\r\n                                         message={mainSuccessMessage ? mainSuccessMessage : mainErrorMessage}\r\n                                         isSuccessMessage={mainSuccessMessage !== null}\r\n                                         handleClose={() => this.handleToastClose()}/> : null}\r\n                             {showToast ?\r\n                                <AppToast showToast={showToast}\r\n                                         message={successMessage ? successMessage : errorMessage}\r\n                                         isSuccessMessage={successMessage !== null}\r\n                                         handleClose={() => this.handleToastClose()}/> : null}\r\n                            <div className='page-title'>\r\n                                <h2 className='title-text'>{title}</h2>\r\n                            </div>\r\n                            <div className='page-info-bar'>\r\n                                {\r\n                                    this.props.showBackButton\r\n                                        ? <div className='back-arrow'>\r\n                                            <BackArrow color='#FFFFFF' onClick={() => this.onBackButtonClick()}/>\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                            <WrappedComponent showBackConfirm={showBackConfirm} handlePopup={this.handlePopup}\r\n                                              onUpdate={this.handleUpdate} {...this.props}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n                ;\r\n        }\r\n    }\r\n\r\n    return HOC;\r\n\r\n};\r\n\r\nAuthLayoutHOC.defaultProps = {\r\n    showBackButton: true\r\n}\r\nAuthLayoutHOC.propTypes = {\r\n    showBackButton: PropTypes.bool\r\n}\r\nexport default AuthLayoutHOC;"]},"metadata":{},"sourceType":"module"}