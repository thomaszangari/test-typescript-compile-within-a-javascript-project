{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import config from\"../config\";import{Button,Form}from\"react-bootstrap\";import'./resetPasswordComponent.css';var ResetPasswordComponent=/*#__PURE__*/function(_React$Component){_inherits(ResetPasswordComponent,_React$Component);var _super=_createSuper(ResetPasswordComponent);function ResetPasswordComponent(props){var _this;_classCallCheck(this,ResetPasswordComponent);_this=_super.call(this,props);_this.validatePasswordField=function(password){var regex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/g;return regex.test(password);};_this.validateForm=function(){var _this$state=_this.state,confirmPassword=_this$state.confirmPassword,password=_this$state.password;if(confirmPassword!==''&&password!==''&&confirmPassword===password){var isValidPassword=_this.validatePasswordField(password);var invalidPasswordMessage='A Password MUST contain at least 8 characters, at least 1 Uppercase alphabet, at least 1 lowercase alphabet, at least 1 number, and at least 1 special character (@,$,!,%,*,?,&)';_this.setState({isValidate:isValidPassword,warningMessage:!isValidPassword?invalidPasswordMessage:null});}else{_this.setState({isValidate:false,warningMessage:null});}};_this.handleSubmit=function(event){event.preventDefault();var _this$state2=_this.state,username=_this$state2.username,password=_this$state2.password,token=_this$state2.token;password=Buffer.from(password).toString('base64');var data={username:username,password:password,token:token};fetch(\"\".concat(config.SERVER_BASE_URL,\"/v1/users/setpassword\"),{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(res){if(res&&res.error){_this.setState({errorMessage:res.error});}else if(res&&res.message){_this.props.history.push('/');}}).catch(function(error){console.log(error);_this.setState({errorMessage:error.toString()});});};_this.handleInputChange=function(value,stateName){_this.setState(_defineProperty({},stateName,value),function(){return _this.validateForm();});};_this.state={password:'',confirmPassword:'',username:null,token:null,isValidate:false};return _this;}_createClass(ResetPasswordComponent,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.match&&this.props.match.params){var _this$props$match$par=this.props.match.params,username=_this$props$match$par.username,token=_this$props$match$par.token;this.setState({username:username,token:token});}}},{key:\"render\",value:function render(){var _this2=this;var _this$state3=this.state,errorMessage=_this$state3.errorMessage,confirmPassword=_this$state3.confirmPassword,password=_this$state3.password,isValidate=_this$state3.isValidate,warningMessage=_this$state3.warningMessage;// const isValidate = this.validateForm();\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"login App-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login-panel\"},/*#__PURE__*/React.createElement(\"img\",{src:\"/images/lottery_numbers_blue.png\"}),/*#__PURE__*/React.createElement(Form,{onSubmit:function onSubmit(e){return _this2.handleSubmit(e);},className:\"login-form\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"NEW PASSWORD\",autoFocus:true,value:password,onChange:function onChange(e){return _this2.handleInputChange(e.target.value,'password');}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicPassword\"},/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"CONFIRM PASSWORD\",onChange:function onChange(e){return _this2.handleInputChange(e.target.value,'confirmPassword');},value:confirmPassword,type:\"password\"}),errorMessage?/*#__PURE__*/React.createElement(Form.Text,{className:\"app-error-message\"},errorMessage):null,warningMessage?/*#__PURE__*/React.createElement(Form.Text,{className:\"app-error-message\"},warningMessage):null),/*#__PURE__*/React.createElement(Button,{block:true,bsSize:\"large\",type:\"submit\",className:\"login-button\",disabled:!isValidate},\"RESET PASSWORD\"))));}}]);return ResetPasswordComponent;}(React.Component);export default ResetPasswordComponent;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/resetpassword/resetPasswordComponent.js"],"names":["React","config","Button","Form","ResetPasswordComponent","props","validatePasswordField","password","regex","test","validateForm","state","confirmPassword","isValidPassword","invalidPasswordMessage","setState","isValidate","warningMessage","handleSubmit","event","preventDefault","username","token","Buffer","from","toString","data","fetch","SERVER_BASE_URL","method","headers","body","JSON","stringify","then","response","json","res","error","errorMessage","message","history","push","catch","console","log","handleInputChange","value","stateName","match","params","e","target","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport config from \"../config\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport './resetPasswordComponent.css';\r\n\r\nclass ResetPasswordComponent extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {password: '', confirmPassword: '', username: null, token: null, isValidate: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match && this.props.match.params) {\r\n            const {username, token} = this.props.match.params;\r\n            this.setState({username: username, token: token});\r\n        }\r\n    }\r\n    validatePasswordField = (password) => {\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/g;\r\n        return regex.test(password);\r\n    }\r\n    validateForm = () => {\r\n        const {confirmPassword, password} = this.state;\r\n        if(confirmPassword !== '' && password !== '' && confirmPassword === password) {\r\n            const isValidPassword = this.validatePasswordField(password);\r\n            const invalidPasswordMessage = 'A Password MUST contain at least 8 characters, at least 1 Uppercase alphabet, at least 1 lowercase alphabet, at least 1 number, and at least 1 special character (@,$,!,%,*,?,&)';\r\n            this.setState({isValidate: isValidPassword, warningMessage: !isValidPassword ? invalidPasswordMessage : null})\r\n        } else {\r\n            this.setState({isValidate: false, warningMessage: null});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let {username, password, token} = this.state;\r\n        password = Buffer.from(password).toString('base64')\r\n        const data = {\r\n            username,\r\n            password,\r\n            token\r\n        }\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/setpassword`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else if (res && res.message) {\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    handleInputChange = (value, stateName) => {\r\n        this.setState({[stateName]: value}, ()=>this.validateForm());\r\n    }\r\n\r\n    render() {\r\n        const {errorMessage, confirmPassword, password, isValidate, warningMessage} = this.state;\r\n        // const isValidate = this.validateForm();\r\n        return (\r\n            <div className=\"login App-header\" >\r\n                <div className='login-panel'>\r\n                    <img src='/images/lottery_numbers_blue.png'/>\r\n                    <Form onSubmit={(e) => this.handleSubmit(e)} className='login-form'>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"NEW PASSWORD\"\r\n                                autoFocus\r\n                                value={password}\r\n                                onChange={e => this.handleInputChange(e.target.value, 'password')}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control\r\n                                placeholder=\"CONFIRM PASSWORD\"\r\n                                onChange={e => this.handleInputChange(e.target.value, 'confirmPassword')}\r\n                                value={confirmPassword}\r\n                                type=\"password\"\r\n                            />\r\n\r\n                            {errorMessage ?  <Form.Text className=\"app-error-message\">{errorMessage}</Form.Text> : null}\r\n                            {warningMessage ?  <Form.Text className=\"app-error-message\">{warningMessage}</Form.Text> : null}\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button\r\n                            block\r\n                            bsSize=\"large\"\r\n                            type=\"submit\"\r\n                            className='login-button'\r\n                            disabled={!isValidate}\r\n                        >\r\n                            RESET PASSWORD\r\n                        </Button>\r\n                    </Form>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPasswordComponent;\r\n"]},"metadata":{},"sourceType":"module"}