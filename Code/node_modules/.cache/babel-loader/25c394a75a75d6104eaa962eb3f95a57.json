{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar serializr_1 = require(\"serializr\");\n\nvar types_1 = require(\"./types\"); // const demo = {\n//     title: true,\n//     name: {\n//         type: 'object',\n//         schema: {\n//             first: true,\n//             second: true,\n//             last: true\n//         }\n//     }\n// }\n\n\nfunction persistObject(target, schema) {\n  var model = createModel(schema);\n  serializr_1.setDefaultModelSchema(target, model);\n  return target;\n}\n\nexports.persistObject = persistObject;\n\nfunction createModel(params) {\n  var schema = {};\n  Object.keys(params).forEach(function (key) {\n    if (typeof params[key] === 'object') {\n      if (params[key].type in types_1.types) {\n        if (typeof params[key].schema === 'object') {\n          schema[key] = types_1.types[params[key].type](createModel(params[key].schema));\n        } else {\n          schema[key] = types_1.types[params[key].type](params[key].schema);\n        }\n      }\n    } else if (params[key] === true) {\n      schema[key] = true;\n    }\n  });\n  return serializr_1.createSimpleSchema(schema);\n}","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/node_modules/mobx-persist/lib/persist-object.js"],"names":["Object","defineProperty","exports","value","serializr_1","require","types_1","persistObject","target","schema","model","createModel","setDefaultModelSchema","params","keys","forEach","key","type","types","createSimpleSchema"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACnC,MAAIC,KAAK,GAAGC,WAAW,CAACF,MAAD,CAAvB;AACAL,EAAAA,WAAW,CAACQ,qBAAZ,CAAkCJ,MAAlC,EAA0CE,KAA1C;AACA,SAAOF,MAAP;AACH;;AACDN,OAAO,CAACK,aAAR,GAAwBA,aAAxB;;AACA,SAASI,WAAT,CAAqBE,MAArB,EAA6B;AACzB,MAAIJ,MAAM,GAAG,EAAb;AACAT,EAAAA,MAAM,CAACc,IAAP,CAAYD,MAAZ,EAAoBE,OAApB,CAA4B,UAAUC,GAAV,EAAe;AACvC,QAAI,OAAOH,MAAM,CAACG,GAAD,CAAb,KAAuB,QAA3B,EAAqC;AACjC,UAAIH,MAAM,CAACG,GAAD,CAAN,CAAYC,IAAZ,IAAoBX,OAAO,CAACY,KAAhC,EAAuC;AACnC,YAAI,OAAOL,MAAM,CAACG,GAAD,CAAN,CAAYP,MAAnB,KAA8B,QAAlC,EAA4C;AACxCA,UAAAA,MAAM,CAACO,GAAD,CAAN,GAAcV,OAAO,CAACY,KAAR,CAAcL,MAAM,CAACG,GAAD,CAAN,CAAYC,IAA1B,EAAgCN,WAAW,CAACE,MAAM,CAACG,GAAD,CAAN,CAAYP,MAAb,CAA3C,CAAd;AACH,SAFD,MAGK;AACDA,UAAAA,MAAM,CAACO,GAAD,CAAN,GAAcV,OAAO,CAACY,KAAR,CAAcL,MAAM,CAACG,GAAD,CAAN,CAAYC,IAA1B,EAAgCJ,MAAM,CAACG,GAAD,CAAN,CAAYP,MAA5C,CAAd;AACH;AACJ;AACJ,KATD,MAUK,IAAII,MAAM,CAACG,GAAD,CAAN,KAAgB,IAApB,EAA0B;AAC3BP,MAAAA,MAAM,CAACO,GAAD,CAAN,GAAc,IAAd;AACH;AACJ,GAdD;AAeA,SAAOZ,WAAW,CAACe,kBAAZ,CAA+BV,MAA/B,CAAP;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar serializr_1 = require(\"serializr\");\nvar types_1 = require(\"./types\");\n// const demo = {\n//     title: true,\n//     name: {\n//         type: 'object',\n//         schema: {\n//             first: true,\n//             second: true,\n//             last: true\n//         }\n//     }\n// }\nfunction persistObject(target, schema) {\n    var model = createModel(schema);\n    serializr_1.setDefaultModelSchema(target, model);\n    return target;\n}\nexports.persistObject = persistObject;\nfunction createModel(params) {\n    var schema = {};\n    Object.keys(params).forEach(function (key) {\n        if (typeof params[key] === 'object') {\n            if (params[key].type in types_1.types) {\n                if (typeof params[key].schema === 'object') {\n                    schema[key] = types_1.types[params[key].type](createModel(params[key].schema));\n                }\n                else {\n                    schema[key] = types_1.types[params[key].type](params[key].schema);\n                }\n            }\n        }\n        else if (params[key] === true) {\n            schema[key] = true;\n        }\n    });\n    return serializr_1.createSimpleSchema(schema);\n}\n"]},"metadata":{},"sourceType":"script"}