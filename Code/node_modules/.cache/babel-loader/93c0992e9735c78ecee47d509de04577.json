{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import BootstrapTable from'react-bootstrap-table-next';import paginationFactory from'react-bootstrap-table2-paginator';import'./ReactTable.css';var ReactTable=/*#__PURE__*/function(_React$Component){_inherits(ReactTable,_React$Component);var _super=_createSuper(ReactTable);function ReactTable(){_classCallCheck(this,ReactTable);return _super.apply(this,arguments);}_createClass(ReactTable,[{key:\"render\",value:function render(){var columns=this.props.tableHeader.map(function(column){return{dataField:column.key,text:column.label,classes:column.classes||''};});var products=this.props.rowData;var header=this.props.header;var noDataMessage=this.props.noDataMessage||'Table is Empty';var indication=function indication(){return noDataMessage;};var sizePerPageRenderer=function sizePerPageRenderer(_ref){var options=_ref.options,currSizePerPage=_ref.currSizePerPage,onSizePerPageChange=_ref.onSizePerPageChange;return/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group\",role:\"group\"},options.map(function(option){var isSelect=currSizePerPage===\"\".concat(option.page);return/*#__PURE__*/React.createElement(\"button\",{key:option.text,type:\"button\",onClick:function onClick(){return onSizePerPageChange(option.page);},className:\"btn \".concat(isSelect?'btn-secondary':'btn-warning')},option.text);}));};var options={// paginationSize: 5,\n// pageStartIndex: 1,\n// // alwaysShowAllBtns: true, // Always show next and previous button\n// // withFirstAndLast: false, // Hide the going to First and Last page button\n// // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n// hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\nfirstPageText:'First',prePageText:'Back',nextPageText:'Next',lastPageText:'Last',// nextPageTitle: 'First page',\n// prePageTitle: 'Pre page',\n// firstPageTitle: 'Next page',\n// lastPageTitle: 'Last page',\n// showTotal: false,\nsizePerPageRenderer:sizePerPageRenderer,disablePageTitle:true,sizePerPageList:[{text:'5',value:5},{text:'10',value:10},{text:'25',value:25},{text:'All',value:products.length}]// A numeric array is also available. the purpose of above example is custom the text\n};return/*#__PURE__*/React.createElement(\"div\",{className:\"react-table\"},header?/*#__PURE__*/React.createElement(\"div\",{className:\"table-header\"},header):null,/*#__PURE__*/React.createElement(BootstrapTable,{keyField:\"id\",data:products,columns:columns,pagination:paginationFactory(options),bordered:false,classes:this.props.className,noDataIndication:indication}));}}]);return ReactTable;}(React.Component);export default ReactTable;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/PaginatedTable/ReactTable.js"],"names":["React","BootstrapTable","paginationFactory","ReactTable","columns","props","tableHeader","map","column","dataField","key","text","label","classes","products","rowData","header","noDataMessage","indication","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","option","isSelect","page","firstPageText","prePageText","nextPageText","lastPageText","disablePageTitle","sizePerPageList","value","length","className","Component"],"mappings":"g0BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CACA,MAAO,kBAAP,C,GAEMC,CAAAA,U,8QAEO,CACL,GAAMC,CAAAA,OAAO,CAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2B,SAAAC,MAAM,CAAI,CACjD,MAAO,CACHC,SAAS,CAAED,MAAM,CAACE,GADf,CAEHC,IAAI,CAAEH,MAAM,CAACI,KAFV,CAGHC,OAAO,CAAEL,MAAM,CAACK,OAAP,EAAkB,EAHxB,CAAP,CAKH,CANe,CAAhB,CAOA,GAAMC,CAAAA,QAAQ,CAAG,KAAKT,KAAL,CAAWU,OAA5B,CACA,GAAMC,CAAAA,MAAM,CAAG,KAAKX,KAAL,CAAWW,MAA1B,CACA,GAAMC,CAAAA,aAAa,CAAG,KAAKZ,KAAL,CAAWY,aAAX,EAA4B,gBAAlD,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMD,CAAAA,aAAN,EAAnB,CAEA,GAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,UACKC,CAAAA,OADL,MACKA,OADL,CAEKC,eAFL,MAEKA,eAFL,CAGKC,mBAHL,MAGKA,mBAHL,oBAKxB,2BAAK,SAAS,CAAC,WAAf,CAA2B,IAAI,CAAC,OAAhC,EAEQF,OAAO,CAACb,GAAR,CAAY,SAACgB,MAAD,CAAY,CACpB,GAAMC,CAAAA,QAAQ,CAAGH,eAAe,aAAQE,MAAM,CAACE,IAAf,CAAhC,CACA,mBACI,8BACI,GAAG,CAAGF,MAAM,CAACZ,IADjB,CAEI,IAAI,CAAC,QAFT,CAGI,OAAO,CAAG,yBAAMW,CAAAA,mBAAmB,CAACC,MAAM,CAACE,IAAR,CAAzB,EAHd,CAII,SAAS,eAAUD,QAAQ,CAAG,eAAH,CAAqB,aAAvC,CAJb,EAMMD,MAAM,CAACZ,IANb,CADJ,CAUH,CAZD,CAFR,CALwB,EAA5B,CAuBA,GAAMS,CAAAA,OAAO,CAAG,CACZ;AACA;AACA;AACA;AACA;AACA;AACAM,aAAa,CAAE,OAPH,CAQZC,WAAW,CAAE,MARD,CASZC,YAAY,CAAE,MATF,CAUZC,YAAY,CAAE,MAVF,CAWZ;AACA;AACA;AACA;AACA;AACAV,mBAAmB,CAAnBA,mBAhBY,CAiBZW,gBAAgB,CAAE,IAjBN,CAkBZC,eAAe,CAAE,CAAC,CACdpB,IAAI,CAAE,GADQ,CACHqB,KAAK,CAAE,CADJ,CAAD,CAEd,CACCrB,IAAI,CAAE,IADP,CACaqB,KAAK,CAAE,EADpB,CAFc,CAId,CACCrB,IAAI,CAAE,IADP,CACaqB,KAAK,CAAE,EADpB,CAJc,CAMd,CACCrB,IAAI,CAAE,KADP,CACcqB,KAAK,CAAElB,QAAQ,CAACmB,MAD9B,CANc,CAQd;AA1BS,CAAhB,CA4BA,mBACI,2BAAK,SAAS,CAAC,aAAf,EACKjB,MAAM,cAAG,2BAAK,SAAS,CAAC,cAAf,EAA+BA,MAA/B,CAAH,CAAkD,IAD7D,cAEI,oBAAC,cAAD,EAAgB,QAAQ,CAAC,IAAzB,CACY,IAAI,CAAGF,QADnB,CAEY,OAAO,CAAGV,OAFtB,CAGY,UAAU,CAAGF,iBAAiB,CAACkB,OAAD,CAH1C,CAIY,QAAQ,CAAE,KAJtB,CAKY,OAAO,CAAE,KAAKf,KAAL,CAAW6B,SALhC,CAMY,gBAAgB,CAAGhB,UAN/B,EAFJ,CADJ,CAaH,C,wBA/EoBlB,KAAK,CAACmC,S,EAkF/B,cAAehC,CAAAA,UAAf","sourcesContent":["import React from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport './ReactTable.css';\r\n\r\nclass ReactTable extends React.Component {\r\n\r\n    render() {\r\n        const columns = this.props.tableHeader.map(column => {\r\n            return {\r\n                dataField: column.key,\r\n                text: column.label,\r\n                classes: column.classes || ''\r\n            }\r\n        });\r\n        const products = this.props.rowData;\r\n        const header = this.props.header;\r\n        const noDataMessage = this.props.noDataMessage || 'Table is Empty';\r\n        const indication = () => noDataMessage;\r\n\r\n        const sizePerPageRenderer = ({\r\n                                         options,\r\n                                         currSizePerPage,\r\n                                         onSizePerPageChange\r\n                                     }) => (\r\n            <div className=\"btn-group\" role=\"group\">\r\n                {\r\n                    options.map((option) => {\r\n                        const isSelect = currSizePerPage === `${option.page}`;\r\n                        return (\r\n                            <button\r\n                                key={ option.text }\r\n                                type=\"button\"\r\n                                onClick={ () => onSizePerPageChange(option.page) }\r\n                                className={ `btn ${isSelect ? 'btn-secondary' : 'btn-warning'}` }\r\n                            >\r\n                                { option.text }\r\n                            </button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n        const options = {\r\n            // paginationSize: 5,\r\n            // pageStartIndex: 1,\r\n            // // alwaysShowAllBtns: true, // Always show next and previous button\r\n            // // withFirstAndLast: false, // Hide the going to First and Last page button\r\n            // // hideSizePerPage: true, // Hide the sizePerPage dropdown always\r\n            // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\r\n            firstPageText: 'First',\r\n            prePageText: 'Back',\r\n            nextPageText: 'Next',\r\n            lastPageText: 'Last',\r\n            // nextPageTitle: 'First page',\r\n            // prePageTitle: 'Pre page',\r\n            // firstPageTitle: 'Next page',\r\n            // lastPageTitle: 'Last page',\r\n            // showTotal: false,\r\n            sizePerPageRenderer,\r\n            disablePageTitle: true,\r\n            sizePerPageList: [{\r\n                text: '5', value: 5\r\n            }, {\r\n                text: '10', value: 10\r\n            }, {\r\n                text: '25', value: 25\r\n            }, {\r\n                text: 'All', value: products.length\r\n            }] // A numeric array is also available. the purpose of above example is custom the text\r\n        };\r\n        return (\r\n            <div className='react-table'>\r\n                {header ? <div className='table-header'>{header}</div> : null}\r\n                <BootstrapTable keyField='id'\r\n                            data={ products }\r\n                            columns={ columns }\r\n                            pagination={ paginationFactory(options) }\r\n                            bordered={false}\r\n                            classes={this.props.className}\r\n                            noDataIndication={ indication }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactTable;\r\n"]},"metadata":{},"sourceType":"module"}