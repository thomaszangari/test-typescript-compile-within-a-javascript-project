{"ast":null,"code":"import config from './../../config';\n\nconst axios = require('axios');\n\nconst data = require('./__test__/test_data.json');\n\nexport const makeHttpCall = async options => {\n  console.log(\">>>>>>>>>>>>>>> makeHttpCall\");\n\n  try {\n    let source = {\n      headers: {\n        'X-API-Key': config.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY\n      }\n    };\n    options = Object.assign(options, source);\n    let response = await axios(options);\n    console.log('response', response);\n    return response.data;\n  } catch (e) {\n    throw new Error(\"makeHttpCall\" + e.message);\n  }\n};\nexport const getData = async playerId => {\n  console.log(\">>>>>>>>>>>>>>> getData\");\n  const options = {\n    method: 'get',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/getdocument/' + playerId\n  };\n\n  try {\n    const data = await makeHttpCall(options);\n\n    if (data.message !== undefined) {\n      alert(`Player ${playerId} not fount`);\n      return [];\n    }\n\n    console.log(\">>>>>>>>>>>>>>> RETURNING Data\", data);\n    return data.documents;\n  } catch (e) {\n    alert(e.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/components/DisplayDocument/functions.js"],"names":["config","axios","require","data","makeHttpCall","options","console","log","source","headers","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY","Object","assign","response","e","Error","message","getData","playerId","method","url","process","env","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE","undefined","alert","documents"],"mappings":"AAAA,OAAOA,MAAP,MAAoB,gBAApB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,2BAAD,CAApB;;AAGA,OAAO,MAAME,YAAY,GAAG,MAAOC,OAAP,IAAmB;AAE3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAEA,MAAI;AACA,QAAIC,MAAM,GAAE;AACRC,MAAAA,OAAO,EAAE;AAAC,qBAAaT,MAAM,CAACU;AAArB;AADD,KAAZ;AAGAL,IAAAA,OAAO,GAAGM,MAAM,CAACC,MAAP,CAAcP,OAAd,EAAuBG,MAAvB,CAAV;AACA,QAAIK,QAAQ,GAAG,MAAMZ,KAAK,CAACI,OAAD,CAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBM,QAAvB;AACA,WAAQA,QAAQ,CAACV,IAAjB;AACH,GARD,CASA,OAAOW,CAAP,EAAU;AACN,UAAM,IAAIC,KAAJ,CAAU,iBAAiBD,CAAC,CAACE,OAA7B,CAAN;AACH;AACJ,CAhBM;AAkBP,OAAO,MAAMC,OAAO,GAAG,MAAQC,QAAR,IAAqB;AACxCZ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,QAAMF,OAAO,GACb;AACIc,IAAAA,MAAM,EAAE,KADZ;AAEIC,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,qCAAZ,GAAkD,eAAlD,GAAmEL;AAF5E,GADA;;AAMA,MACA;AAEI,UAAMf,IAAI,GAAG,MAAMC,YAAY,CAACC,OAAD,CAA/B;;AAEA,QAAGF,IAAI,CAACa,OAAL,KAAiBQ,SAApB,EACA;AACIC,MAAAA,KAAK,CAAE,UAASP,QAAS,YAApB,CAAL;AACA,aAAO,EAAP;AACH;;AACDZ,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CJ,IAA9C;AACA,WAAOA,IAAI,CAACuB,SAAZ;AACH,GAZD,CAaA,OAAMZ,CAAN,EAAQ;AACJW,IAAAA,KAAK,CAACX,CAAC,CAACE,OAAH,CAAL;AACH;AAEJ,CAzBM","sourcesContent":["import config from  './../../config';\r\n\r\nconst axios = require('axios');\r\nconst data = require('./__test__/test_data.json');\r\n\r\n\r\nexport const makeHttpCall = async (options) => {\r\n\r\n    console.log(\">>>>>>>>>>>>>>> makeHttpCall\"); \r\n    \r\n    try {\r\n        let source ={\r\n            headers: {'X-API-Key': config.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY}\r\n        }\r\n        options = Object.assign(options, source)\r\n        let response = await axios(options);\r\n        console.log('response',response);\r\n        return  response.data;\r\n    }\r\n    catch (e) {\r\n        throw new Error(\"makeHttpCall\" + e.message );\r\n    }\r\n}\r\n\r\nexport const getData = async ( playerId) => {\r\n    console.log(\">>>>>>>>>>>>>>> getData\");\r\n    const options =\r\n    {\r\n        method: 'get',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/getdocument/'+ playerId\r\n    }\r\n\r\n    try\r\n    {\r\n        \r\n        const data = await makeHttpCall(options);\r\n        \r\n        if(data.message !== undefined)\r\n        {\r\n            alert(`Player ${playerId} not fount`);\r\n            return [];\r\n        }  \r\n        console.log(\">>>>>>>>>>>>>>> RETURNING Data\", data);      \r\n        return data.documents;              \r\n    } \r\n    catch(e){\r\n        alert(e.message);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}