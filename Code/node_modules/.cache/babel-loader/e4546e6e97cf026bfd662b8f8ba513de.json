{"ast":null,"code":"const axios = require('axios');\n\nconst data = require('./__test__/test_data.json');\n\nconst makeHttpCall = async options => {\n  console.log(\">>>>>>>>>>>>>>> makeHttpCall\");\n  return data;\n\n  try {\n    let source = {\n      headers: {\n        'X-API-Key': process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY\n      }\n    };\n    options = Object.assign(options, source);\n    let response = await axios(options);\n    return response.data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const getData = async playerId => {\n  console.log(\">>>>>>>>>>>>>>> getData\");\n  const options = {\n    method: 'get',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/document/' + playerId\n  };\n\n  try {\n    const data = await makeHttpCall(options);\n\n    if (data.message !== undefined) {\n      alert(`Player ${playerId} not fount`);\n      return [];\n    }\n\n    console.log(\">>>>>>>>>>>>>>> RETURNING Data\", data);\n    return data.documents;\n  } catch (e) {\n    alert(e);\n  }\n};\nexport const getImageType = (e, state, setState) => {\n  console.log(\">>>>>>>>>>>>>>> getImageType\");\n  state.index = e.target.value.split(\" \")[1] - 1;\n  setState({\n    index: state.index\n  });\n};\nexport const getDocumentType = async (event, setDocumentType, uploadId, documentData, setDocumentData) => {\n  console.log(\">>>>>>>>>>>>>>> getDocumentType\");\n  const options = {\n    method: 'put',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/document/' + uploadId,\n    data: {\n      type: event.target.value\n    }\n  };\n\n  try {\n    const data = await makeHttpCall(options);\n    setDocumentData(documentData.map(element => {\n      if (element.uploadId === uploadId) element.documentType = event.target.value;\n      return element;\n    }));\n    setDocumentType(event.target.value);\n  } catch (e) {\n    alert(e);\n  }\n};\nexport const toggleHideShow = async setState => {\n  console.log(\">>>>>>>>>>>>>>> toggleHideShow\");\n  setState((state, props) => ({\n    toggle: !state.toggle\n  }));\n};\nexport const deleteImage = (setState, uploadId) => {\n  console.log(\">>>>>>>>>>>>>>> deleteImage\");\n\n  if (uploadId === \"\") {\n    alert('Upload id is empty');\n    return;\n  }\n\n  const options = {\n    method: 'delete',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/document/' + uploadId\n  };\n\n  try {\n    alert(makeHttpCall(options).message);\n    setState((state, props) => ({\n      documentData: state.documentData.map(element => {\n        if (element.uploadId !== uploadId) return element;\n      })\n    }));\n  } catch (e) {\n    alert(e);\n  }\n};","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/components/DisplayDocument/functions.js"],"names":["axios","require","data","makeHttpCall","options","console","log","source","headers","process","env","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY","Object","assign","response","e","Error","getData","playerId","method","url","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE","message","undefined","alert","documents","getImageType","state","setState","index","target","value","split","getDocumentType","event","setDocumentType","uploadId","documentData","setDocumentData","type","map","element","documentType","toggleHideShow","props","toggle","deleteImage"],"mappings":"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","sourcesContent":["const axios = require('axios');\r\nconst data = require('./__test__/test_data.json');\r\n\r\nconst makeHttpCall = async (options) => {\r\n\r\n    console.log(\">>>>>>>>>>>>>>> makeHttpCall\"); \r\n    return data;\r\n    try {\r\n        let source ={\r\n            headers: {'X-API-Key': process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY}\r\n        }\r\n        options = Object.assign(options, source)\r\n        let response = await axios(options);\r\n        return  response.data;\r\n    }\r\n    catch (e) {\r\n        throw new Error(e);\r\n    }\r\n}\r\n\r\nexport const getData = async ( playerId) => {\r\n    console.log(\">>>>>>>>>>>>>>> getData\");\r\n    const options =\r\n    {\r\n        method: 'get',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/document/'+ playerId\r\n    }\r\n\r\n    try\r\n    {\r\n        \r\n        const data = await makeHttpCall(options);\r\n        \r\n        if(data.message !== undefined)\r\n        {\r\n            alert(`Player ${playerId} not fount`);\r\n            return [];\r\n        }  \r\n        console.log(\">>>>>>>>>>>>>>> RETURNING Data\", data);      \r\n        return data.documents;              \r\n    } \r\n    catch(e){\r\n        alert(e);\r\n    }\r\n\r\n}\r\nexport  const getImageType = ( e , state, setState ) =>{\r\n    console.log(\">>>>>>>>>>>>>>> getImageType\");\r\n    state.index = (e.target.value.split(\" \")[1] - 1);\r\n    setState({index:state.index});\r\n\r\n}\r\nexport const getDocumentType = async (event, setDocumentType,uploadId,documentData, setDocumentData) => {\r\n    console.log(\">>>>>>>>>>>>>>> getDocumentType\");\r\n    \r\n    const options =\r\n    {\r\n        method: 'put',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/document/'+ uploadId,\r\n        data: {\r\n             type: event.target.value\r\n          }\r\n    }\r\n\r\n    try\r\n    {\r\n        const data = await makeHttpCall(options);\r\n        \r\n        setDocumentData(documentData.map(element => {\r\n            if(element.uploadId === uploadId)\r\n                element.documentType = event.target.value;   \r\n            return element;\r\n        }));\r\n\r\n        setDocumentType(event.target.value);       \r\n                     \r\n    } \r\n    catch(e){\r\n        alert(e);\r\n    }\r\n\r\n}\r\n\r\nexport const toggleHideShow = async (setState) => {\r\n    console.log(\">>>>>>>>>>>>>>> toggleHideShow\");\r\n    setState( (state,props) => ({toggle:!state.toggle}));\r\n    \r\n}\r\n\r\nexport const deleteImage = (setState, uploadId) => {\r\n       \r\n    console.log(\">>>>>>>>>>>>>>> deleteImage\");\r\n    if(uploadId === \"\")\r\n    {\r\n        alert('Upload id is empty');\r\n        return;\r\n    }\r\n    const options =\r\n    {\r\n        method: 'delete',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/document/'+ uploadId\r\n    }\r\n\r\n    try\r\n    { \r\n       alert(makeHttpCall(options).message);\r\n       setState((state,props) => ({documentData:state.documentData.map(element =>{ if(element.uploadId !== uploadId) return element; })}));\r\n    }catch(e){\r\n        alert(e);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}