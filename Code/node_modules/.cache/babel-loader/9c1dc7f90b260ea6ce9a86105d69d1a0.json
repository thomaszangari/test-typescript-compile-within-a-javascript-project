{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\playerreporttable\\\\playerreporttable.js\";\n\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from \"../config\";\nimport { ExportToCsv } from 'export-to-csv';\nimport './playerreporttable.css';\nimport { UserAction, UserActionCategory } from \"../UserActionCategory\";\nimport { inject } from \"mobx-react\";\nimport ReactTable from \"../PaginatedTable/ReactTable\";\nlet PlayerReportTable = (_dec = inject('playerStore', 'authStore'), _dec(_class = (_temp = class PlayerReportTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      fieldSeparator: ',',\n      quoteStrings: '\"',\n      decimalSeparator: '.',\n      showLabels: true,\n      showTitle: true,\n      title: 'User List Export',\n      useTextFile: false,\n      useBom: true,\n      useKeysAsHeaders: true // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\n\n    };\n    this.csvExporter = new ExportToCsv(this.options);\n\n    this.handleSelectClick = (event, id) => {\n      event.preventDefault();\n      this.props.history.push(`/comingsoon`);\n    };\n\n    this.getTableHeader = userList => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-table-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"report-table-btn\",\n        onClick: () => this.downloadClicked(userList),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, \"Download\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"report-table-btn\",\n        onClick: () => this.printClicked(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, \"Print\")));\n    };\n\n    this.setTableData = data => {\n      const rows = data.map((d, index) => {\n        d.idField = index + 1;\n        d.select = /*#__PURE__*/React.createElement(\"a\", {\n          onClick: e => this.handleSelectClick(e, d.id),\n          href: \"\",\n          className: \"select-link\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 24\n          }\n        }, \"VIEW\");\n        return d;\n      });\n      const tableHeader = [{\n        key: 'firstName',\n        label: 'First'\n      }, {\n        key: 'lastName',\n        label: 'Last'\n      }, {\n        key: 'email',\n        label: 'email'\n      }, {\n        key: 'enabled',\n        label: 'Account Locked?'\n      }, {\n        key: 'status',\n        label: 'Player Identity Status'\n      }, {\n        key: 'idcheckresult',\n        label: 'Identity Check Result'\n      }, {\n        key: 'idchecksource',\n        label: 'Identity Check Source'\n      }, {\n        key: 'reason',\n        label: 'Player Registration Status'\n      }, {\n        key: 'select',\n        label: ''\n      }]; //this.setState({tableHeader: tableHeader, userList: rows}, () => console.log(this.state));\n\n      this.state.tableHeader = tableHeader;\n      this.state.userList = rows;\n    };\n\n    this.state = {\n      userList: [],\n      tableHeader: []\n    };\n    var _data = [{\n      firstName: 'Test',\n      lastName: 'User',\n      email: 'test@test.com',\n      enabled: 'Enabled',\n      status: 'Confirmed',\n      idcheckresult: 'Pass',\n      idchecksource: 'Back Office',\n      reason: 'None'\n    }, {\n      firstName: 'Test2',\n      lastName: 'User',\n      email: 'test2@test.com',\n      enabled: 'Disabled',\n      status: 'Confirmed',\n      idcheckresult: 'Pass',\n      idchecksource: 'Back Office',\n      reason: 'None'\n    }, {\n      firstName: 'Test2',\n      lastName: 'User',\n      email: 'test2@test.com',\n      enabled: 'Disabled',\n      status: 'Confirmed',\n      idcheckresult: 'Pass',\n      idchecksource: 'Back Office',\n      reason: 'None'\n    }];\n    this.setTableData(_data);\n  }\n\n  componentDidMount() {\n    var data = null;\n\n    if (this.props.location.state == undefined) {\n      this.props.history.push('/playerreports');\n    } else {\n      var query = this.props.location.state.detail;\n      let url = `${config.SERVER_BASE_URL}/v1/players/customreports${query}`;\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(res => {\n        if (res.error) {\n          console.log(res.error);\n        } else {\n          this.setTableData(res);\n        }\n      }).then(() => {\n        console.log(data);\n        this.setTableData(data);\n      }).catch(error => {\n        this.setState({\n          showError: true,\n          errorMessage: error.toString()\n        });\n      });\n    }\n  }\n\n  fetchTableData(query) {\n    var testData = [{\n      firstName: 'Test',\n      lastName: 'User',\n      email: 'test@test.com',\n      enabled: 'Enabled',\n      status: 'Confirmed',\n      idcheckresult: 'Pass',\n      idchecksource: 'Back Office',\n      reason: 'None'\n    }, {\n      firstName: 'Test2',\n      lastName: 'User',\n      email: 'test2@test.com',\n      enabled: 'Disabled',\n      status: 'Confirmed',\n      idcheckresult: 'Pass',\n      idchecksource: 'Back Office',\n      reason: 'None'\n    }, {\n      firstName: 'Test2',\n      lastName: 'User',\n      email: 'test2@test.com',\n      enabled: 'Disabled',\n      status: 'Confirmed',\n      idcheckresult: 'Pass',\n      idchecksource: 'Back Office',\n      reason: 'None'\n    }];\n    let url = `${config.SERVER_BASE_URL}/v1/players/customreports${query}`;\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(res => {\n      if (res.error) {\n        console.log(res.error);\n      } else {\n        console.log(res);\n      }\n    }).catch(error => {\n      this.setState({\n        showError: true,\n        errorMessage: error.toString()\n      });\n    });\n  }\n\n  downloadClicked(data) {\n    this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.DOWNLOAD_PLAYER_REPORT);\n    this.csvExporter.generateCsv(data);\n  }\n\n  printClicked() {\n    this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.PRINT_PLAYER_REPORT); // useReactToPrint({content: () => this.state});\n  }\n\n  render() {\n    //const {firstName, lastName, email} = this.state;\n    const {\n      tableHeader,\n      userList\n    } = this.state;\n\n    const _header = this.getTableHeader(userList);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactTable, {\n      header: _header,\n      tableHeader: tableHeader,\n      rowData: userList,\n      className: \"report-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}, _temp)) || _class);\nexport default PlayerReportTable;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/playerreporttable/playerreporttable.js"],"names":["React","Button","config","ExportToCsv","UserAction","UserActionCategory","inject","ReactTable","PlayerReportTable","Component","constructor","props","options","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","title","useTextFile","useBom","useKeysAsHeaders","csvExporter","handleSelectClick","event","id","preventDefault","history","push","getTableHeader","userList","downloadClicked","printClicked","setTableData","data","rows","map","d","index","idField","select","e","tableHeader","key","label","state","firstName","lastName","email","enabled","status","idcheckresult","idchecksource","reason","componentDidMount","location","undefined","query","detail","url","SERVER_BASE_URL","fetch","method","headers","localStorage","getItem","then","response","json","res","error","console","log","catch","setState","showError","errorMessage","toString","fetchTableData","testData","playerStore","logAction","BUTTON_CLICK","DOWNLOAD_PLAYER_REPORT","generateCsv","PRINT_PLAYER_REPORT","render","_header"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from \"../config\";\r\nimport {ExportToCsv} from 'export-to-csv';\r\nimport './playerreporttable.css';\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport {inject} from \"mobx-react\";\r\nimport ReactTable from \"../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore', 'authStore')\r\nclass PlayerReportTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: [],\r\n            tableHeader: []\r\n        }\r\n\r\n        var data = [\r\n            {\r\n                firstName: 'Test',\r\n                lastName: 'User',\r\n                email: 'test@test.com',\r\n                enabled: 'Enabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            }\r\n        ]\r\n\r\n\r\n        this.setTableData(data);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var data = null;\r\n\r\n        if (this.props.location.state == undefined){\r\n            this.props.history.push('/playerreports');\r\n        }\r\n        else\r\n        {\r\n            var query = this.props.location.state.detail;\r\n\r\n            let url = `${config.SERVER_BASE_URL}/v1/players/customreports${query}`;\r\n            fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        console.log(res.error);\r\n                    } else {\r\n                        this.setTableData(res);\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    console.log(data);\r\n                    this.setTableData(data);\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({showError: true, errorMessage: error.toString()})\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    options = {\r\n        fieldSeparator: ',',\r\n        quoteStrings: '\"',\r\n        decimalSeparator: '.',\r\n        showLabels: true,\r\n        showTitle: true,\r\n        title: 'User List Export',\r\n        useTextFile: false,\r\n        useBom: true,\r\n        useKeysAsHeaders: true,\r\n        // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\r\n    };\r\n\r\n    csvExporter = new ExportToCsv(this.options);\r\n\r\n    fetchTableData(query) {\r\n        var testData = [\r\n            {\r\n                firstName: 'Test',\r\n                lastName: 'User',\r\n                email: 'test@test.com',\r\n                enabled: 'Enabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            },\r\n            {\r\n                firstName: 'Test2',\r\n                lastName: 'User',\r\n                email: 'test2@test.com',\r\n                enabled: 'Disabled',\r\n                status: 'Confirmed',\r\n                idcheckresult: 'Pass',\r\n                idchecksource: 'Back Office',\r\n                reason: 'None'\r\n            }\r\n        ]\r\n\r\n        let url = `${config.SERVER_BASE_URL}/v1/players/customreports${query}`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    console.log(res.error);\r\n                } else {\r\n                    console.log(res);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n    }\r\n\r\n    handleSelectClick = (event, id) => {\r\n        event.preventDefault();\r\n        this.props.history.push(`/comingsoon`);\r\n    }\r\n\r\n    getTableHeader = (userList) => {\r\n        return (\r\n            <div className='player-table-header'>\r\n                <div></div>\r\n                <div>\r\n                    <Button className='report-table-btn'\r\n                            onClick={() => this.downloadClicked(userList)}>Download</Button>\r\n                    <Button className='report-table-btn' onClick={() => this.printClicked()}>Print</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setTableData = (data) => {\r\n        const rows = data.map((d, index) => {\r\n            d.idField = index + 1;\r\n            d.select = <a onClick={(e) => this.handleSelectClick(e, d.id)} href='' className='select-link'>VIEW</a>;\r\n            return d;\r\n        });\r\n        const tableHeader = [\r\n            {key: 'firstName', label: 'First'},\r\n            {key: 'lastName', label: 'Last'},\r\n            {key: 'email', label: 'email'},\r\n            {key: 'enabled', label: 'Account Locked?'},\r\n            {key: 'status', label: 'Player Identity Status'},\r\n            {key: 'idcheckresult', label: 'Identity Check Result'},\r\n            {key: 'idchecksource', label: 'Identity Check Source'},\r\n            {key: 'reason', label: 'Player Registration Status'},\r\n            {key: 'select', label: ''}\r\n        ];\r\n\r\n        //this.setState({tableHeader: tableHeader, userList: rows}, () => console.log(this.state));\r\n        this.state.tableHeader = tableHeader;\r\n        this.state.userList = rows;\r\n    }\r\n\r\n    downloadClicked(data) {\r\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.DOWNLOAD_PLAYER_REPORT);\r\n        this.csvExporter.generateCsv(data);\r\n    }\r\n\r\n    printClicked() {\r\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.PRINT_PLAYER_REPORT);\r\n        // useReactToPrint({content: () => this.state});\r\n    }\r\n\r\n    render() {\r\n        //const {firstName, lastName, email} = this.state;\r\n\r\n        const {tableHeader, userList} = this.state;\r\n        const _header = this.getTableHeader(userList);\r\n\r\n        return (\r\n            <div className='report-container'>\r\n                <ReactTable header={_header} tableHeader={tableHeader} rowData={userList} className='report-table'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerReportTable;\r\n"]},"metadata":{},"sourceType":"module"}