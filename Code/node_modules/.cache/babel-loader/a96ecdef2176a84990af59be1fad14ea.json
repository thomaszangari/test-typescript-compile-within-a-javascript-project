{"ast":null,"code":"const axios = require('axios');\n\nconst makeHttpCall = async options => {\n  try {\n    let source = {\n      headers: {\n        'X-API-Key': process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY\n      }\n    };\n    options = Object.assign(options, source);\n    let response = await axios(options);\n    return response.data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const getImageType = event => {\n  console.log(event.target.value);\n};\nexport const getDocumentType = event => {\n  console.log(event.target.value);\n};\nconst documentDataDefault = {\n  date: \"1,Jun.2021\",\n  MimeType: \"JPG\",\n  src: logo,\n  url: \"\",\n  documentType: \"\",\n  createdAt: \"\"\n};\nexport const toggleHideShow = async (setToggle, toggle, playerId, setDocumentData) => {\n  setToggle(!toggle);\n  const options = {\n    method: 'get',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/document/' + playerId\n  };\n\n  try {\n    const data = await makeHttpCall(options);\n\n    if (data.url === undefined) {\n      alert(`Player ${playerId} not fount`);\n      return;\n    }\n\n    let documentData = {\n      date: \"\",\n      MimeType: \"\",\n      src: \"\",\n      uploadId: \"\"\n    };\n    documentData.src = data.url === undefined ? \"\" : data.url;\n    documentData.date = data.createdAt === undefined ? \"\" : data.createdAt;\n    documentData.MimeType = data.documentType === undefined ? \"\" : data.documentType;\n    documentData.uploadId = data.uploadId === undefined ? \"\" : data.uploadId;\n    setDocumentData(documentData);\n  } catch (e) {\n    alert(e);\n  }\n};\nexport const deleteImage = uploadId => {\n  const options = {\n    method: 'delete',\n    url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE + '/document/' + uploadId\n  };\n\n  try {\n    alert(makeHttpCall(options).message);\n  } catch (e) {\n    alert(e);\n  }\n};","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/components/DisplayDocument/functions.js"],"names":["axios","require","makeHttpCall","options","source","headers","process","env","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY","Object","assign","response","data","e","Error","getImageType","event","console","log","target","value","getDocumentType","documentDataDefault","date","MimeType","src","logo","url","documentType","createdAt","toggleHideShow","setToggle","toggle","playerId","setDocumentData","method","REACT_APP_BACK_END_GET_DOCUMENT_IMAGE","undefined","alert","documentData","uploadId","deleteImage","message"],"mappings":"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","sourcesContent":["const axios = require('axios');\r\n\r\n\r\nconst makeHttpCall = async (options) => {\r\n\r\n    try {\r\n        let source ={\r\n            headers: {'X-API-Key': process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE_X_API_KEY}\r\n        }\r\n        options = Object.assign(options, source)\r\n        let response = await axios(options);\r\n        return  response.data;\r\n    }\r\n    catch (e) {\r\n        throw new Error(e);\r\n    }\r\n}\r\n\r\nexport const getImageType = (event) => {\r\n    console.log(event.target.value);\r\n\r\n}\r\n\r\nexport const getDocumentType = (event) => {\r\n    console.log(event.target.value);\r\n\r\n}\r\nconst documentDataDefault = {\r\n    date: \"1,Jun.2021\",\r\n    MimeType: \"JPG\",\r\n    src: logo,\r\n    url:\"\",\r\n    documentType:\"\",\r\n    createdAt:\"\"\r\n}\r\nexport const toggleHideShow = async ( setToggle, toggle, playerId, setDocumentData) => {\r\n   \r\n    setToggle(!toggle);\r\n    const options =\r\n    {\r\n        method: 'get',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/document/'+ playerId\r\n    }\r\n    try{\r\n        const data = await makeHttpCall(options);\r\n        \r\n        if(data.url === undefined)\r\n        {\r\n            alert(`Player ${playerId} not fount`);\r\n            return;\r\n        }\r\n        let documentData = {\r\n            date: \"\",\r\n            MimeType: \"\",\r\n            src: \"\",         \r\n            uploadId:\"\",\r\n        }\r\n        documentData.src = data.url === undefined ? \"\" : data.url;\r\n        documentData.date = data.createdAt === undefined ? \"\" : data.createdAt;\r\n        documentData.MimeType = data.documentType === undefined ? \"\" : data.documentType;\r\n        documentData.uploadId = data.uploadId === undefined ? \"\" : data.uploadId;\r\n        setDocumentData(documentData);\r\n              \r\n    } \r\n    catch(e){\r\n        alert(e);\r\n    }\r\n}\r\n\r\nexport const deleteImage = (uploadId) => {\r\n    const options =\r\n    {\r\n        method: 'delete',\r\n        url: process.env.REACT_APP_BACK_END_GET_DOCUMENT_IMAGE+'/document/'+ uploadId\r\n    }\r\n\r\n    try\r\n    { \r\n       alert(makeHttpCall(options).message);\r\n    }catch(e){\r\n        alert(e);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}