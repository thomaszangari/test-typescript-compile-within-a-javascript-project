{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\systemsearch\\\\index.js\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Button } from \"react-bootstrap\";\nimport AppTextbox from \"../AppTextbox\";\nimport { SystemStatsCategories } from \"../Constants/SystemStatsCategories\";\nimport './SystemSearch.css';\nimport { categories } from \"../Constants/SystemDashCategories\";\n\nclass SystemSearch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (e, stateName) => {\n      if (stateName === 'firstName' || stateName === 'lastName') {\n        const regExp = /^[A-Za-z]+$/;\n\n        if (e.target.value === '' || regExp.test(e.target.value)) {\n          this.setState({\n            [stateName]: e.target.value\n          });\n        }\n      } else {\n        this.setState({\n          [stateName]: e.target.value\n        });\n      }\n    };\n\n    this.handleSelectChange = (e, stateName) => {\n      //debugger;\n      const value = e.target.value;\n      this.setState({\n        'category': value\n      });\n    };\n\n    this.onSearch = () => {\n      const {\n        selectedCategory,\n        startDate,\n        endDate,\n        searchText,\n        category\n      } = this.state;\n      this.props.handleSearchClick(category, startDate, endDate, searchText);\n    };\n\n    this.state = {\n      categories: [{\n        id: 1,\n        value: 'Tickets'\n      }, {\n        id: 2,\n        value: 'Ticket Accepted'\n      }, {\n        id: 3,\n        value: 'Ticket Rejected'\n      }, {\n        id: 4,\n        value: 'Winner'\n      }, {\n        id: 5,\n        value: 'Non Winner'\n      }, {\n        id: 6,\n        value: 'Registration'\n      }, {\n        id: 7,\n        value: 'KYC-Accepted'\n      }, {\n        id: 8,\n        value: 'KYC-Rejected'\n      }, {\n        id: 9,\n        value: 'Environment'\n      }, {\n        id: 10,\n        value: 'API Errors'\n      }, {\n        id: 11,\n        value: 'Errors'\n      }],\n      startDate: '',\n      endDate: '',\n      tempStart: null,\n      tempEnd: null,\n      category: '',\n      selectedCategory: 'winner',\n      searchText: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      category,\n      startDate,\n      endDate,\n      tempStart,\n      tempEnd,\n      categories,\n      searchText\n    } = this.state;\n    const {\n      tableHeader,\n      userList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-criteria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: category,\n      onChange: e => this.handleSelectChange(e, 'category'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, SystemStatsCategories.map(g => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: g,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 44\n        }\n      }, g);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      maxDate: new Date(),\n      isClearable: false,\n      placeholderText: \"Start Date\",\n      selected: startDate,\n      onChange: selected => this.setState({\n        startDate: new Date(selected)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      maxDate: new Date(),\n      minDate: startDate,\n      isClearable: false,\n      placeholderText: \"End Date\",\n      selected: endDate,\n      onChange: selected => this.setState({\n        endDate: new Date(selected)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Search Text\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"Search Text\",\n      value: searchText,\n      onChange: e => this.handleInputChange(e, 'searchText'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: false,\n      className: \"system-search-btn\",\n      onClick: () => this.onSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"Filter\"))));\n  }\n\n}\n\nexport default SystemSearch;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/systemsearch/index.js"],"names":["React","DatePicker","Button","AppTextbox","SystemStatsCategories","categories","SystemSearch","Component","constructor","props","handleInputChange","e","stateName","regExp","target","value","test","setState","handleSelectChange","onSearch","selectedCategory","startDate","endDate","searchText","category","state","handleSearchClick","id","tempStart","tempEnd","componentDidMount","render","tableHeader","userList","map","g","Date","selected"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport AppTextbox from \"../AppTextbox\";\r\nimport {SystemStatsCategories} from \"../Constants/SystemStatsCategories\";\r\n\r\nimport './SystemSearch.css';\r\nimport { categories } from \"../Constants/SystemDashCategories\";\r\n\r\nclass SystemSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [{\r\n                id: 1,\r\n                value: 'Tickets'\r\n            }, {\r\n                id: 2,\r\n                value: 'Ticket Accepted'\r\n            }, {\r\n                id: 3,\r\n                value: 'Ticket Rejected'\r\n            }, {\r\n                id: 4,\r\n                value: 'Winner'\r\n            }, {\r\n                id: 5,\r\n                value: 'Non Winner'\r\n            }, {\r\n                id: 6,\r\n                value: 'Registration'\r\n            }, {\r\n                id: 7,\r\n                value: 'KYC-Accepted'\r\n            }, {\r\n                id: 8,\r\n                value: 'KYC-Rejected'\r\n            }, {\r\n                id: 9,\r\n                value: 'Environment'\r\n            }, {\r\n                id: 10,\r\n                value: 'API Errors'\r\n            }, {\r\n                id: 11,\r\n                value: 'Errors'\r\n            }],\r\n            startDate: '',\r\n            endDate: '',\r\n            tempStart: null,\r\n            tempEnd: null,\r\n            category: '',\r\n            selectedCategory: 'winner',\r\n            searchText: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n   \r\n    handleSelectChange = (e, stateName) => { \r\n        //debugger;\r\n        const value = e.target.value;\r\n    \r\n        this.setState({'category': value});\r\n    \r\n    }\r\n\r\n    onSearch = () => {\r\n        const {selectedCategory, startDate, endDate, searchText, category} = this.state;\r\n        this.props.handleSearchClick(category, startDate, endDate, searchText);\r\n    }\r\n\r\n    render() {\r\n        const {category, startDate, endDate, tempStart, tempEnd, categories, searchText} = this.state;\r\n        const {tableHeader, userList} = this.props;\r\n        return (\r\n            <div>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='system-search-label'>Category</div>\r\n                        <select value={category} onChange={(e) => this.handleSelectChange(e, 'category')}>\r\n                            {\r\n                                SystemStatsCategories.map(g => {\r\n                                    return <option value={g}>{g}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='system-search-label'>Start Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"Start Date\"\r\n                                    selected={startDate}\r\n                                    onChange={selected => this.setState({startDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='system-search-label'>End Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    minDate={startDate}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"End Date\"\r\n                                    selected={endDate}\r\n                                    onChange={selected => this.setState({endDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='system-search-label'>Search Text</div>\r\n                        <AppTextbox type='text' placeholder='Search Text' value={searchText}\r\n                                    onChange={(e) => this.handleInputChange(e, 'searchText')}/>\r\n                    </div>\r\n                    <div>\r\n                        <Button disabled={false} className='system-search-btn' onClick={() => this.onSearch()}>\r\n                            Filter\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default SystemSearch;\r\n"]},"metadata":{},"sourceType":"module"}