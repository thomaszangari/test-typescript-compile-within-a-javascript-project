{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";var _dec,_class,_temp;import React from'react';import{Button,Col,Form,Row}from\"react-bootstrap\";import dotenv from'dotenv';import\"./MFA.css\";import{inject,observer}from\"mobx-react\";import{Link}from\"react-router-dom\";dotenv.config();var MFA=(_dec=inject('authStore'),_dec(_class=observer(_class=(_temp=/*#__PURE__*/function(_React$Component){_inherits(MFA,_React$Component);var _super=_createSuper(MFA);function MFA(props){var _this;_classCallCheck(this,MFA);_this=_super.call(this,props);_this.validateForm=function(){return _this.state.TOTP.length==6;};_this.handleSubmit=function(event){event.preventDefault();var TOTP=_this.state.TOTP;_this.props.authStore.loginWithTOTP(TOTP,_this.props);};_this.ResendOTP=function(){_this.props.authStore.requestOTP();};_this.handleInputChange=function(value,stateName){var re=/^[0-9\\b]+$/;// if value is not blank, then test the regex\nif(value===''||re.test(value)){_this.setState(_defineProperty({},stateName,value));}};_this.state={TOTP:\"\"};return _this;}_createClass(MFA,[{key:\"render\",value:function render(){var _this2=this;var TOTP=this.state.TOTP;var otpAuthErrorMessage=this.props.authStore.otpAuthErrorMessage;var isValidate=this.validateForm();return/*#__PURE__*/React.createElement(\"div\",{className:\"login App-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login-panel\"},/*#__PURE__*/React.createElement(\"img\",{src:\"/images/lottery_numbers_blue.png\"}),/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleSubmit,className:\"login-form\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicEmail\"},/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"One-Time Passcode\",maxLength:\"6\",autoFocus:true,value:TOTP,onChange:function onChange(e){return _this2.handleInputChange(e.target.value,'TOTP');}}),otpAuthErrorMessage?/*#__PURE__*/React.createElement(Form.Text,{className:\"app-error-message\"},otpAuthErrorMessage):null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{block:true,bsSize:\"large\",onClick:function onClick(){return _this2.ResendOTP();}},\"Resend OTP\")),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{block:true,bsSize:\"large\",type:\"submit\",disabled:!isValidate},\"Verify\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"back-to-login\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{className:\"link-color\",to:\"/login\"},\"Back to Login Page\")))));}}]);return MFA;}(React.Component),_temp))||_class)||_class);export default MFA;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/components/login/MFA/MFA.js"],"names":["React","Button","Col","Form","Row","dotenv","inject","observer","Link","config","MFA","props","validateForm","state","TOTP","length","handleSubmit","event","preventDefault","authStore","loginWithTOTP","ResendOTP","requestOTP","handleInputChange","value","stateName","re","test","setState","otpAuthErrorMessage","isValidate","e","target","Component"],"mappings":"4iCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,CAAgBC,GAAhB,CAAqBC,IAArB,CAA2BC,GAA3B,KAAqC,iBAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAO,WAAP,CACA,OAAQC,MAAR,CAAgBC,QAAhB,KAA+B,YAA/B,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CAEAH,MAAM,CAACI,MAAP,G,GAIMC,CAAAA,G,OAFLJ,MAAM,CAAC,WAAD,C,aACNC,Q,oHAGG,aAAYI,KAAZ,CAAmB,qCACf,uBAAMA,KAAN,EADe,MAKnBC,YALmB,CAKJ,UAAM,CACjB,MAAO,OAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,EAA0B,CAAjC,CACH,CAPkB,OASnBC,YATmB,CASJ,SAACC,KAAD,CAAW,CACtBA,KAAK,CAACC,cAAN,GADsB,GAEfJ,CAAAA,IAFe,CAEP,MAAKD,KAFE,CAEfC,IAFe,CAGtB,MAAKH,KAAL,CAAWQ,SAAX,CAAqBC,aAArB,CAAmCN,IAAnC,CAAyC,MAAKH,KAA9C,EACH,CAbkB,OAenBU,SAfmB,CAeP,UAAM,CACd,MAAKV,KAAL,CAAWQ,SAAX,CAAqBG,UAArB,GACH,CAjBkB,OAmBnBC,iBAnBmB,CAmBC,SAACC,KAAD,CAAQC,SAAR,CAAsB,CAEtC,GAAMC,CAAAA,EAAE,CAAG,YAAX,CAEA;AACA,GAAIF,KAAK,GAAK,EAAV,EAAgBE,EAAE,CAACC,IAAH,CAAQH,KAAR,CAApB,CAAoC,CAChC,MAAKI,QAAL,oBAAgBH,SAAhB,CAA4BD,KAA5B,GACH,CACJ,CA3BkB,CAEf,MAAKX,KAAL,CAAa,CAACC,IAAI,CAAE,EAAP,CAAb,CAFe,aAGlB,C,uDA0BQ,oBACEA,CAAAA,IADF,CACU,KAAKD,KADf,CACEC,IADF,IAEEe,CAAAA,mBAFF,CAEyB,KAAKlB,KAAL,CAAWQ,SAFpC,CAEEU,mBAFF,CAGL,GAAMC,CAAAA,UAAU,CAAG,KAAKlB,YAAL,EAAnB,CACA,mBACI,2BAAK,SAAS,CAAC,kBAAf,eACI,2BAAK,SAAS,CAAC,aAAf,eACI,2BAAK,GAAG,CAAC,kCAAT,EADJ,cAGI,oBAAC,IAAD,EAAM,QAAQ,CAAE,KAAKI,YAArB,CAAmC,SAAS,CAAC,YAA7C,eAEI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,eACI,oBAAC,IAAD,CAAM,OAAN,EACI,WAAW,CAAC,mBADhB,CAEI,SAAS,CAAC,GAFd,CAGI,SAAS,KAHb,CAII,KAAK,CAAEF,IAJX,CAKI,QAAQ,CAAE,kBAAAiB,CAAC,QAAI,CAAA,MAAI,CAACR,iBAAL,CAAuBQ,CAAC,CAACC,MAAF,CAASR,KAAhC,CAAuC,MAAvC,CAAJ,EALf,EADJ,CAQKK,mBAAmB,cAAG,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,mBAArB,EAA0CA,mBAA1C,CAAH,CAAgF,IARxG,CAFJ,cAYI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,MAAD,EAAQ,KAAK,KAAb,CAAc,MAAM,CAAC,OAArB,CAA6B,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACR,SAAL,EAAN,EAAtC,eADJ,CADJ,cAMI,oBAAC,GAAD,mBACI,oBAAC,MAAD,EAAQ,KAAK,KAAb,CAAc,MAAM,CAAC,OAArB,CAA6B,IAAI,CAAC,QAAlC,CAA2C,QAAQ,CAAE,CAACS,UAAtD,WADJ,CANJ,CAZJ,CAHJ,cA6BI,2BAAK,SAAS,CAAC,eAAf,eACI,4CACI,oBAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,CAA6B,EAAE,CAAC,QAAhC,uBADJ,CADJ,CA7BJ,CADJ,CADJ,CAuCH,C,iBA1Ea9B,KAAK,CAACiC,S,4BA8ExB,cAAevB,CAAAA,GAAf","sourcesContent":["import React from 'react';\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport dotenv from 'dotenv'\r\nimport \"./MFA.css\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ndotenv.config()\r\n\r\n@inject('authStore')\r\n@observer\r\nclass MFA extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {TOTP: \"\"};\r\n    }\r\n\r\n    validateForm = () => {\r\n        return this.state.TOTP.length == 6;\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {TOTP} = this.state;\r\n        this.props.authStore.loginWithTOTP(TOTP, this.props)\r\n    }\r\n\r\n    ResendOTP = () => {\r\n        this.props.authStore.requestOTP();\r\n    }\r\n\r\n    handleInputChange = (value, stateName) => {\r\n\r\n        const re = /^[0-9\\b]+$/;\r\n\r\n        // if value is not blank, then test the regex\r\n        if (value === '' || re.test(value)) {\r\n            this.setState({[stateName]: value});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {TOTP} = this.state;\r\n        const {otpAuthErrorMessage} = this.props.authStore;\r\n        const isValidate = this.validateForm();\r\n        return (\r\n            <div className=\"login App-header\">\r\n                <div className='login-panel'>\r\n                    <img src='/images/lottery_numbers_blue.png'/>\r\n\r\n                    <Form onSubmit={this.handleSubmit} className='login-form'>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control\r\n                                placeholder=\"One-Time Passcode\"\r\n                                maxLength='6'\r\n                                autoFocus\r\n                                value={TOTP}\r\n                                onChange={e => this.handleInputChange(e.target.value, 'TOTP')}\r\n                            />\r\n                            {otpAuthErrorMessage ? <Form.Text className=\"app-error-message\">{otpAuthErrorMessage}</Form.Text> : null}\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button block bsSize=\"large\" onClick={() => this.ResendOTP()}>\r\n                                    Resend OTP\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button block bsSize=\"large\" type=\"submit\" disabled={!isValidate}>\r\n                                    Verify\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Form>\r\n                    <div className=\"back-to-login\">\r\n                        <div>\r\n                            <Link className=\"link-color\" to=\"/login\">Back to Login Page</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MFA;\r\n"]},"metadata":{},"sourceType":"module"}