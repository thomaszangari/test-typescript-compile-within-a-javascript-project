{"ast":null,"code":"import _initializerDefineProperty from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";var _class,_descriptor,_descriptor2,_descriptor3,_descriptor4,_descriptor5,_descriptor6,_descriptor7,_descriptor8,_descriptor9,_descriptor10,_temp;import React from\"react\";import{persist}from\"mobx-persist\";import{action,observable}from\"mobx\";import config from\"../config\";export var AuthStore=(_class=(_temp=/*#__PURE__*/function(){// Password Login\n// OTP Verify\n// User Details\nfunction AuthStore(rootStore){_classCallCheck(this,AuthStore);this.rootStore=null;_initializerDefineProperty(this,\"passwordAuthErrorMessage\",_descriptor,this);_initializerDefineProperty(this,\"accessToken\",_descriptor2,this);_initializerDefineProperty(this,\"refreshToken\",_descriptor3,this);_initializerDefineProperty(this,\"otpAuthErrorMessage\",_descriptor4,this);_initializerDefineProperty(this,\"otpAccessToken\",_descriptor5,this);_initializerDefineProperty(this,\"userId\",_descriptor6,this);_initializerDefineProperty(this,\"userName\",_descriptor7,this);_initializerDefineProperty(this,\"userFullName\",_descriptor8,this);_initializerDefineProperty(this,\"userRole\",_descriptor9,this);_initializerDefineProperty(this,\"userPolicies\",_descriptor10,this);this.rootStore=rootStore;}_createClass(AuthStore,[{key:\"makeWSConnection\",value:function makeWSConnection(){var _this=this;// Create WebSocket connection.\nvar baseURL=config.SERVER_BASE_URL.toString();if(baseURL.startsWith('https://')){baseURL=baseURL.replace(\"https://\",\"\");}else if(baseURL.startsWith('http://')){baseURL=baseURL.replace(\"http://\",\"\");}var socket=new WebSocket(\"wss://\".concat(baseURL));// Connection opened\nsocket.addEventListener('open',function(event){socket.send('Hello Server!');console.log('WebSocket Connected');});// Listen for messages\nsocket.addEventListener('message',function(event){console.log('Message from server',event.data);var details=JSON.parse(event.data);debugger;if(details&&details.errorMessage){_this.props.miscellaneousStore.setFailedJobDetails(details);}});// Listen for possible errors\nsocket.addEventListener('error',function(event){console.log('Message from server ',event.data);});}},{key:\"postLogin\",value:function postLogin(props){this.getPolicies(props);this.makeWSConnection();}/**\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     */},{key:\"loginWithPassword\",value:function loginWithPassword(email,password,props){var _this2=this;var data={\"username\":email,\"password\":Buffer.from(password).toString('base64')};fetch(\"\".concat(config.SERVER_BASE_URL,\"/v1/auth/login\"),{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(res){if(res&&res.error){_this2.passwordAuthErrorMessage=res.error;}else{_this2.otpAuthErrorMessage=null;_this2.passwordAuthErrorMessage=null;var accessToken=res.accessToken,refreshToken=res.refreshToken,firstname=res.firstname,lastname=res.lastname,userid=res.userid,OTPAccessToken=res.OTPAccessToken;localStorage.setItem('userName',email);if(accessToken!==undefined){//this.setState({errorMessage: 'Authentication successful', accessToken, refreshToken});\n//this.passwordAuthErrorMessage = 'Authentication successful';\nlocalStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',refreshToken);localStorage.setItem('loggedInUserFullName',\"\".concat(firstname,\" \").concat(lastname));localStorage.setItem('loggedInUserID',userid);_this2.accessToken=accessToken;_this2.refreshToken=refreshToken;_this2.userId=userid;_this2.userName=email;_this2.userFullName=\"\".concat(firstname,\" \").concat(lastname);_this2.postLogin(props);}else if(OTPAccessToken!==undefined){//this.setState({errorMessage: 'Authentication successful'});\n//this.passwordAuthErrorMessage = 'Authentication successful';\nlocalStorage.setItem('OTPAccessToken',OTPAccessToken);_this2.otpAccessToken=OTPAccessToken;_this2.userName=email;props.history.push('/login/mfa');}}}).catch(function(error){_this2.passwordAuthErrorMessage=error.toString();});/*data = {\r\n            \"username\": email\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/querypolicies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    //this.setState({errorMessage: res.error});\r\n                    this.passwordAuthErrorMessage = res.error;\r\n                } else {\r\n                    localStorage.setItem('userpolicies', JSON.stringify(res));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                //this.setState({errorMessage: error.toString()});\r\n                this.passwordAuthErrorMessage = error.toString();\r\n            });*/}/**\r\n     *\r\n     * @param userName\r\n     * @param TOTP\r\n     */},{key:\"loginWithTOTP\",value:function loginWithTOTP(OTP,props){var _this3=this;var data={\"OTP\":OTP};fetch(\"\".concat(config.SERVER_BASE_URL,\"/v1/auth/login/mfa\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.getOTPAccessToken())},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(res){if(res&&res.error){_this3.otpAuthErrorMessage=res.error;}else{_this3.otpAuthErrorMessage=null;_this3.passwordAuthErrorMessage=null;var accessToken=res.accessToken,refreshToken=res.refreshToken,firstname=res.firstname,lastname=res.lastname,userid=res.userid,userName=res.userName;// this.setState({errorMessage: 'Authentication successful', accessToken, refreshToken});\nlocalStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',refreshToken);//localStorage.setItem('userName', userName);\nlocalStorage.setItem('loggedInUserFullName',\"\".concat(firstname,\" \").concat(lastname));localStorage.setItem('loggedInUserID',userid);//this.props.history.push('/dashboard', {userName: email});\n_this3.accessToken=accessToken;_this3.refreshToken=refreshToken;_this3.userId=userid;//this.userName = email;\n_this3.userFullName=\"\".concat(firstname,\" \").concat(lastname);_this3.postLogin(props);}}).catch(function(error){_this3.otpAuthErrorMessage=error.toString();});}/**\r\n     *\r\n     */},{key:\"requestOTP\",value:function requestOTP(){var _this4=this;var token=localStorage.getItem('OTPAccessToken');fetch(\"\".concat(config.SERVER_BASE_URL,\"/v1/auth/otp\"),{method:'GET',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(res){if(res&&res.error){_this4.otpAuthErrorMessage=res.error;}else if(res&&res.message){_this4.otpAuthErrorMessage=res.message;}}).catch(function(error){_this4.errorMessage=error.toString();});}/**\r\n     *\r\n     */},{key:\"logout\",value:function logout(props){var token=this.getRefreshToken();var username=this.getUserName();var url=\"\".concat(config.SERVER_BASE_URL,\"/v1/auth/logout\");fetch(url,{method:'POST',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('accessToken')),'Content-Type':'application/json'},body:JSON.stringify({username:username,token:token})}).then(function(response){return response.json();}).then(function(res){if(res.error){alert(res.error);}else{//this.navigateToHome();\nlocalStorage.clear();props.history.push('/');}}).catch(function(error){alert('Error:',error);});}},{key:\"getPolicies\",value:function getPolicies(props){var _this5=this;var data={\"username\":localStorage.getItem('userName')};fetch(\"\".concat(config.SERVER_BASE_URL,\"/v1/users/querypolicies\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(res){if(res&&res.error){//this.setState({errorMessage: res.error});\n_this5.passwordAuthErrorMessage=res.error;}else{// props.history.push('/dashboard');\nlocalStorage.setItem('userpolicies',JSON.stringify(res));props.history.push('/dashboard',{userName:_this5.userName});}}).catch(function(error){console.log(error);//this.setState({errorMessage: error.toString()});\n_this5.passwordAuthErrorMessage=error.toString();});}},{key:\"getAccessToken\",value:function getAccessToken(){return this.accessToken;}},{key:\"getRefreshToken\",value:function getRefreshToken(){return this.refreshToken;}},{key:\"getOTPAccessToken\",value:function getOTPAccessToken(){return this.otpAccessToken;}},{key:\"getUserName\",value:function getUserName(){return this.userName;}}]);return AuthStore;}(),_temp),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"passwordAuthErrorMessage\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,\"accessToken\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,\"refreshToken\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor4=_applyDecoratedDescriptor(_class.prototype,\"otpAuthErrorMessage\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor5=_applyDecoratedDescriptor(_class.prototype,\"otpAccessToken\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor6=_applyDecoratedDescriptor(_class.prototype,\"userId\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor7=_applyDecoratedDescriptor(_class.prototype,\"userName\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor8=_applyDecoratedDescriptor(_class.prototype,\"userFullName\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor9=_applyDecoratedDescriptor(_class.prototype,\"userRole\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor10=_applyDecoratedDescriptor(_class.prototype,\"userPolicies\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_applyDecoratedDescriptor(_class.prototype,\"loginWithPassword\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"loginWithPassword\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"loginWithTOTP\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"loginWithTOTP\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"requestOTP\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"requestOTP\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"logout\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"logout\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getPolicies\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"getPolicies\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getAccessToken\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"getAccessToken\"),_class.prototype)),_class);","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/store/AuthStore.js"],"names":["React","persist","action","observable","config","AuthStore","rootStore","baseURL","SERVER_BASE_URL","toString","startsWith","replace","socket","WebSocket","addEventListener","event","send","console","log","data","details","JSON","parse","errorMessage","props","miscellaneousStore","setFailedJobDetails","getPolicies","makeWSConnection","email","password","Buffer","from","fetch","method","headers","body","stringify","then","response","json","res","error","passwordAuthErrorMessage","otpAuthErrorMessage","accessToken","refreshToken","firstname","lastname","userid","OTPAccessToken","localStorage","setItem","undefined","userId","userName","userFullName","postLogin","otpAccessToken","history","push","catch","OTP","getOTPAccessToken","token","getItem","message","getRefreshToken","username","getUserName","url","alert","clear"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {persist} from \"mobx-persist\";\r\nimport {action, observable} from \"mobx\";\r\nimport config from \"../config\";\r\n\r\nexport class AuthStore {\r\n\r\n    rootStore = null;\r\n\r\n    // Password Login\r\n    @observable passwordAuthErrorMessage = null;\r\n    @persist @observable accessToken = null;\r\n    @persist @observable refreshToken = null;\r\n\r\n    // OTP Verify\r\n    @observable otpAuthErrorMessage = null;\r\n    @persist @observable otpAccessToken = null;\r\n\r\n    // User Details\r\n    @persist @observable userId = null;\r\n    @persist @observable userName = null;\r\n    @persist @observable userFullName = null;\r\n    @persist @observable userRole = null;\r\n    @persist @observable userPolicies = null;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    makeWSConnection() {\r\n        // Create WebSocket connection.\r\n        let baseURL = (config.SERVER_BASE_URL).toString();\r\n        if(baseURL.startsWith('https://')){\r\n            baseURL = baseURL.replace(\"https://\", \"\");\r\n        } else if(baseURL.startsWith('http://')) {\r\n            baseURL = baseURL.replace(\"http://\", \"\");\r\n        }\r\n        const socket = new WebSocket(`wss://${baseURL}`);\r\n\r\n        // Connection opened\r\n        socket.addEventListener('open',  (event) => {\r\n            socket.send('Hello Server!');\r\n            console.log('WebSocket Connected');\r\n        });\r\n\r\n        // Listen for messages\r\n        socket.addEventListener('message',  (event) => {\r\n            console.log('Message from server', event.data);\r\n            const details = JSON.parse(event.data);\r\n            debugger;\r\n            if(details && details.errorMessage) {\r\n                this.props.miscellaneousStore.setFailedJobDetails(details);\r\n            }\r\n        });\r\n\r\n        // Listen for possible errors\r\n        socket.addEventListener('error',  (event) =>{\r\n            console.log('Message from server ', event.data);\r\n        });\r\n    }\r\n\r\n    postLogin(props) {\r\n        this.getPolicies(props);\r\n        this.makeWSConnection();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     */\r\n    @action loginWithPassword(email, password, props) {\r\n\r\n        let data = {\r\n            \"username\": email,\r\n            \"password\": Buffer.from(password).toString('base64')\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/auth/login`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.passwordAuthErrorMessage = res.error;\r\n                } else {\r\n\r\n                    this.otpAuthErrorMessage = null;\r\n                    this.passwordAuthErrorMessage = null;\r\n\r\n                    const {accessToken, refreshToken, firstname, lastname, userid, OTPAccessToken} = res;\r\n                    localStorage.setItem('userName', email);\r\n                    if (accessToken !== undefined) {\r\n                        //this.setState({errorMessage: 'Authentication successful', accessToken, refreshToken});\r\n                        //this.passwordAuthErrorMessage = 'Authentication successful';\r\n                        localStorage.setItem('accessToken', accessToken);\r\n                        localStorage.setItem('refreshToken', refreshToken);\r\n                        localStorage.setItem('loggedInUserFullName', `${firstname} ${lastname}`);\r\n                        localStorage.setItem('loggedInUserID', userid);\r\n\r\n                        this.accessToken = accessToken;\r\n                        this.refreshToken = refreshToken;\r\n                        this.userId = userid;\r\n                        this.userName = email;\r\n                        this.userFullName = `${firstname} ${lastname}`\r\n                        this.postLogin(props);\r\n\r\n                    } else if (OTPAccessToken !== undefined) {\r\n                        //this.setState({errorMessage: 'Authentication successful'});\r\n                        //this.passwordAuthErrorMessage = 'Authentication successful';\r\n                        localStorage.setItem('OTPAccessToken', OTPAccessToken);\r\n                        this.otpAccessToken = OTPAccessToken;\r\n                        this.userName = email;\r\n                        props.history.push('/login/mfa');\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.passwordAuthErrorMessage = error.toString();\r\n            });\r\n\r\n        /*data = {\r\n            \"username\": email\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/querypolicies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    //this.setState({errorMessage: res.error});\r\n                    this.passwordAuthErrorMessage = res.error;\r\n                } else {\r\n                    localStorage.setItem('userpolicies', JSON.stringify(res));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                //this.setState({errorMessage: error.toString()});\r\n                this.passwordAuthErrorMessage = error.toString();\r\n            });*/\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userName\r\n     * @param TOTP\r\n     */\r\n    @action loginWithTOTP(OTP, props) {\r\n\r\n        let data = {\r\n            \"OTP\": OTP\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/auth/login/mfa`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${this.getOTPAccessToken()}`\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.otpAuthErrorMessage = res.error;\r\n                } else {\r\n\r\n                    this.otpAuthErrorMessage = null;\r\n                    this.passwordAuthErrorMessage = null;\r\n\r\n                    const {accessToken, refreshToken, firstname, lastname, userid, userName} = res;\r\n                    // this.setState({errorMessage: 'Authentication successful', accessToken, refreshToken});\r\n                    localStorage.setItem('accessToken', accessToken);\r\n                    localStorage.setItem('refreshToken', refreshToken);\r\n                    //localStorage.setItem('userName', userName);\r\n                    localStorage.setItem('loggedInUserFullName', `${firstname} ${lastname}`);\r\n                    localStorage.setItem('loggedInUserID', userid);\r\n                    //this.props.history.push('/dashboard', {userName: email});\r\n\r\n                    this.accessToken = accessToken;\r\n                    this.refreshToken = refreshToken;\r\n                    this.userId = userid;\r\n                    //this.userName = email;\r\n                    this.userFullName = `${firstname} ${lastname}`\r\n                    this.postLogin(props);\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.otpAuthErrorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @action requestOTP() {\r\n\r\n        const token = localStorage.getItem('OTPAccessToken');\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/auth/otp`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.otpAuthErrorMessage = res.error;\r\n                } else if (res && res.message) {\r\n                    this.otpAuthErrorMessage = res.message;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.errorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @action logout(props) {\r\n\r\n        const token = this.getRefreshToken();\r\n        const username = this.getUserName();\r\n        const url = `${config.SERVER_BASE_URL}/v1/auth/logout`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({username: username, token: token}),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    alert(res.error);\r\n                } else {\r\n                    //this.navigateToHome();\r\n                    localStorage.clear();\r\n                    props.history.push('/');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Error:', error);\r\n            });\r\n    }\r\n\r\n    @action getPolicies(props) {\r\n\r\n        const data = {\r\n            \"username\": localStorage.getItem('userName')\r\n        }\r\n\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/querypolicies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    //this.setState({errorMessage: res.error});\r\n                    this.passwordAuthErrorMessage = res.error;\r\n                } else {\r\n                    // props.history.push('/dashboard');\r\n                    localStorage.setItem('userpolicies', JSON.stringify(res));\r\n                    props.history.push('/dashboard', {userName: this.userName});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                //this.setState({errorMessage: error.toString()});\r\n                this.passwordAuthErrorMessage = error.toString();\r\n            });\r\n    }\r\n\r\n    @action getAccessToken() {\r\n        return this.accessToken;\r\n    }\r\n\r\n    getRefreshToken() {\r\n        return this.refreshToken;\r\n    }\r\n\r\n    getOTPAccessToken() {\r\n        return this.otpAccessToken;\r\n    }\r\n\r\n    getUserName() {\r\n        return this.userName;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}