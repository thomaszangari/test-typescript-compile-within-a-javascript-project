{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\resetpassword\\\\resetPasswordComponent.js\";\nimport React from \"react\";\nimport config from \"../config\";\nimport { Button, Form } from \"react-bootstrap\";\nimport './resetPasswordComponent.css';\n\nclass ResetPasswordComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validatePasswordField = password => {\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/g;\n      return regex.test(password);\n    };\n\n    this.validateForm = () => {\n      const {\n        confirmPassword,\n        password\n      } = this.state;\n\n      if (confirmPassword !== '' && password !== '' && confirmPassword === password) {\n        const isValidPassword = this.validatePasswordField(password);\n        const invalidPasswordMessage = 'A Password MUST contain at least 8 characters, at least 1 Uppercase alphabet, at least 1 lowercase alphabet, at least 1 number, and at least 1 special character (@,$,!,%,*,?,&)';\n        this.setState({\n          isValidate: isValidPassword,\n          warningMessage: !isValidPassword ? invalidPasswordMessage : null\n        });\n      } else {\n        this.setState({\n          isValidate: false,\n          warningMessage: null\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let {\n        username,\n        password,\n        token\n      } = this.state;\n      password = Buffer.from(password).toString('base64');\n      const data = {\n        username,\n        password,\n        token\n      };\n      fetch(`${config.SERVER_BASE_URL}/v1/users/setpassword`, {\n        method: 'POST',\n        // or 'PUT'\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(res => {\n        if (res && res.error) {\n          this.setState({\n            errorMessage: res.error\n          });\n        } else if (res && res.message) {\n          this.props.history.push('/');\n        }\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          errorMessage: error.toString()\n        });\n      });\n    };\n\n    this.handleInputChange = (value, stateName) => {\n      this.setState({\n        [stateName]: value\n      }, () => this.validateForm());\n    };\n\n    this.state = {\n      password: '',\n      confirmPassword: '',\n      username: null,\n      token: null,\n      isValidate: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match && this.props.match.params) {\n      const {\n        username,\n        token\n      } = this.props.match.params;\n      this.setState({\n        username: username,\n        token: token\n      });\n    }\n  }\n\n  render() {\n    const {\n      errorMessage,\n      confirmPassword,\n      password,\n      isValidate,\n      warningMessage\n    } = this.state; // const isValidate = this.validateForm();\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/images/lottery_numbers_blue.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: e => this.handleSubmit(e),\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"NEW PASSWORD\",\n      autoFocus: true,\n      value: password,\n      onChange: e => this.handleInputChange(e.target.value, 'password'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"CONFIRM PASSWORD\",\n      onChange: e => this.handleInputChange(e.target.value, 'confirmPassword'),\n      value: confirmPassword,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), errorMessage ? /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"app-error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 46\n      }\n    }, errorMessage) : null, warningMessage ? /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"app-error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 48\n      }\n    }, warningMessage) : null), /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      type: \"submit\",\n      className: \"login-button\",\n      disabled: !isValidate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"RESET PASSWORD\"))));\n  }\n\n}\n\nexport default ResetPasswordComponent;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/resetpassword/resetPasswordComponent.js"],"names":["React","config","Button","Form","ResetPasswordComponent","Component","constructor","props","validatePasswordField","password","regex","test","validateForm","confirmPassword","state","isValidPassword","invalidPasswordMessage","setState","isValidate","warningMessage","handleSubmit","event","preventDefault","username","token","Buffer","from","toString","data","fetch","SERVER_BASE_URL","method","headers","body","JSON","stringify","then","response","json","res","error","errorMessage","message","history","push","catch","console","log","handleInputChange","value","stateName","componentDidMount","match","params","render","e","target"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport config from \"../config\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport './resetPasswordComponent.css';\r\n\r\nclass ResetPasswordComponent extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {password: '', confirmPassword: '', username: null, token: null, isValidate: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match && this.props.match.params) {\r\n            const {username, token} = this.props.match.params;\r\n            this.setState({username: username, token: token});\r\n        }\r\n    }\r\n    validatePasswordField = (password) => {\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/g;\r\n        return regex.test(password);\r\n    }\r\n    validateForm = () => {\r\n        const {confirmPassword, password} = this.state;\r\n        if(confirmPassword !== '' && password !== '' && confirmPassword === password) {\r\n            const isValidPassword = this.validatePasswordField(password);\r\n            const invalidPasswordMessage = 'A Password MUST contain at least 8 characters, at least 1 Uppercase alphabet, at least 1 lowercase alphabet, at least 1 number, and at least 1 special character (@,$,!,%,*,?,&)';\r\n            this.setState({isValidate: isValidPassword, warningMessage: !isValidPassword ? invalidPasswordMessage : null})\r\n        } else {\r\n            this.setState({isValidate: false, warningMessage: null});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let {username, password, token} = this.state;\r\n        password = Buffer.from(password).toString('base64')\r\n        const data = {\r\n            username,\r\n            password,\r\n            token\r\n        }\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/setpassword`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else if (res && res.message) {\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    handleInputChange = (value, stateName) => {\r\n        this.setState({[stateName]: value}, ()=>this.validateForm());\r\n    }\r\n\r\n    render() {\r\n        const {errorMessage, confirmPassword, password, isValidate, warningMessage} = this.state;\r\n        // const isValidate = this.validateForm();\r\n        return (\r\n            <div className=\"login App-header\" >\r\n                <div className='login-panel'>\r\n                    <img src='/images/lottery_numbers_blue.png'/>\r\n                    <Form onSubmit={(e) => this.handleSubmit(e)} className='login-form'>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"NEW PASSWORD\"\r\n                                autoFocus\r\n                                value={password}\r\n                                onChange={e => this.handleInputChange(e.target.value, 'password')}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control\r\n                                placeholder=\"CONFIRM PASSWORD\"\r\n                                onChange={e => this.handleInputChange(e.target.value, 'confirmPassword')}\r\n                                value={confirmPassword}\r\n                                type=\"password\"\r\n                            />\r\n\r\n                            {errorMessage ?  <Form.Text className=\"app-error-message\">{errorMessage}</Form.Text> : null}\r\n                            {warningMessage ?  <Form.Text className=\"app-error-message\">{warningMessage}</Form.Text> : null}\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button\r\n                            block\r\n                            bsSize=\"large\"\r\n                            type=\"submit\"\r\n                            className='login-button'\r\n                            disabled={!isValidate}\r\n                        >\r\n                            RESET PASSWORD\r\n                        </Button>\r\n                    </Form>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPasswordComponent;\r\n"]},"metadata":{},"sourceType":"module"}