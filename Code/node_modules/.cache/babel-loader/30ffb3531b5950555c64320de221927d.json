{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Admin\\\\Settings\\\\Hub\\\\SettingsHub.js\";\n\nimport React from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport './SettingsHub.css';\nimport AppToast from \"../../../toast\";\nimport { inject, observer } from \"mobx-react\";\nimport MFABypassRule from \"../Tabs/MFABypassRule\";\nimport { checkRenderPermissions } from \"../../../helpers\";\nimport { permissions } from \"../../../constants\";\nlet SettingsHub = (_dec = inject('settingsStore'), _dec(_class = observer(_class = (_temp = class SettingsHub extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToastClose = () => {//const navigateToFirstTab = this.props.playerStore.playerHubNavigateToFirstTab;\n      //this.props.settingsStore.setToast(false);\n      //if (navigateToFirstTab)\n      //  this.navigateToFirstTab();\n    };\n\n    this.handleCancel = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSelect = key => {\n      //this.props.playerStore.logAction(UserActionCategory.TAB_VIEW, key, target);\n      this.setState({\n        key\n      });\n    };\n\n    this.navigateToFirstTab = () => {\n      this.handleSelect('MFA Bypass Rule');\n    };\n\n    this.state = {\n      key: 'MFA Bypass Rule',\n      selectedIndex: 0\n    };\n  }\n\n  componentDidMount() {//        this.props.playerStore.getPlayerDetails();\n  }\n\n  renderSettingsHub() {\n    const {\n      showToast,\n      successMessage,\n      errorMessage\n    } = this.props.settingsStore;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-tab-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, showToast ? /*#__PURE__*/React.createElement(AppToast, {\n      showToast: showToast,\n      message: successMessage ? successMessage : errorMessage,\n      isSuccessMessage: successMessage !== null,\n      handleClose: () => this.handleToastClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(Tabs, {\n      id: \"controlled-tab-example\",\n      activeKey: this.state.key,\n      onSelect: key => this.handleSelect(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, checkRenderPermissions(permissions.CAN_SEE_MFA_BYPASS_RULES, JSON.parse(localStorage.getItem('userpolicies'))) ? /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"MFA Bypass Rule\",\n      title: \"MFA Bypass Rules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MFABypassRule, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }))) : null));\n  }\n\n  render() {\n    var renderObj;\n\n    if (checkRenderPermissions(permissions.CAN_ACCESS_SETTINGS, JSON.parse(localStorage.getItem('userpolicies')))) {\n      renderObj = this.renderSettingsHub();\n    } else {\n      renderObj = /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"unauthorized-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"You do not have permission to view this page! Please contact your System Administrator!\");\n    }\n\n    return renderObj;\n  }\n\n}, _temp)) || _class) || _class);\nexport default SettingsHub;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Admin/Settings/Hub/SettingsHub.js"],"names":["React","Tab","Tabs","AppToast","inject","observer","MFABypassRule","checkRenderPermissions","permissions","SettingsHub","Component","constructor","props","handleToastClose","handleCancel","history","goBack","handleSelect","key","setState","navigateToFirstTab","state","selectedIndex","componentDidMount","renderSettingsHub","showToast","successMessage","errorMessage","settingsStore","CAN_SEE_MFA_BYPASS_RULES","JSON","parse","localStorage","getItem","render","renderObj","CAN_ACCESS_SETTINGS"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport './SettingsHub.css';\r\nimport AppToast from \"../../../toast\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport MFABypassRule from \"../Tabs/MFABypassRule\";\r\nimport {checkRenderPermissions} from \"../../../helpers\";\r\nimport {permissions} from \"../../../constants\";\r\n\r\n@inject('settingsStore')\r\n@observer\r\nclass SettingsHub extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'MFA Bypass Rule',\r\n            selectedIndex: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n//        this.props.playerStore.getPlayerDetails();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        //const navigateToFirstTab = this.props.playerStore.playerHubNavigateToFirstTab;\r\n        //this.props.settingsStore.setToast(false);\r\n        //if (navigateToFirstTab)\r\n        //  this.navigateToFirstTab();\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleSelect = (key) => {\r\n        //this.props.playerStore.logAction(UserActionCategory.TAB_VIEW, key, target);\r\n        this.setState({key})\r\n    }\r\n\r\n    navigateToFirstTab = () => {\r\n        this.handleSelect('MFA Bypass Rule');\r\n    }\r\n\r\n    renderSettingsHub() {\r\n\r\n        const {showToast, successMessage, errorMessage} = this.props.settingsStore;\r\n\r\n        return (\r\n            <div className='app-tab-panel'>\r\n                {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={this.state.key}\r\n                    onSelect={(key) => this.handleSelect(key)}\r\n                >\r\n                    {checkRenderPermissions(permissions.CAN_SEE_MFA_BYPASS_RULES, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                        <Tab eventKey=\"MFA Bypass Rule\" title=\"MFA Bypass Rules\">\r\n                            <MFABypassRule {...this.props}/>\r\n                        </Tab> : null}\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_ACCESS_SETTINGS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderSettingsHub();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SettingsHub;"]},"metadata":{},"sourceType":"module"}