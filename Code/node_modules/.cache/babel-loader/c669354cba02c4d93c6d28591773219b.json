{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\Ticket\\\\SearchBar\\\\index.js\";\n\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport './TicketSearch.css';\nimport { inject, observer } from \"mobx-react\";\nlet TicketSearch = (_dec = inject('playerStore'), _dec(_class = observer(_class = (_temp = class TicketSearch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (e, stateName) => {\n      this.setState({\n        [stateName]: e.target.value\n      });\n    };\n\n    this.handleSelectChange = (e, stateName) => {\n      const val = e.target.value;\n\n      if (stateName === 'game') {\n        this.props.playerStore.setSelectedGameType(val);\n      } else if (stateName === 'winStatus') {\n        this.props.playerStore.setSelectedWinStatus(val);\n      } else if (stateName === 'status') {\n        this.props.playerStore.setSelectedStatus(val);\n      }\n    };\n\n    this.onSearch = () => {\n      const {\n        startDate,\n        endDate\n      } = this.state;\n      this.props.handleSearchClick(startDate, endDate);\n    };\n\n    this.onFilter = () => {\n      this.props.handleFilterClick();\n    };\n\n    this.onClearFilters = () => {\n      this.props.playerStore.ClearTicketHistoryFilters();\n    };\n\n    this.onNewSearchCallback = () => {\n      this.props.playerStore.clearTicketHistorySearchResults();\n      this.props.playerStore.setTicketHistorySearchMode(true);\n    };\n\n    this.onNewSearch = () => {\n      this.setState({\n        startDate: '',\n        endDate: ''\n      }, () => this.onNewSearchCallback());\n    };\n\n    this.state = {\n      startDate: '',\n      endDate: ''\n    };\n  }\n\n  componentDidMount() {\n    let startDate = new Date();\n    startDate.setDate(startDate.getDate() - 31);\n    this.setState({\n      startDate: startDate,\n      endDate: new Date()\n    });\n  }\n\n  render() {\n    const {\n      startDate,\n      endDate\n    } = this.state;\n    const {\n      allGameTypes,\n      allWinStatuses,\n      allStatuses,\n      selectedGameType,\n      selectedWinStatus,\n      selectedStatus,\n      isTicketHistoryInSearchMode\n    } = this.props.playerStore;\n    let isDisabled = true;\n\n    if (startDate && endDate) {\n      isDisabled = false;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-criteria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticket-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      popperPlacement: \"bottom-end\",\n      disabled: !isTicketHistoryInSearchMode,\n      selected: startDate,\n      maxDate: endDate || new Date(),\n      onChange: selected => this.setState({\n        startDate: new Date(selected)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticket-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      popperPlacement: \"bottom-end\",\n      disabled: !isTicketHistoryInSearchMode,\n      selected: endDate,\n      minDate: startDate,\n      maxDate: new Date(),\n      onChange: selected => this.setState({\n        endDate: new Date(selected)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticket-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"Game\"), /*#__PURE__*/React.createElement(\"select\", {\n      disabled: isTicketHistoryInSearchMode,\n      value: selectedGameType,\n      onChange: e => this.handleSelectChange(e, 'game'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, allGameTypes.map(identifier => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: identifier,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 44\n        }\n      }, identifier);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticket-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Win Status\"), /*#__PURE__*/React.createElement(\"select\", {\n      disabled: isTicketHistoryInSearchMode,\n      value: selectedWinStatus,\n      onChange: e => this.handleSelectChange(e, 'winStatus'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, allWinStatuses.map(identifier => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: identifier,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 44\n        }\n      }, identifier);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticket-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Approval Status\"), /*#__PURE__*/React.createElement(\"select\", {\n      disabled: isTicketHistoryInSearchMode,\n      value: selectedStatus,\n      onChange: e => this.handleSelectChange(e, 'status'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, allStatuses.map(identifier => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: identifier,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 44\n        }\n      }, identifier);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, isTicketHistoryInSearchMode ? /*#__PURE__*/React.createElement(Button, {\n      disabled: isDisabled,\n      className: \"ticket-search-btn\",\n      onClick: () => this.onSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Search\") : /*#__PURE__*/React.createElement(Button, {\n      disabled: isDisabled,\n      className: \"ticket-search-btn\",\n      onClick: () => this.onFilter(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Filter\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"ticket-search-btn\",\n      disabled: isTicketHistoryInSearchMode,\n      onClick: () => this.onClearFilters(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Clear Filters\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"ticket-search-btn\",\n      onClick: () => this.onNewSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"New Search\"))));\n  }\n\n}, _temp)) || _class) || _class);\nexport default TicketSearch;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/Ticket/SearchBar/index.js"],"names":["React","Button","DatePicker","inject","observer","TicketSearch","Component","constructor","props","handleInputChange","e","stateName","setState","target","value","handleSelectChange","val","playerStore","setSelectedGameType","setSelectedWinStatus","setSelectedStatus","onSearch","startDate","endDate","state","handleSearchClick","onFilter","handleFilterClick","onClearFilters","ClearTicketHistoryFilters","onNewSearchCallback","clearTicketHistorySearchResults","setTicketHistorySearchMode","onNewSearch","componentDidMount","Date","setDate","getDate","render","allGameTypes","allWinStatuses","allStatuses","selectedGameType","selectedWinStatus","selectedStatus","isTicketHistoryInSearchMode","isDisabled","selected","map","identifier"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport './TicketSearch.css';\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass TicketSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: '',\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.setState({startDate: startDate, endDate: new Date()})\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({[stateName]: e.target.value});\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        if (stateName === 'game') {\r\n            this.props.playerStore.setSelectedGameType(val)\r\n        } else if (stateName === 'winStatus') {\r\n            this.props.playerStore.setSelectedWinStatus(val);\r\n        } else if (stateName === 'status') {\r\n            this.props.playerStore.setSelectedStatus(val);\r\n        }\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {startDate, endDate} = this.state;\r\n        this.props.handleSearchClick(startDate, endDate);\r\n    }\r\n\r\n    onFilter = () => {\r\n        this.props.handleFilterClick();\r\n    }\r\n\r\n    onClearFilters = () => {\r\n        this.props.playerStore.ClearTicketHistoryFilters();\r\n    }\r\n\r\n    onNewSearchCallback = () => {\r\n        this.props.playerStore.clearTicketHistorySearchResults()\r\n        this.props.playerStore.setTicketHistorySearchMode(true)\r\n    }\r\n\r\n    onNewSearch = () => {\r\n        this.setState({\r\n            startDate: '',\r\n            endDate: ''\r\n        }, () => this.onNewSearchCallback());\r\n    }\r\n\r\n    render() {\r\n\r\n        const {startDate, endDate} = this.state;\r\n        const {allGameTypes, allWinStatuses, allStatuses, selectedGameType, selectedWinStatus, selectedStatus, isTicketHistoryInSearchMode} = this.props.playerStore;\r\n\r\n        let isDisabled = true;\r\n\r\n        if ((startDate && endDate)) {\r\n            isDisabled = false\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Start Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isTicketHistoryInSearchMode}\r\n                                    selected={startDate}\r\n                                    maxDate={endDate || new Date()}\r\n                                    onChange={selected => this.setState({startDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>End Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isTicketHistoryInSearchMode}\r\n                                    selected={endDate}\r\n                                    minDate={startDate}\r\n                                    maxDate={new Date()}\r\n                                    onChange={selected => this.setState({endDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Game</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedGameType}\r\n                                onChange={(e) => this.handleSelectChange(e, 'game')}>\r\n                            {\r\n                                allGameTypes.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Win Status</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedWinStatus}\r\n                                onChange={(e) => this.handleSelectChange(e, 'winStatus')}>\r\n                            {\r\n                                allWinStatuses.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Approval Status</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedStatus}\r\n                                onChange={(e) => this.handleSelectChange(e, 'status')}>\r\n                            {\r\n                                allStatuses.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        {isTicketHistoryInSearchMode ?\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onSearch()}>\r\n                                Search\r\n                            </Button> :\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onFilter()}>\r\n                                Filter\r\n                            </Button>\r\n                        }\r\n                        <Button className='ticket-search-btn' disabled={isTicketHistoryInSearchMode} onClick={() => this.onClearFilters()}>\r\n                            Clear Filters\r\n                        </Button>\r\n                        <Button className='ticket-search-btn' onClick={() => this.onNewSearch()}>\r\n                            New Search\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TicketSearch;\r\n\r\n"]},"metadata":{},"sourceType":"module"}