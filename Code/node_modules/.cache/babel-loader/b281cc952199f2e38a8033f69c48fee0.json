{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\Player\\\\Tabs\\\\TicketHistory.js\";\n\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport './Tabs.css';\nimport TicketSearch from \"../../Ticket/SearchBar\";\nimport { UserAction, UserActionCategory } from \"../../UserActionCategory\";\nimport moment from \"moment\";\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\nlet TicketHistory = (_dec = inject('playerStore'), _dec(_class = observer(_class = (_temp = class TicketHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearchClick = (queryDateRangeStart = '', queryDateRangeEnd = '') => {\n      const startDate = new Date(queryDateRangeStart);\n      const momentStartDate = moment(startDate).format();\n      const endDate = new Date(queryDateRangeEnd);\n      endDate.setHours(23, 59, 59);\n      const momentEndDate = moment(endDate).format();\n      let queryParams = '?';\n\n      if (queryDateRangeStart && queryDateRangeStart !== '') {\n        queryParams += `queryDateRangeStart=${momentStartDate}`;\n      }\n\n      if (queryDateRangeEnd && queryDateRangeEnd !== '') {\n        if (queryParams.endsWith(\"?\")) queryParams += `queryDateRangeEnd=${momentEndDate}`;else queryParams += `&queryDateRangeEnd=${momentEndDate}`;\n      } // Log User Action\n\n\n      let criteria = `Start Date: ${momentStartDate} End Date: ${momentEndDate}`;\n      this.props.playerStore.logAction(UserActionCategory.API_CALL, UserAction.TICKET_HISTORY, '', criteria);\n      this.props.playerStore.searchTickets(queryParams);\n    };\n\n    this.onFilterClick = () => {\n      this.props.playerStore.filterTicketHistoryResult();\n    };\n\n    this.handleToastClose = () => {\n      this.props.playerStore.setTicketHistoryToast(false);\n    };\n\n    this.state = {\n      ticketHistoryList: [],\n      tableHeader: []\n    };\n  }\n\n  componentDidMount() {\n    let startDate = new Date();\n    startDate.setDate(startDate.getDate() - 31);\n    this.onSearchClick(startDate, new Date());\n  }\n\n  render() {\n    const {\n      ticketHistoryTableHeader,\n      ticketHistoryTableRows,\n      showTicketHistoryToast,\n      successMessage,\n      errorMessage\n    } = this.props.playerStore;\n    let Timestamp;\n    let rows = ticketHistoryTableRows && ticketHistoryTableRows.map((d, index) => {\n      d.idField = index + 1;\n      Timestamp = `${d.requestTimestamp}`;\n      d.date = Timestamp.substring(0, 10);\n      d.time = Timestamp.substring(11, 19);\n      d.amount = isNaN(`${d.prizeAmount}`) ? `${d.prizeAmount}` : (Number(`${d.prizeAmount}`) / 100).toFixed(2);\n      return d;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-container container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-panel player-search-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TicketSearch, Object.assign({\n      tableHeader: ticketHistoryTableHeader,\n      userList: rows,\n      handleSearchClick: this.onSearchClick,\n      handleFilterClick: this.onFilterClick\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }))), ticketHistoryTableHeader && rows ? /*#__PURE__*/React.createElement(ReactTable, {\n      tableHeader: ticketHistoryTableHeader,\n      rowData: rows,\n      className: \"update-user-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 27\n      }\n    }) : null);\n  }\n\n}, _temp)) || _class) || _class);\nexport default TicketHistory;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/Player/Tabs/TicketHistory.js"],"names":["React","inject","observer","TicketSearch","UserAction","UserActionCategory","moment","ReactTable","TicketHistory","Component","constructor","props","onSearchClick","queryDateRangeStart","queryDateRangeEnd","startDate","Date","momentStartDate","format","endDate","setHours","momentEndDate","queryParams","endsWith","criteria","playerStore","logAction","API_CALL","TICKET_HISTORY","searchTickets","onFilterClick","filterTicketHistoryResult","handleToastClose","setTicketHistoryToast","state","ticketHistoryList","tableHeader","componentDidMount","setDate","getDate","render","ticketHistoryTableHeader","ticketHistoryTableRows","showTicketHistoryToast","successMessage","errorMessage","Timestamp","rows","map","d","index","idField","requestTimestamp","date","substring","time","amount","isNaN","prizeAmount","Number","toFixed"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport TicketSearch from \"../../Ticket/SearchBar\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport moment from \"moment\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass TicketHistory extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticketHistoryList: [],\r\n            tableHeader: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.onSearchClick(startDate, new Date());\r\n    }\r\n\r\n    onSearchClick = (queryDateRangeStart = '', queryDateRangeEnd = '') => {\r\n\r\n        const startDate = new Date(queryDateRangeStart);\r\n        const momentStartDate = moment(startDate).format();\r\n        const endDate = new Date(queryDateRangeEnd);\r\n        endDate.setHours(23, 59, 59);\r\n        const momentEndDate = moment(endDate).format();\r\n\r\n        let queryParams = '?';\r\n        if (queryDateRangeStart && queryDateRangeStart !== '') {\r\n            queryParams += `queryDateRangeStart=${momentStartDate}`\r\n        }\r\n        if (queryDateRangeEnd && queryDateRangeEnd !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `queryDateRangeEnd=${momentEndDate}`\r\n            else\r\n                queryParams += `&queryDateRangeEnd=${momentEndDate}`\r\n        }\r\n\r\n        // Log User Action\r\n\r\n        let criteria = `Start Date: ${momentStartDate} End Date: ${momentEndDate}`\r\n        this.props.playerStore.logAction(UserActionCategory.API_CALL, UserAction.TICKET_HISTORY, '', criteria)\r\n\r\n        this.props.playerStore.searchTickets(queryParams);\r\n    }\r\n\r\n    onFilterClick = () => {\r\n        this.props.playerStore.filterTicketHistoryResult();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.playerStore.setTicketHistoryToast(false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {ticketHistoryTableHeader, ticketHistoryTableRows, showTicketHistoryToast, successMessage, errorMessage} = this.props.playerStore;\r\n        let Timestamp;\r\n        let rows = ticketHistoryTableRows && ticketHistoryTableRows.map((d, index) => {\r\n            d.idField = index + 1;\r\n            Timestamp = `${d.requestTimestamp}`\r\n            d.date = Timestamp.substring(0, 10)\r\n            d.time = Timestamp.substring(11, 19)\r\n            d.amount = isNaN(`${d.prizeAmount}`) ? `${d.prizeAmount}` : (Number(`${d.prizeAmount}`) / 100).toFixed(2)\r\n            return d;\r\n        });\r\n\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                <div className='player-search-panel player-search-child'>\r\n                    <TicketSearch tableHeader={ticketHistoryTableHeader} userList={rows}\r\n                                  handleSearchClick={this.onSearchClick}\r\n                                  handleFilterClick={this.onFilterClick} {...this.props}/>\r\n                </div>\r\n                {\r\n                    ticketHistoryTableHeader && rows\r\n                        ? <ReactTable tableHeader={ticketHistoryTableHeader} rowData={rows}\r\n                                          className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {/*{showTicketHistoryToast\r\n                    ?\r\n                    <AppToast showToast={showTicketHistoryToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }*/}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default TicketHistory;\r\n"]},"metadata":{},"sourceType":"module"}