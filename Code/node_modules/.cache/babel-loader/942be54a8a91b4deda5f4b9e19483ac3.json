{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\systemdashboard\\\\SystemDashboard.js\";\nimport React from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport CustomCard from '../dashboard/customCard';\nimport Widget from '../components/widget/widget';\nimport config from \"../config\";\nimport { Line } from 'react-chartjs-2';\nimport moment from \"moment\";\nimport { categories } from \"../Constants/SystemDashCategories\";\nimport './SystemDashboard.css';\n\nclass SystemDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.optionsHour = {\n      scales: {\n        xAxes: [{\n          type: 'time',\n          time: {\n            unit: 'hour'\n          },\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 14\n          },\n          gridLines: {\n            color: 'rgb(255, 255, 255, 0.2)'\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 14\n          },\n          gridLines: {\n            color: 'rgb(255, 255, 255, 0.2)'\n          }\n        }]\n      },\n      legend: {\n        labels: {\n          fontColor: \"white\",\n          fontSize: 12\n        }\n      }\n    };\n    this.optionsDay = {\n      scales: {\n        xAxes: [{\n          type: 'time',\n          time: {\n            unit: 'day'\n          },\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 14\n          },\n          gridLines: {\n            color: 'rgb(255, 255, 255, 0.2)'\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 14\n          },\n          gridLines: {\n            zeroLineColor: 'rgb(255, 255, 255, 0.2',\n            color: 'rgb(255, 255, 255, 0.2)'\n          }\n        }]\n      },\n      legend: {\n        labels: {\n          fontColor: \"white\",\n          fontSize: 12\n        },\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 14\n        }\n      }\n    };\n    this.optionsWeek = {\n      scales: {\n        xAxes: [{\n          type: 'time',\n          time: {\n            unit: 'week'\n          },\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 14\n          },\n          gridLines: {\n            color: 'rgb(255, 255, 255, 0.2)'\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 14\n          },\n          gridLines: {\n            zeroLineColor: 'rgb(255, 255, 255, 0.2',\n            color: 'rgb(255, 255, 255, 0.2)'\n          }\n        }]\n      },\n      legend: {\n        labels: {\n          fontColor: \"white\",\n          fontSize: 12\n        }\n      }\n    };\n    this.optionUptime = {\n      legend: {\n        labels: {\n          fontColor: \"white\",\n          fontSize: 12\n        }\n      }\n    };\n    this.uptimeData = {\n      labels: ['Up Time', 'Down Time'],\n      datasets: [{\n        data: [95, 5],\n        backgroundColor: ['#36A2EB', '#FFCE56'],\n        hoverBackgroundColor: ['#36A2EB', '#FFCE56']\n      }]\n    };\n    this.playerData = {\n      datasets: [{\n        label: 'EVENTS',\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: []\n      }]\n    };\n    this.infrastructureData = {\n      datasets: [{\n        label: 'EVENTS',\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: []\n      }]\n    };\n    this.playerLabel = 'player';\n    this.infrastructureLabel = 'infrastructure';\n\n    this.fetchSystemDetails = length => {\n      var address = `${config.LOG_SERVER_BASE_URL}/v1/log/events`; //debugger;\n\n      if (length == 'hours') {\n        /*var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n          today = '.' + yyyy + '.' + mm + '.' + dd;\r\n        address = `${config.LOG_SERVER_BASE_URL}/v1/log/dayevents?date=${today}`;*/\n        address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=24`;\n      }\n\n      if (length == 'days') {\n        address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=168`;\n      }\n\n      if (!length || length == 'weeks') {\n        address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=720`;\n      }\n\n      fetch(address, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(res => {\n        if (res && res.error) {\n          this.setState({\n            errorMessage: res.error\n          });\n        } else {\n          this.setSystemDetails(res);\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: error.toString()\n        });\n      });\n    };\n\n    this.setSystemDetails = res => {\n      let environemnt = 0;\n      let apiErrors = 0;\n      let errors = 0;\n      let winner = 0;\n      let nonrtc = 0;\n      let regAccepted = 0;\n      let regRejected = 0;\n      let nonWinner = 0;\n      let ticketScanVelocity = 0;\n      res.hits.hits.forEach(hit => {\n        //console.log(hit);\n        //debugger;\n        if (hit._source.category === categories.ERROR) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel);\n          errors++;\n        }\n\n        if (hit._source.category === categories.API_ERROR) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel);\n          apiErrors++;\n        }\n\n        if (hit._source.category === categories.WINNER) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel);\n          winner++;\n        }\n\n        if (hit._source.category === categories.NON_WINNER) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel);\n          nonWinner++;\n        }\n\n        if (hit._source.category === categories.NON_RTC) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel);\n          nonrtc++;\n        }\n\n        if (hit._source.category === categories.ENVIRONMENT) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel);\n          environemnt++;\n        }\n\n        if (hit._source.category === categories.KYC_ACCEPTED) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel);\n          regAccepted++;\n        }\n\n        if (hit._source.category === categories.KYC_REJECTED) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel);\n          regRejected++;\n        }\n\n        if (hit._source.category === categories.TICKET_SCAN_VELOCITY) {\n          this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel);\n          ticketScanVelocity++;\n        }\n      });\n      this.setState({\n        environemnt: environemnt,\n        apiErrors: apiErrors,\n        errors: errors,\n        winner: winner,\n        nonWinner: nonWinner,\n        nonrtc: nonrtc,\n        regAccepted: regAccepted,\n        regRejected: regRejected,\n        playerData: this.playerData,\n        infrastructureData: this.infrastructureData,\n        ticketScanVelocity: ticketScanVelocity\n      });\n    };\n\n    this.navigateTo = (path, query) => {\n      if (query != '') {\n        this.props.history.push({\n          pathname: path,\n          state: {\n            detail: query\n          }\n        });\n      } else {\n        this.props.history.push(path);\n      }\n    };\n\n    this.setHours = () => {\n      //debugger;\n      var start = moment().subtract(1, 'day');\n      var end = moment();\n      var startDate = start.utc().format();\n      var endDate = end.utc().format();\n      this.setState({\n        'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`\n      });\n      this.getTimeLabels(24, 1);\n      this.fetchSystemDetails('hours');\n      this.setState({\n        'playerData': this.playerData\n      });\n      this.setState({\n        'playerOptions': this.optionsHour\n      });\n      this.setState({\n        'infrastructureData': this.infrastructureData\n      });\n      this.setState({\n        'infrastructureOptions': this.optionsHour\n      });\n    };\n\n    this.setDays = () => {\n      var start = moment().subtract(7, 'days');\n      var end = moment();\n      var startDate = start.utc().format();\n      var endDate = end.utc().format();\n      this.setState({\n        'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`\n      });\n      this.getTimeLabels(15, 12);\n      this.fetchSystemDetails('days');\n      this.setState({\n        'playerData': this.playerData\n      });\n      this.setState({\n        'playerOptions': this.optionsDay\n      });\n      this.setState({\n        'infrastructureData': this.infrastructureData\n      });\n      this.setState({\n        'infrastructureOptions': this.optionsDay\n      });\n    };\n\n    this.setWeeks = () => {\n      var start = moment().subtract(30, 'days');\n      var end = moment();\n      var startDate = start.utc().format();\n      var endDate = end.utc().format();\n      this.setState({\n        'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`\n      });\n      this.getTimeLabels(11, 72);\n      this.fetchSystemDetails('weeks');\n      this.setState({\n        'playerData': this.playerData\n      });\n      this.setState({\n        'playerOptions': this.optionsWeek\n      });\n      this.setState({\n        'infrastructureData': this.infrastructureData\n      });\n      this.setState({\n        'infrastructureOptions': this.optionsWeek\n      });\n    };\n\n    this.state = {\n      environemnt: 0,\n      apiErrors: 0,\n      errors: 0,\n      accepted: 0,\n      nonrtc: 0,\n      regAccepted: 0,\n      regRejected: 0,\n      playerData: this.playerData,\n      infrastructureData: this.infrastructureData,\n      queryStr: '',\n      winner: 0,\n      nonWinner: 0,\n      ticketScanVelocity: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setHours();\n  }\n\n  incDataSetValues(datetime, graph) {\n    var date = new Date(datetime);\n\n    if (graph == 'player') {\n      for (var i = 0; i < this.playerData.datasets[0].data.length; i++) {\n        //var storedDate = this.playerData.datasets[0].data[i].y;\n        if (date.getTime() > this.playerData.datasets[0].data[i].x.getTime()) {\n          if (i == this.playerData.datasets[0].data.length - 1) {\n            this.playerData.datasets[0].data[i].y++;\n          } else {\n            if (date.getTime() < this.playerData.datasets[0].data[i + 1].x.getTime()) {\n              this.playerData.datasets[0].data[i].y++;\n            }\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < this.infrastructureData.datasets[0].data.length; i++) {\n        if (date.getTime() > this.infrastructureData.datasets[0].data[i].x.getTime()) {\n          if (i == this.infrastructureData.datasets[0].data.length - 1) {\n            this.infrastructureData.datasets[0].data[i].y++;\n          } else {\n            if (date.getTime() < this.infrastructureData.datasets[0].data[i + 1].x.getTime()) {\n              this.infrastructureData.datasets[0].data[i].y++;\n            }\n          }\n        }\n      }\n    }\n  } //Assigned length datetimes inc hours apart to the datasets for the graphs\n\n\n  getTimeLabels(length, inc) {\n    this.playerData.datasets[0].data = [];\n    this.infrastructureData.datasets[0].data = [];\n    var ts = new Date().getTime();\n\n    for (var i = 0; i < length; i++) {\n      var date = new Date(ts);\n      var dateDataPlayer = {\n        x: date,\n        y: 0\n      };\n      var dateDataInfrastructure = {\n        x: date,\n        y: 0\n      };\n      this.playerData.datasets[0].data.unshift(dateDataPlayer);\n      this.infrastructureData.datasets[0].data.unshift(dateDataInfrastructure);\n      ts = ts - inc * 60 * 60 * 1000;\n    } //console.log(this.playerData);\n    //console.log(this.infrastructureData);\n\n  }\n\n  render() {\n    const {\n      environemnt,\n      apiErrors,\n      errors,\n      winner,\n      nonrtc,\n      regAccepted,\n      regRejected,\n      playerData,\n      playerOptions,\n      infrastructureData,\n      infrastructureOptions,\n      upTime,\n      queryStr,\n      nonWinner,\n      ticketScanVelocity\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-dashboard-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-dashboard-widget-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c1r1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: winner,\n      title: \"WINNER: RTC\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat('winner')),\n      iconPath: \"/icons/communications-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c2r1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: nonrtc,\n      title: \"WINNER: NON-RTC\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat(categories.NON_RTC)),\n      iconPath: \"/icons/crashes-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c3r1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: nonWinner,\n      title: \"NON-WINNER\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat('non-winner')),\n      iconPath: \"/icons/crashes-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c4r1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: regAccepted,\n      title: \"KYC-ACCEPTED\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat('kyc-accepted')),\n      iconPath: \"/icons/communications-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c1r2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: regRejected,\n      title: \"KYC-REJECTED\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat('kyc-rejected')),\n      iconPath: \"/icons/crashes-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c2r2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: ticketScanVelocity,\n      title: \"TICKET-SCAN-VELOCITY\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat(categories.TICKET_SCAN_VELOCITY)),\n      iconPath: \"/icons/crashes-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"container-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 21\n      }\n    }, \"Player\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-dashboard-widget-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c1r1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: environemnt,\n      title: \"ENVIRONMENT\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat('environment')),\n      iconPath: \"/icons/running-services-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c2r1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: apiErrors,\n      title: \"API ERRORS\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat('api-error')),\n      iconPath: \"/icons/service-errors-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c3r1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      value: errors,\n      title: \"ERRORS\",\n      handleCallback: () => this.navigateTo('/system/stats', queryStr.concat('error')),\n      iconPath: \"/icons/IGT-errors-icon.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"container-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 21\n      }\n    }, \"Infrastructure\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-dashboard-graph-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"graphs-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-dashboard-graph-mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"graph-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 29\n      }\n    }, \"Player Alerts\"), /*#__PURE__*/React.createElement(Line, {\n      data: playerData,\n      options: playerOptions,\n      redraw: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"system-dashboard-graph-infrastructure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"graph-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 29\n      }\n    }, \"Infrastructure Alerts\"), /*#__PURE__*/React.createElement(Line, {\n      data: infrastructureData,\n      options: infrastructureOptions,\n      redraw: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomCard, {\n      title: \"Today\",\n      handleCallback: () => this.setHours(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CustomCard, {\n      title: \"Last 7 Days\",\n      handleCallback: () => this.setDays(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CustomCard, {\n      title: \"Last 30 Days\",\n      handleCallback: () => this.setWeeks(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n/*\r\n<div className='c3r1'>   \r\n                        <Widget\r\n                            value={appErrors}\r\n                            title='APP ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'appErrors')}                        \r\n                            iconPath='/icons/app-errors-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c4r1'>    \r\n                        <Widget\r\n                            value={loginErrors}\r\n                            title='LOGIN ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'loginErrors')}                        \r\n                            iconPath='/icons/login-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={verification}\r\n                            title='VERIFICATION SERVICE'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'verification')}                        \r\n                            iconPath='/icons/verification-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c5'>\r\n                        <Widget\r\n                                value={loggedin}\r\n                                title='LOGGED IN PLAYERS'\r\n                                handleCallback={() => this.navigateTo('/system/stats', 'loggedin')}                        \r\n                                iconPath='/icons/player_icon.svg'\r\n                                />\r\n                    </div>\r\n\r\n<div className='c4r1'>    \r\n                        <Widget\r\n                            value={cognitoErrors}\r\n                            title='COGNITO ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'cognitoErrors')}                        \r\n                            iconPath='/icons/cognito-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={containers}\r\n                            title='CONTAINERS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'containers')}                        \r\n                            iconPath='/icons/containers-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c2r2'>\r\n                        <Widget\r\n                            value={containerErrors}\r\n                            title='CONTAINER ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'containerErrors')}                        \r\n                            iconPath='/icons/container-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c5'>\r\n                        <div className='uptime-container'>\r\n                            <Doughnut data={this.uptimeData}\r\n                                        options={this.optionUptime}/>\r\n                        </div>\r\n                    </div>\r\n*/\n\n\nexport default SystemDashboard;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/systemdashboard/SystemDashboard.js"],"names":["React","CustomCard","Widget","config","Line","moment","categories","SystemDashboard","Component","constructor","props","optionsHour","scales","xAxes","type","time","unit","ticks","fontColor","fontSize","gridLines","color","yAxes","legend","labels","optionsDay","zeroLineColor","optionsWeek","optionUptime","uptimeData","datasets","data","backgroundColor","hoverBackgroundColor","playerData","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","infrastructureData","playerLabel","infrastructureLabel","fetchSystemDetails","length","address","LOG_SERVER_BASE_URL","fetch","method","headers","localStorage","getItem","then","response","json","res","error","setState","errorMessage","setSystemDetails","catch","toString","environemnt","apiErrors","errors","winner","nonrtc","regAccepted","regRejected","nonWinner","ticketScanVelocity","hits","forEach","hit","_source","category","ERROR","incDataSetValues","eventDateTimeUTC","API_ERROR","WINNER","NON_WINNER","NON_RTC","ENVIRONMENT","KYC_ACCEPTED","KYC_REJECTED","TICKET_SCAN_VELOCITY","navigateTo","path","query","history","push","pathname","state","detail","setHours","start","subtract","end","startDate","utc","format","endDate","getTimeLabels","setDays","setWeeks","accepted","queryStr","componentDidMount","datetime","graph","date","Date","i","getTime","x","y","inc","ts","dateDataPlayer","dateDataInfrastructure","unshift","render","playerOptions","infrastructureOptions","upTime","concat"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport CustomCard from '../dashboard/customCard';\r\nimport Widget from '../components/widget/widget';\r\nimport config from \"../config\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport moment from \"moment\";\r\nimport {categories} from \"../Constants/SystemDashCategories\";\r\n\r\nimport './SystemDashboard.css';\r\n\r\nclass SystemDashboard extends React.Component {\r\n\r\n    optionsHour = {\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'hour'\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            }\r\n        }\r\n    }\r\n\r\n    optionsDay = {\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'day'\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    zeroLineColor: 'rgb(255, 255, 255, 0.2',\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            },\r\n            ticks: {\r\n                fontColor: \"white\",\r\n                fontSize: 14,\r\n            }\r\n        }\r\n    }\r\n\r\n    optionsWeek = {\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'week'\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                    fontSize: 14,\r\n                },\r\n                gridLines: {\r\n                    zeroLineColor: 'rgb(255, 255, 255, 0.2',\r\n                    color: 'rgb(255, 255, 255, 0.2)'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            }\r\n        }\r\n    }\r\n\r\n    optionUptime = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: \"white\",\r\n                fontSize: 12\r\n            }\r\n        }\r\n    }\r\n\r\n    uptimeData = {\r\n        labels: [\r\n            'Up Time',\r\n            'Down Time'\r\n        ],\r\n        datasets: [{\r\n            data: [95, 5],\r\n            backgroundColor: [\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ],\r\n            hoverBackgroundColor: [\r\n                '#36A2EB',\r\n                '#FFCE56'\r\n            ]\r\n        }]\r\n    };\r\n\r\n    playerData = {\r\n        datasets: [\r\n            {\r\n                label: 'EVENTS',\r\n                fill: false,\r\n                lineTension: 0,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    infrastructureData = {\r\n        datasets: [\r\n            {\r\n                label: 'EVENTS',\r\n                fill: false,\r\n                lineTension: 0,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    playerLabel = 'player';\r\n    infrastructureLabel = 'infrastructure';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            environemnt: 0,\r\n            apiErrors: 0,\r\n            errors: 0,\r\n            accepted: 0,\r\n            nonrtc: 0,\r\n            regAccepted: 0,\r\n            regRejected: 0,\r\n            playerData: this.playerData,\r\n            infrastructureData: this.infrastructureData,\r\n            queryStr: '',\r\n            winner: 0,\r\n            nonWinner: 0,\r\n            ticketScanVelocity: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setHours();\r\n    }\r\n\r\n    fetchSystemDetails = (length) => {\r\n        var address = `${config.LOG_SERVER_BASE_URL}/v1/log/events`;\r\n        //debugger;\r\n        if (length == 'hours') {\r\n            /*var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n            var yyyy = today.getFullYear();\r\n\r\n            today = '.' + yyyy + '.' + mm + '.' + dd;\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/dayevents?date=${today}`;*/\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=24`;\r\n        }\r\n        if (length == 'days') {\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=168`;\r\n        }\r\n        if (!length || length == 'weeks') {\r\n            address = `${config.LOG_SERVER_BASE_URL}/v1/log/hoursevents?hours=720`;\r\n        }\r\n\r\n        fetch(address, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error});\r\n                } else {\r\n                    this.setSystemDetails(res);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({errorMessage: error.toString()});\r\n            });\r\n    }\r\n\r\n    setSystemDetails = (res) => {\r\n        let environemnt = 0;\r\n        let apiErrors = 0;\r\n        let errors = 0;\r\n        let winner = 0;\r\n        let nonrtc = 0;\r\n        let regAccepted = 0;\r\n        let regRejected = 0;\r\n        let nonWinner = 0;\r\n        let ticketScanVelocity = 0;\r\n\r\n        res.hits.hits.forEach((hit) => {\r\n            //console.log(hit);\r\n            //debugger;\r\n            if (hit._source.category === categories.ERROR) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel)\r\n                errors++;\r\n            }\r\n            if (hit._source.category === categories.API_ERROR) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel)\r\n                apiErrors++;\r\n            }\r\n            if (hit._source.category === categories.WINNER) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                winner++;\r\n            }\r\n            if (hit._source.category === categories.NON_WINNER) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                nonWinner++;\r\n            }\r\n            if (hit._source.category === categories.NON_RTC) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                nonrtc++;\r\n            }\r\n            if (hit._source.category === categories.ENVIRONMENT) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.infrastructureLabel)\r\n                environemnt++;\r\n            }\r\n            if (hit._source.category === categories.KYC_ACCEPTED) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                regAccepted++;\r\n            }\r\n            if (hit._source.category === categories.KYC_REJECTED) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                regRejected++;\r\n            }\r\n            if (hit._source.category === categories.TICKET_SCAN_VELOCITY) {\r\n                this.incDataSetValues(hit._source.eventDateTimeUTC, this.playerLabel)\r\n                ticketScanVelocity++;\r\n            }\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                environemnt: environemnt,\r\n                apiErrors: apiErrors,\r\n                errors: errors,\r\n                winner: winner,\r\n                nonWinner: nonWinner,\r\n                nonrtc: nonrtc,\r\n                regAccepted: regAccepted,\r\n                regRejected: regRejected,\r\n                playerData: this.playerData,\r\n                infrastructureData: this.infrastructureData,\r\n                ticketScanVelocity: ticketScanVelocity\r\n            }\r\n        )\r\n    }\r\n\r\n    navigateTo = (path, query) => {\r\n        if (query != '') {\r\n            this.props.history.push({pathname: path, state: {detail: query}});\r\n        } else {\r\n            this.props.history.push(path);\r\n        }\r\n    }\r\n\r\n    incDataSetValues(datetime, graph) {\r\n        var date = new Date(datetime);\r\n        if (graph == 'player') {\r\n            for (var i = 0; i < this.playerData.datasets[0].data.length; i++) {\r\n                //var storedDate = this.playerData.datasets[0].data[i].y;\r\n                if (date.getTime() > this.playerData.datasets[0].data[i].x.getTime()) {\r\n                    if (i == this.playerData.datasets[0].data.length - 1) {\r\n                        this.playerData.datasets[0].data[i].y++;\r\n                    } else {\r\n                        if (date.getTime() < this.playerData.datasets[0].data[i + 1].x.getTime()) {\r\n                            this.playerData.datasets[0].data[i].y++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (var i = 0; i < this.infrastructureData.datasets[0].data.length; i++) {\r\n                if (date.getTime() > this.infrastructureData.datasets[0].data[i].x.getTime()) {\r\n                    if (i == this.infrastructureData.datasets[0].data.length - 1) {\r\n                        this.infrastructureData.datasets[0].data[i].y++;\r\n                    } else {\r\n                        if (date.getTime() < this.infrastructureData.datasets[0].data[i + 1].x.getTime()) {\r\n                            this.infrastructureData.datasets[0].data[i].y++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Assigned length datetimes inc hours apart to the datasets for the graphs\r\n    getTimeLabels(length, inc) {\r\n        this.playerData.datasets[0].data = [];\r\n        this.infrastructureData.datasets[0].data = [];\r\n\r\n        var ts = new Date().getTime();\r\n\r\n        for (var i = 0; i < length; i++) {\r\n\r\n            var date = new Date(ts);\r\n\r\n            var dateDataPlayer = {\r\n                x: date,\r\n                y: 0\r\n            }\r\n\r\n            var dateDataInfrastructure = {\r\n                x: date,\r\n                y: 0\r\n            }\r\n\r\n            this.playerData.datasets[0].data.unshift(dateDataPlayer);\r\n            this.infrastructureData.datasets[0].data.unshift(dateDataInfrastructure);\r\n\r\n            ts = ts - (inc * 60 * 60 * 1000);\r\n        }\r\n        //console.log(this.playerData);\r\n        //console.log(this.infrastructureData);\r\n    }\r\n\r\n    setHours = () => {\r\n        //debugger;\r\n        var start = moment().subtract(1, 'day');\r\n        var end = moment();\r\n        var startDate = start.utc().format();\r\n        var endDate = end.utc().format();\r\n\r\n        this.setState({'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`});\r\n\r\n        this.getTimeLabels(24, 1);\r\n        this.fetchSystemDetails('hours');\r\n\r\n        this.setState({'playerData': this.playerData});\r\n        this.setState({'playerOptions': this.optionsHour});\r\n\r\n        this.setState({'infrastructureData': this.infrastructureData});\r\n        this.setState({'infrastructureOptions': this.optionsHour});\r\n    }\r\n\r\n    setDays = () => {\r\n        var start = moment().subtract(7, 'days');\r\n        var end = moment();\r\n        var startDate = start.utc().format();\r\n        var endDate = end.utc().format();\r\n\r\n        this.setState({'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`});\r\n        this.getTimeLabels(15, 12);\r\n        this.fetchSystemDetails('days');\r\n\r\n        this.setState({'playerData': this.playerData});\r\n        this.setState({'playerOptions': this.optionsDay});\r\n\r\n        this.setState({'infrastructureData': this.infrastructureData});\r\n        this.setState({'infrastructureOptions': this.optionsDay});\r\n    }\r\n\r\n    setWeeks = () => {\r\n        var start = moment().subtract(30, 'days');\r\n        var end = moment();\r\n        var startDate = start.utc().format();\r\n        var endDate = end.utc().format();\r\n\r\n        this.setState({'queryStr': `?startDate=${startDate}&endDate=${endDate}&category=`});\r\n        this.getTimeLabels(11, 72);\r\n        this.fetchSystemDetails('weeks');\r\n\r\n        this.setState({'playerData': this.playerData});\r\n        this.setState({'playerOptions': this.optionsWeek});\r\n\r\n        this.setState({'infrastructureData': this.infrastructureData});\r\n        this.setState({'infrastructureOptions': this.optionsWeek});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            environemnt, apiErrors, errors, winner, nonrtc, regAccepted, regRejected, playerData, playerOptions, infrastructureData,\r\n            infrastructureOptions, upTime, queryStr, nonWinner, ticketScanVelocity\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='system-dashboard-container'>\r\n                <div className='system-dashboard-widget-container'>\r\n                    <div className='c1r1'>\r\n                        <Widget\r\n                            value={winner}\r\n                            title='WINNER: RTC'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('winner'))}\r\n                            iconPath='/icons/communications-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c2r1'>\r\n                        <Widget\r\n                            value={nonrtc}\r\n                            title='WINNER: NON-RTC'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat(categories.NON_RTC))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c3r1'>\r\n                        <Widget\r\n                            value={nonWinner}\r\n                            title='NON-WINNER'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('non-winner'))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c4r1'>\r\n                        <Widget\r\n                            value={regAccepted}\r\n                            title='KYC-ACCEPTED'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('kyc-accepted'))}\r\n                            iconPath='/icons/communications-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={regRejected}\r\n                            title='KYC-REJECTED'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('kyc-rejected'))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c2r2'>\r\n                        <Widget\r\n                            value={ticketScanVelocity}\r\n                            title='TICKET-SCAN-VELOCITY'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat(categories.TICKET_SCAN_VELOCITY))}\r\n                            iconPath='/icons/crashes-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <h5 className='container-title'>Player</h5>\r\n                </div>\r\n                <div className='system-dashboard-widget-container'>\r\n                    <div className='c1r1'>\r\n                        <Widget\r\n                            value={environemnt}\r\n                            title='ENVIRONMENT'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('environment'))}\r\n                            iconPath='/icons/running-services-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c2r1'>\r\n                        <Widget\r\n                            value={apiErrors}\r\n                            title='API ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('api-error'))}\r\n                            iconPath='/icons/service-errors-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <div className='c3r1'>\r\n                        <Widget\r\n                            value={errors}\r\n                            title='ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', queryStr.concat('error'))}\r\n                            iconPath='/icons/IGT-errors-icon.svg'\r\n                        />\r\n                    </div>\r\n                    <h5 className='container-title'>Infrastructure</h5>\r\n                </div>\r\n                <div className='system-dashboard-graph-container'>\r\n                    <div className='graphs-window'>\r\n                        <div className='system-dashboard-graph-mobile'>\r\n                            <h6 className='graph-title'>Player Alerts</h6>\r\n                            <Line data={playerData}\r\n                                  options={playerOptions} redraw/>\r\n                        </div>\r\n                        <div className='system-dashboard-graph-infrastructure'>\r\n                            <h6 className='graph-title'>Infrastructure Alerts</h6>\r\n                            <Line data={infrastructureData}\r\n                                  options={infrastructureOptions} redraw/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='cards-window'>\r\n                        <CustomCard\r\n                            title='Today'\r\n                            handleCallback={() => this.setHours()}\r\n                        />\r\n                        <CustomCard\r\n                            title='Last 7 Days'\r\n                            handleCallback={() => this.setDays()}\r\n                        />\r\n                        <CustomCard\r\n                            title='Last 30 Days'\r\n                            handleCallback={() => this.setWeeks()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n<div className='c3r1'>   \r\n                        <Widget\r\n                            value={appErrors}\r\n                            title='APP ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'appErrors')}                        \r\n                            iconPath='/icons/app-errors-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c4r1'>    \r\n                        <Widget\r\n                            value={loginErrors}\r\n                            title='LOGIN ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'loginErrors')}                        \r\n                            iconPath='/icons/login-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={verification}\r\n                            title='VERIFICATION SERVICE'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'verification')}                        \r\n                            iconPath='/icons/verification-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c5'>\r\n                        <Widget\r\n                                value={loggedin}\r\n                                title='LOGGED IN PLAYERS'\r\n                                handleCallback={() => this.navigateTo('/system/stats', 'loggedin')}                        \r\n                                iconPath='/icons/player_icon.svg'\r\n                                />\r\n                    </div>\r\n\r\n<div className='c4r1'>    \r\n                        <Widget\r\n                            value={cognitoErrors}\r\n                            title='COGNITO ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'cognitoErrors')}                        \r\n                            iconPath='/icons/cognito-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c1r2'>\r\n                        <Widget\r\n                            value={containers}\r\n                            title='CONTAINERS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'containers')}                        \r\n                            iconPath='/icons/containers-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c2r2'>\r\n                        <Widget\r\n                            value={containerErrors}\r\n                            title='CONTAINER ERRORS'\r\n                            handleCallback={() => this.navigateTo('/system/stats', 'containerErrors')}                        \r\n                            iconPath='/icons/container-error-icon.svg'\r\n                            />  \r\n                    </div>\r\n                    <div className='c5'>\r\n                        <div className='uptime-container'>\r\n                            <Doughnut data={this.uptimeData}\r\n                                        options={this.optionUptime}/>\r\n                        </div>\r\n                    </div>\r\n*/\r\n\r\nexport default SystemDashboard;"]},"metadata":{},"sourceType":"module"}