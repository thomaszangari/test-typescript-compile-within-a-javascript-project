{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";var _dec,_class,_temp;import React from\"react\";import{Button}from\"react-bootstrap\";import DatePicker from\"react-datepicker\";import'./TicketSearch.css';import{inject,observer}from\"mobx-react\";var TicketSearch=(_dec=inject('playerStore'),_dec(_class=observer(_class=(_temp=/*#__PURE__*/function(_React$Component){_inherits(TicketSearch,_React$Component);var _super=_createSuper(TicketSearch);function TicketSearch(props){var _this;_classCallCheck(this,TicketSearch);_this=_super.call(this,props);_this.handleInputChange=function(e,stateName){_this.setState(_defineProperty({},stateName,e.target.value));};_this.handleSelectChange=function(e,stateName){var val=e.target.value;if(stateName==='game'){_this.props.playerStore.setSelectedGameType(val);}else if(stateName==='winStatus'){_this.props.playerStore.setSelectedWinStatus(val);}else if(stateName==='status'){_this.props.playerStore.setSelectedStatus(val);}};_this.onSearch=function(){var _this$state=_this.state,startDate=_this$state.startDate,endDate=_this$state.endDate;_this.props.handleSearchClick(startDate,endDate);};_this.onFilter=function(){_this.props.handleFilterClick();};_this.onClearFilters=function(){_this.props.playerStore.ClearTicketHistoryFilters();};_this.onNewSearchCallback=function(){_this.props.playerStore.clearTicketHistorySearchResults();_this.props.playerStore.setTicketHistorySearchMode(true);};_this.onNewSearch=function(){_this.setState({startDate:'',endDate:''},function(){return _this.onNewSearchCallback();});};_this.state={startDate:'',endDate:''};return _this;}_createClass(TicketSearch,[{key:\"componentDidMount\",value:function componentDidMount(){var startDate=new Date();startDate.setDate(startDate.getDate()-31);this.setState({startDate:startDate,endDate:new Date()});}},{key:\"render\",value:function render(){var _this2=this;var _this$state2=this.state,startDate=_this$state2.startDate,endDate=_this$state2.endDate;var _this$props$playerSto=this.props.playerStore,allGameTypes=_this$props$playerSto.allGameTypes,allWinStatuses=_this$props$playerSto.allWinStatuses,allStatuses=_this$props$playerSto.allStatuses,selectedGameType=_this$props$playerSto.selectedGameType,selectedWinStatus=_this$props$playerSto.selectedWinStatus,selectedStatus=_this$props$playerSto.selectedStatus,isTicketHistoryInSearchMode=_this$props$playerSto.isTicketHistoryInSearchMode;var isDisabled=true;if(startDate&&endDate){isDisabled=false;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"search-criteria\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"ticket-search-label\"},\"Start Date\"),/*#__PURE__*/React.createElement(DatePicker,{popperPlacement:\"bottom-end\",disabled:!isTicketHistoryInSearchMode,selected:startDate,maxDate:endDate||new Date(),onChange:function onChange(selected){return _this2.setState({startDate:new Date(selected)});}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"ticket-search-label\"},\"End Date\"),/*#__PURE__*/React.createElement(DatePicker,{popperPlacement:\"bottom-end\",disabled:!isTicketHistoryInSearchMode,selected:endDate,minDate:startDate,maxDate:new Date(),onChange:function onChange(selected){return _this2.setState({endDate:new Date(selected)});}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"ticket-search-label\"},\"Game\"),/*#__PURE__*/React.createElement(\"select\",{disabled:isTicketHistoryInSearchMode,value:selectedGameType,onChange:function onChange(e){return _this2.handleSelectChange(e,'game');}},allGameTypes.map(function(identifier){return/*#__PURE__*/React.createElement(\"option\",{value:identifier},identifier);}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"ticket-search-label\"},\"Win Status\"),/*#__PURE__*/React.createElement(\"select\",{disabled:isTicketHistoryInSearchMode,value:selectedWinStatus,onChange:function onChange(e){return _this2.handleSelectChange(e,'winStatus');}},allWinStatuses.map(function(identifier){return/*#__PURE__*/React.createElement(\"option\",{value:identifier},identifier);}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"ticket-search-label\"},\"Approval Status\"),/*#__PURE__*/React.createElement(\"select\",{disabled:isTicketHistoryInSearchMode,value:selectedStatus,onChange:function onChange(e){return _this2.handleSelectChange(e,'status');}},allStatuses.map(function(identifier){return/*#__PURE__*/React.createElement(\"option\",{value:identifier},identifier);}))),/*#__PURE__*/React.createElement(\"div\",null,isTicketHistoryInSearchMode?/*#__PURE__*/React.createElement(Button,{disabled:isDisabled,className:\"ticket-search-btn\",onClick:function onClick(){return _this2.onSearch();}},\"Search\"):/*#__PURE__*/React.createElement(Button,{disabled:isDisabled,className:\"ticket-search-btn\",onClick:function onClick(){return _this2.onFilter();}},\"Filter\"),/*#__PURE__*/React.createElement(Button,{className:\"ticket-search-btn\",disabled:isTicketHistoryInSearchMode,onClick:function onClick(){return _this2.onClearFilters();}},\"Clear Filters\"),/*#__PURE__*/React.createElement(Button,{className:\"ticket-search-btn\",onClick:function onClick(){return _this2.onNewSearch();}},\"New Search\"))));}}]);return TicketSearch;}(React.Component),_temp))||_class)||_class);export default TicketSearch;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Ticket/SearchBar/index.js"],"names":["React","Button","DatePicker","inject","observer","TicketSearch","props","handleInputChange","e","stateName","setState","target","value","handleSelectChange","val","playerStore","setSelectedGameType","setSelectedWinStatus","setSelectedStatus","onSearch","state","startDate","endDate","handleSearchClick","onFilter","handleFilterClick","onClearFilters","ClearTicketHistoryFilters","onNewSearchCallback","clearTicketHistorySearchResults","setTicketHistorySearchMode","onNewSearch","Date","setDate","getDate","allGameTypes","allWinStatuses","allStatuses","selectedGameType","selectedWinStatus","selectedStatus","isTicketHistoryInSearchMode","isDisabled","selected","map","identifier","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport './TicketSearch.css';\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass TicketSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: '',\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.setState({startDate: startDate, endDate: new Date()})\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        this.setState({[stateName]: e.target.value});\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = e.target.value;\r\n        if (stateName === 'game') {\r\n            this.props.playerStore.setSelectedGameType(val)\r\n        } else if (stateName === 'winStatus') {\r\n            this.props.playerStore.setSelectedWinStatus(val);\r\n        } else if (stateName === 'status') {\r\n            this.props.playerStore.setSelectedStatus(val);\r\n        }\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {startDate, endDate} = this.state;\r\n        this.props.handleSearchClick(startDate, endDate);\r\n    }\r\n\r\n    onFilter = () => {\r\n        this.props.handleFilterClick();\r\n    }\r\n\r\n    onClearFilters = () => {\r\n        this.props.playerStore.ClearTicketHistoryFilters();\r\n    }\r\n\r\n    onNewSearchCallback = () => {\r\n        this.props.playerStore.clearTicketHistorySearchResults()\r\n        this.props.playerStore.setTicketHistorySearchMode(true)\r\n    }\r\n\r\n    onNewSearch = () => {\r\n        this.setState({\r\n            startDate: '',\r\n            endDate: ''\r\n        }, () => this.onNewSearchCallback());\r\n    }\r\n\r\n    render() {\r\n\r\n        const {startDate, endDate} = this.state;\r\n        const {allGameTypes, allWinStatuses, allStatuses, selectedGameType, selectedWinStatus, selectedStatus, isTicketHistoryInSearchMode} = this.props.playerStore;\r\n\r\n        let isDisabled = true;\r\n\r\n        if ((startDate && endDate)) {\r\n            isDisabled = false\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Start Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isTicketHistoryInSearchMode}\r\n                                    selected={startDate}\r\n                                    maxDate={endDate || new Date()}\r\n                                    onChange={selected => this.setState({startDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>End Date</div>\r\n                        <DatePicker popperPlacement=\"bottom-end\"\r\n                                    disabled={!isTicketHistoryInSearchMode}\r\n                                    selected={endDate}\r\n                                    minDate={startDate}\r\n                                    maxDate={new Date()}\r\n                                    onChange={selected => this.setState({endDate: new Date(selected)})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Game</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedGameType}\r\n                                onChange={(e) => this.handleSelectChange(e, 'game')}>\r\n                            {\r\n                                allGameTypes.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Win Status</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedWinStatus}\r\n                                onChange={(e) => this.handleSelectChange(e, 'winStatus')}>\r\n                            {\r\n                                allWinStatuses.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='ticket-search-label'>Approval Status</div>\r\n                        <select disabled={isTicketHistoryInSearchMode} value={selectedStatus}\r\n                                onChange={(e) => this.handleSelectChange(e, 'status')}>\r\n                            {\r\n                                allStatuses.map(identifier => {\r\n                                    return <option value={identifier}>{identifier}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        {isTicketHistoryInSearchMode ?\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onSearch()}>\r\n                                Search\r\n                            </Button> :\r\n                            <Button disabled={isDisabled} className='ticket-search-btn' onClick={() => this.onFilter()}>\r\n                                Filter\r\n                            </Button>\r\n                        }\r\n                        <Button className='ticket-search-btn' disabled={isTicketHistoryInSearchMode} onClick={() => this.onClearFilters()}>\r\n                            Clear Filters\r\n                        </Button>\r\n                        <Button className='ticket-search-btn' onClick={() => this.onNewSearch()}>\r\n                            New Search\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TicketSearch;\r\n\r\n"]},"metadata":{},"sourceType":"module"}