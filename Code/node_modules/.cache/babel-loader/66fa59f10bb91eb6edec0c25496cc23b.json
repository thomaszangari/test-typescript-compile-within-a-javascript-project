{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar mobx_1 = require(\"mobx\");\n\nvar serializr_1 = require(\"serializr\");\n\nvar Storage = require(\"./storage\");\n\nvar merge_x_1 = require(\"./merge-x\");\n\nvar types_1 = require(\"./types\");\n\nvar persist_object_1 = require(\"./persist-object\");\n\nfunction persist() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var a = args[0],\n      b = args[1],\n      c = args[2];\n\n  if (a in types_1.types) {\n    return serializr_1.serializable(types_1.types[a](b));\n  } else if (args.length === 1) {\n    return function (target) {\n      return persist_object_1.persistObject(target, a);\n    };\n  } else {\n    return serializr_1.serializable.apply(null, args);\n  }\n}\n\nexports.persist = persist;\n\nfunction create(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.storage,\n      storage = _c === void 0 ? Storage : _c,\n      _d = _b.jsonify,\n      jsonify = _d === void 0 ? true : _d,\n      _e = _b.debounce,\n      debounce = _e === void 0 ? 0 : _e;\n\n  if (typeof localStorage !== 'undefined' && localStorage === storage) storage = Storage;\n  return function hydrate(key, store, initialState) {\n    if (initialState === void 0) {\n      initialState = {};\n    }\n\n    var schema = serializr_1.getDefaultModelSchema(store);\n\n    function hydration() {\n      var promise = storage.getItem(key).then(function (d) {\n        return !jsonify ? d : JSON.parse(d);\n      }).then(mobx_1.action(\"[mobx-persist \" + key + \"] LOAD_DATA\", function (persisted) {\n        if (persisted && typeof persisted === 'object') {\n          serializr_1.update(schema, store, persisted);\n        }\n\n        merge_x_1.mergeObservables(store, initialState);\n        return store;\n      }));\n      promise.rehydrate = hydration;\n      return promise;\n    }\n\n    var result = hydration();\n    mobx_1.reaction(function () {\n      return serializr_1.serialize(schema, store);\n    }, function (data) {\n      return storage.setItem(key, !jsonify ? data : JSON.stringify(data));\n    }, {\n      delay: debounce\n    });\n    return result;\n  };\n}\n\nexports.create = create;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/node_modules/mobx-persist/lib/index.js"],"names":["Object","defineProperty","exports","value","mobx_1","require","serializr_1","Storage","merge_x_1","types_1","persist_object_1","persist","args","_i","arguments","length","a","b","c","types","serializable","target","persistObject","apply","create","_a","_b","_c","storage","_d","jsonify","_e","debounce","localStorage","hydrate","key","store","initialState","schema","getDefaultModelSchema","hydration","promise","getItem","then","d","JSON","parse","action","persisted","update","mergeObservables","rehydrate","result","reaction","serialize","data","setItem","stringify","delay"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mobx_1 = require(\"mobx\");\nvar serializr_1 = require(\"serializr\");\nvar Storage = require(\"./storage\");\nvar merge_x_1 = require(\"./merge-x\");\nvar types_1 = require(\"./types\");\nvar persist_object_1 = require(\"./persist-object\");\nfunction persist() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var a = args[0], b = args[1], c = args[2];\n    if (a in types_1.types) {\n        return serializr_1.serializable(types_1.types[a](b));\n    }\n    else if (args.length === 1) {\n        return function (target) { return persist_object_1.persistObject(target, a); };\n    }\n    else {\n        return serializr_1.serializable.apply(null, args);\n    }\n}\nexports.persist = persist;\nfunction create(_a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.storage, storage = _c === void 0 ? Storage : _c, _d = _b.jsonify, jsonify = _d === void 0 ? true : _d, _e = _b.debounce, debounce = _e === void 0 ? 0 : _e;\n    if (typeof localStorage !== 'undefined' && localStorage === storage)\n        storage = Storage;\n    return function hydrate(key, store, initialState) {\n        if (initialState === void 0) { initialState = {}; }\n        var schema = serializr_1.getDefaultModelSchema(store);\n        function hydration() {\n            var promise = storage.getItem(key)\n                .then(function (d) { return !jsonify ? d : JSON.parse(d); })\n                .then(mobx_1.action(\"[mobx-persist \" + key + \"] LOAD_DATA\", function (persisted) {\n                if (persisted && typeof persisted === 'object') {\n                    serializr_1.update(schema, store, persisted);\n                }\n                merge_x_1.mergeObservables(store, initialState);\n                return store;\n            }));\n            promise.rehydrate = hydration;\n            return promise;\n        }\n        var result = hydration();\n        mobx_1.reaction(function () { return serializr_1.serialize(schema, store); }, function (data) { return storage.setItem(key, !jsonify ? data : JSON.stringify(data)); }, {\n            delay: debounce\n        });\n        return result;\n    };\n}\nexports.create = create;\n"]},"metadata":{},"sourceType":"script"}