{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Claims\\\\claimDetails\\\\ClaimDetails.js\";\n\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport './ClaimDetails.css';\nimport { toJS } from \"mobx\";\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\nimport { checkRenderPermissions } from \"../../helpers\";\nimport { permissions } from \"../../constants\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { UserAction, UserActionCategory } from \"../../UserActionCategory\";\nimport AppTextbox from \"../../AppTextbox\";\nimport AppToast from \"../../toast\";\nimport SigContainer from '../../components/sigcontainer/sigcontainer';\nlet ClaimDetails = (_dec = inject('playerStore', 'claimStore'), _dec(_class = observer(_class = (_temp = class ClaimDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = e => {\n      //this.props.playerStore.clearESig();\n      this.setState({\n        showSigModal: false\n      });\n    };\n\n    this.handleW2GFormButtonClick = () => {\n      this.props.playerStore.fetchW2GFormForClaim();\n    };\n\n    this.handleESigFormButtonClick = () => {\n      //this.props.playerStore.fetchESigFormForClaim();\n      if (this.props.playerStore.eSignatureURL && this.props.playerStore.eSignatureURL != '') {\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE, 'Claim ID: ' + this.props.playerStore.selectedClaimId, '');\n        this.setState({\n          showSigModal: true\n        });\n      } else {\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE_FAILED, 'Claim ID: ' + this.props.playerStore.selectedClaimId, 'No E-Signature Link Provided');\n        this.setState({\n          showToast: true\n        });\n      } //this.setState({showSigModal: true});\n\n    };\n\n    this.handleClaimHistoryDetailClick = () => {// alert('Claim history click')\n    };\n\n    this.handlePaymentDetailClick = paymentData => {\n      this.props.playerStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: ' + paymentData.transactionId, '');\n      this.props.playerStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\n    };\n\n    this.navigateToPaymentDetails = () => {\n      const id = this.props.playerStore.selectedClaimId;\n      this.props.history.push(`/claim/${id}/paymenthistory`);\n    };\n\n    this.handleRepaymentButtonClick = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.handleInputChange = (event, stateName) => {\n      const {\n        value\n      } = event.target;\n      const re = /^[0-9\\b]+$/;\n\n      if (value === '' || re.test(value)) {\n        this.setState({\n          [stateName]: value\n        });\n      }\n    };\n\n    this.handleRoutingInputChange = async (event, stateName) => {\n      const {\n        value\n      } = event.target;\n      let bankName = null;\n      const {\n        playerStore\n      } = this.props;\n      const re = /^[0-9\\b]+$/;\n\n      if (value === '' || re.test(value)) {\n        if (value.length === 9) {\n          playerStore.setSpinnerState(true);\n          await fetch(`https://www.routingnumbers.info/api/name.json?rn=${value}`, {\n            method: 'GET'\n          }).then(response => response.json()).then(res => {\n            if (res.code === 200) {\n              bankName = res.name;\n              this.setState({\n                [stateName]: value,\n                bankName\n              });\n            } else {\n              this.setState({\n                [stateName]: value\n              });\n            }\n\n            playerStore.setSpinnerState(false);\n          }).catch(error => {\n            this.errorMessage = error.toString();\n            playerStore.setSpinnerState(false);\n          });\n        } else {\n          this.setState({\n            [stateName]: value,\n            bankName\n          });\n        }\n      }\n    };\n\n    this.handleResubmitPayment = referenceNumber => {\n      const {\n        routingNumber,\n        accountNumber,\n        selectedAccount\n      } = this.state;\n      this.props.claimStore.resubmitACHPayment(referenceNumber, accountNumber, routingNumber, selectedAccount);\n    };\n\n    this.onYes = referenceNumber => {\n      this.setState({\n        showConfirmModal: false\n      }, () => this.handleResubmitPayment(referenceNumber));\n    };\n\n    this.onNo = () => {\n      this.setState({\n        showConfirmModal: false,\n        showModal: true\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        showConfirmModal: true,\n        showModal: false\n      });\n    };\n\n    this.onCancel = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.onAccountTypeChange = event => {\n      this.setState({\n        selectedAccount: event.target.value\n      });\n    };\n\n    this.handleToastClose = () => {\n      this.setState({\n        showToast: false\n      });\n    };\n\n    this.state = {\n      showModal: false,\n      showConfirmModal: false,\n      showSigModal: false,\n      routingNumber: '',\n      confirmRoutingNumber: '',\n      accountNumber: '',\n      confirmAccountNumber: '',\n      bankName: null,\n      accountTypes: ['CHECKING', 'SAVINGS'],\n      selectedAccount: 'CHECKING',\n      showToast: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.playerStore.fetchClaimDetails();\n    this.props.playerStore.fetchPaymentHistoryDetails();\n  }\n\n  renderClaimDetails() {\n    if (this.props.playerStore.claimDetails && this.props.playerStore.selectedClaimId) {\n      const {\n        showModal,\n        showConfirmModal,\n        showSigModal,\n        routingNumber,\n        confirmRoutingNumber,\n        accountNumber,\n        confirmAccountNumber,\n        bankName,\n        accountTypes,\n        selectedAccount,\n        showToast\n      } = this.state;\n      const {\n        isSpinnerLoading\n      } = this.props.playerStore;\n      let isSubmitDisabled = true;\n\n      if (routingNumber && confirmRoutingNumber && confirmAccountNumber && accountNumber && bankName && routingNumber.length === 9 && confirmAccountNumber === accountNumber && confirmRoutingNumber === routingNumber) {\n        isSubmitDisabled = false;\n      }\n\n      const data = toJS(this.props.playerStore.claimDetails);\n      const paymentHistoryTableRows = toJS(this.props.playerStore.paymentHistoryData);\n      const {\n        selectedClaimDetails,\n        claimHistoryTableHeader,\n        claimHistoryTableRows,\n        eSignatureData\n      } = data;\n      const paymentHistoryTableHeader = [{\n        key: 'date',\n        label: 'Date'\n      }, {\n        key: 'time',\n        label: 'Time'\n      }, {\n        key: 'transactionId',\n        label: 'Transaction ID'\n      }, {\n        key: 'amount',\n        label: 'Amount',\n        classes: 'currency-column'\n      }, {\n        key: 'status',\n        label: 'Status'\n      }];\n      let rejectedCounter = 0;\n\n      if (checkRenderPermissions(permissions.CAN_SEE_CLAIM_TRANSACTION_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\n        if (paymentHistoryTableRows && paymentHistoryTableRows.length > 0) {\n          paymentHistoryTableHeader.push({\n            key: 'view',\n            label: 'View Details'\n          });\n          paymentHistoryTableRows.forEach(row => {\n            if (row.status === 'REJECTED') {\n              rejectedCounter++;\n            }\n\n            row.view = /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.handlePaymentDetailClick(row),\n              className: \"claim-link\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 36\n              }\n            }, \"View Details\");\n          });\n        }\n      }\n\n      const {\n        referenceNumber,\n        serialNumber,\n        barcode,\n        ticketSerialNumber,\n        ticketBarcode,\n        prizeAmountInCents,\n        taxWithholding,\n        offsetWithholding,\n        status,\n        netPaymentAmountInCents,\n        rejectedCount\n      } = selectedClaimDetails;\n      const canSeeESig = checkRenderPermissions(permissions.CAN_SEE_E_SIGNATURE, JSON.parse(localStorage.getItem('userpolicies')));\n      const canSeeW2G = checkRenderPermissions(permissions.CAN_SEE_CLAIM_W2G, JSON.parse(localStorage.getItem('userpolicies')));\n      const isResubmitDisabled = checkRenderPermissions(permissions.CAN_RESUBMIT_PAYMENT, JSON.parse(localStorage.getItem('userpolicies'))); // claimHistoryTableRows.forEach(row => row.view = <a onClick={() => this.handleClaimHistoryDetailClick()} className='claim-link'>View Details</a>);\n\n      const isButtonEnabled = !(status === 'READY_FOR_PAYMENT' && rejectedCounter === 1);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-container container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, showToast ? /*#__PURE__*/React.createElement(AppToast, {\n        showToast: showToast,\n        message: 'No Signature found for Claim',\n        isSuccessMessage: false,\n        handleClose: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 33\n        }\n      }, \"Reference #\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }\n      }, referenceNumber)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column big-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }, \"Ticket Serial #\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 33\n        }\n      }, serialNumber)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column big-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 33\n        }\n      }, \"Ticket Barcode\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, barcode)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 33\n        }\n      }, \"Prize Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 33\n        }\n      }, \"$\", prizeAmountInCents ? (prizeAmountInCents / 100).toFixed(2) : 0)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }\n      }, \"Tax Withholding\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 33\n        }\n      }, \"$\", taxWithholding)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 33\n        }\n      }, \"Offset Withholding\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 33\n        }\n      }, \"$\", offsetWithholding)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 33\n        }\n      }, \"Net Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 33\n        }\n      }, \"$\", netPaymentAmountInCents && netPaymentAmountInCents / 100)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"claim-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 33\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 33\n        }\n      }, status)))), /*#__PURE__*/React.createElement(Modal, {\n        size: \"lg\",\n        show: showSigModal,\n        className: `${``} role-modal`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 29\n        }\n      }, 'E-Signature')), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(SigContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: e => this.onClose(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }\n      }, \"Close\"))), claimHistoryTableHeader && claimHistoryTableRows ? /*#__PURE__*/React.createElement(ReactTable, {\n        tableHeader: claimHistoryTableHeader,\n        rowData: claimHistoryTableRows,\n        className: \"claim-panel\",\n        header: \"Claim History\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 31\n        }\n      }) : null, paymentHistoryTableHeader && paymentHistoryTableRows ? /*#__PURE__*/React.createElement(ReactTable, {\n        tableHeader: paymentHistoryTableHeader,\n        rowData: paymentHistoryTableRows,\n        className: \"claim-panel\",\n        header: \"Payment History\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 31\n        }\n      }) : null, canSeeESig ? /*#__PURE__*/React.createElement(Button, {\n        className: \"view-sig-button\",\n        onClick: () => this.handleESigFormButtonClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 31\n        }\n      }, \"View E-Signature\") : null, canSeeW2G ? /*#__PURE__*/React.createElement(Button, {\n        className: \"view-pdf-button\",\n        onClick: () => this.handleW2GFormButtonClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 31\n        }\n      }, \"View W2G\") : null, isResubmitDisabled ? /*#__PURE__*/React.createElement(Button, {\n        disabled: isButtonEnabled,\n        className: \"resubmit-button\",\n        onClick: () => this.handleRepaymentButtonClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 31\n        }\n      }, \"Resubmit Payment\") : null, /*#__PURE__*/React.createElement(Modal, {\n        show: showModal,\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }\n      }, \"Resubmit Payment\"), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(AppTextbox, {\n        controlId: \"formGroupRoleName\",\n        placeholder: \"Routing Number\",\n        value: routingNumber,\n        disabled: isSpinnerLoading,\n        maxlength: 9,\n        onChange: e => this.handleRoutingInputChange(e, 'routingNumber'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 33\n        }\n      }), routingNumber && bankName === null ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"warning-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 43\n        }\n      }, \"Does Not Match Known Banks\") : null, bankName ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bank-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 48\n        }\n      }, bankName) : null, /*#__PURE__*/React.createElement(AppTextbox, {\n        controlId: \"formGroupRoleName\",\n        placeholder: \"Re-Enter Routing Number\",\n        value: confirmRoutingNumber,\n        disabled: isSpinnerLoading,\n        maxlength: 9,\n        onChange: e => this.handleInputChange(e, 'confirmRoutingNumber'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 33\n        }\n      }), routingNumber && confirmRoutingNumber && routingNumber !== confirmRoutingNumber ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"warning-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 43\n        }\n      }, \"Routing Numbers Do Not Match\") : null, /*#__PURE__*/React.createElement(AppTextbox, {\n        controlId: \"formGroupRoleName\",\n        placeholder: \"Account Number\",\n        value: accountNumber,\n        disabled: isSpinnerLoading,\n        onChange: e => this.handleInputChange(e, 'accountNumber'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(AppTextbox, {\n        controlId: \"formGroupRoleName\",\n        placeholder: \"Re-Enter Account Number\",\n        value: confirmAccountNumber,\n        disabled: isSpinnerLoading,\n        onChange: e => this.handleInputChange(e, 'confirmAccountNumber'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 33\n        }\n      }), accountNumber && confirmAccountNumber && accountNumber !== confirmAccountNumber ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"warning-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 43\n        }\n      }, \"Account Numbers Do Not Match\") : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"account-type-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 33\n        }\n      }, \"Account Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control account-select\",\n        value: selectedAccount,\n        onChange: this.onAccountTypeChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 33\n        }\n      }, accountTypes.map(account => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: account,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 52\n          }\n        }, account);\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: e => this.onCancel(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: isSubmitDisabled,\n        onClick: e => this.onSubmit(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 29\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n        show: showConfirmModal,\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-details-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 29\n        }\n      }, \"Are you sure you wish to submit this Payment?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: e => this.onNo(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }\n      }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => this.onYes(referenceNumber),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 29\n        }\n      }, \"Yes\"))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"claim-container container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-data-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, \"Error loading data...go back\"));\n  }\n\n  render() {\n    let renderObj;\n\n    if (checkRenderPermissions(permissions.CAN_SEE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies'))) && checkRenderPermissions(permissions.CAN_SEE_CLAIM_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\n      renderObj = this.renderClaimDetails();\n    } else {\n      renderObj = /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"unauthorized-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }\n      }, \"You do not have permission to view this page! Please contact your System Administrator!\");\n    }\n\n    return renderObj;\n  }\n\n}, _temp)) || _class) || _class);\nexport default ClaimDetails;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Claims/claimDetails/ClaimDetails.js"],"names":["React","inject","observer","toJS","ReactTable","checkRenderPermissions","permissions","Button","Modal","UserAction","UserActionCategory","AppTextbox","AppToast","SigContainer","ClaimDetails","Component","constructor","props","onClose","e","setState","showSigModal","handleW2GFormButtonClick","playerStore","fetchW2GFormForClaim","handleESigFormButtonClick","eSignatureURL","logAction","BUTTON_CLICK","VIEW_ESIGNAURE","selectedClaimId","VIEW_ESIGNAURE_FAILED","showToast","handleClaimHistoryDetailClick","handlePaymentDetailClick","paymentData","API_CALL","VIEW_PAYMENT_DETAILS","transactionId","setPaymentDetails","navigateToPaymentDetails","id","history","push","handleRepaymentButtonClick","showModal","handleInputChange","event","stateName","value","target","re","test","handleRoutingInputChange","bankName","length","setSpinnerState","fetch","method","then","response","json","res","code","name","catch","error","errorMessage","toString","handleResubmitPayment","referenceNumber","routingNumber","accountNumber","selectedAccount","state","claimStore","resubmitACHPayment","onYes","showConfirmModal","onNo","onSubmit","onCancel","onAccountTypeChange","handleToastClose","confirmRoutingNumber","confirmAccountNumber","accountTypes","componentDidMount","fetchClaimDetails","fetchPaymentHistoryDetails","renderClaimDetails","claimDetails","isSpinnerLoading","isSubmitDisabled","data","paymentHistoryTableRows","paymentHistoryData","selectedClaimDetails","claimHistoryTableHeader","claimHistoryTableRows","eSignatureData","paymentHistoryTableHeader","key","label","classes","rejectedCounter","CAN_SEE_CLAIM_TRANSACTION_DETAILS","JSON","parse","localStorage","getItem","forEach","row","status","view","serialNumber","barcode","ticketSerialNumber","ticketBarcode","prizeAmountInCents","taxWithholding","offsetWithholding","netPaymentAmountInCents","rejectedCount","canSeeESig","CAN_SEE_E_SIGNATURE","canSeeW2G","CAN_SEE_CLAIM_W2G","isResubmitDisabled","CAN_RESUBMIT_PAYMENT","isButtonEnabled","toFixed","map","account","render","renderObj","CAN_SEE_CLAIMS","CAN_SEE_CLAIM_DETAILS"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './ClaimDetails.css';\r\nimport {toJS} from \"mobx\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport AppToast from \"../../toast\";\r\nimport SigContainer from '../../components/sigcontainer/sigcontainer';\r\n\r\n@inject('playerStore', 'claimStore')\r\n@observer\r\nclass ClaimDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            showConfirmModal: false,\r\n            showSigModal: false,\r\n            routingNumber: '',\r\n            confirmRoutingNumber: '',\r\n            accountNumber: '',\r\n            confirmAccountNumber: '',\r\n            bankName: null,\r\n            accountTypes: ['CHECKING', 'SAVINGS'],\r\n            selectedAccount: 'CHECKING',\r\n            showToast: false\r\n        };\r\n    }\r\n\r\n    onClose = (e) => {\r\n        //this.props.playerStore.clearESig();\r\n        this.setState({showSigModal: false});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.playerStore.fetchClaimDetails();\r\n        this.props.playerStore.fetchPaymentHistoryDetails();\r\n    }\r\n\r\n    handleW2GFormButtonClick = () => {\r\n        this.props.playerStore.fetchW2GFormForClaim();\r\n    }\r\n\r\n    handleESigFormButtonClick = () => {\r\n        //this.props.playerStore.fetchESigFormForClaim();\r\n\r\n        if(this.props.playerStore.eSignatureURL && this.props.playerStore.eSignatureURL != ''){\r\n            this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE, 'Claim ID: '+this.props.playerStore.selectedClaimId, '');\r\n            this.setState({showSigModal: true})\r\n        } else {\r\n            this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE_FAILED, 'Claim ID: '+this.props.playerStore.selectedClaimId, 'No E-Signature Link Provided');\r\n            this.setState({showToast: true})\r\n        }\r\n        //this.setState({showSigModal: true});\r\n    }\r\n\r\n    handleClaimHistoryDetailClick = () => {\r\n        // alert('Claim history click')\r\n    }\r\n\r\n    handlePaymentDetailClick = (paymentData) => {\r\n        this.props.playerStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: '+paymentData.transactionId, '');\r\n        this.props.playerStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\r\n    }\r\n\r\n    navigateToPaymentDetails = () => {\r\n        const id  = this.props.playerStore.selectedClaimId;\r\n        this.props.history.push(`/claim/${id}/paymenthistory`);\r\n    }\r\n\r\n    handleRepaymentButtonClick = () => {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    handleInputChange = (event, stateName) => {\r\n        const {value} = event.target;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (value === '' || re.test(value)) {\r\n            this.setState({[stateName]: value});\r\n        }\r\n    }\r\n\r\n    handleRoutingInputChange = async (event, stateName) => {\r\n        const {value} = event.target;\r\n        let bankName = null;\r\n        const {playerStore} = this.props;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (value === '' || re.test(value)) {\r\n            if(value.length === 9) {\r\n                playerStore.setSpinnerState(true);\r\n                await fetch(`https://www.routingnumbers.info/api/name.json?rn=${value}`, {\r\n                    method: 'GET',\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(res => {\r\n                        if(res.code === 200) {\r\n                            bankName = res.name;\r\n                            this.setState({[stateName]: value, bankName});\r\n                        } else {\r\n                            this.setState({[stateName]: value});\r\n                        }\r\n                        playerStore.setSpinnerState(false);\r\n                    })\r\n                    .catch((error) => {\r\n                        this.errorMessage = error.toString();\r\n                        playerStore.setSpinnerState(false);\r\n                    });\r\n            } else {\r\n                this.setState({[stateName]: value, bankName});\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleResubmitPayment = (referenceNumber) => {\r\n        const {routingNumber, accountNumber, selectedAccount} = this.state;\r\n        this.props.claimStore.resubmitACHPayment(referenceNumber, accountNumber, routingNumber, selectedAccount);\r\n    }\r\n    onYes = (referenceNumber) => {\r\n        this.setState({showConfirmModal: false}, () => this.handleResubmitPayment(referenceNumber));\r\n    }\r\n    onNo = () => {\r\n        this.setState({showConfirmModal: false, showModal:true});\r\n    }\r\n    onSubmit = () => {\r\n        this.setState({showConfirmModal: true, showModal: false});\r\n    }\r\n    onCancel = () => {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    onAccountTypeChange = event => {\r\n        this.setState({selectedAccount: event.target.value});\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.setState({showToast: false});\r\n    }\r\n\r\n\r\n    renderClaimDetails() {\r\n        if(this.props.playerStore.claimDetails && this.props.playerStore.selectedClaimId) {\r\n\r\n            const {showModal, showConfirmModal, showSigModal, routingNumber, confirmRoutingNumber, accountNumber,\r\n                confirmAccountNumber, bankName, accountTypes, selectedAccount, showToast} = this.state;\r\n            const {isSpinnerLoading} = this.props.playerStore;\r\n            let isSubmitDisabled = true;\r\n            \r\n            if(routingNumber && confirmRoutingNumber && confirmAccountNumber && accountNumber && bankName &&\r\n                routingNumber.length === 9 && confirmAccountNumber === accountNumber &&\r\n                confirmRoutingNumber === routingNumber) {\r\n                isSubmitDisabled = false;\r\n            }\r\n            \r\n\r\n            const data = toJS(this.props.playerStore.claimDetails)\r\n            const paymentHistoryTableRows = toJS(this.props.playerStore.paymentHistoryData);\r\n            const {selectedClaimDetails, claimHistoryTableHeader, claimHistoryTableRows, eSignatureData} = data;\r\n            const paymentHistoryTableHeader =  [\r\n                {key: 'date', label: 'Date'},\r\n                {key: 'time', label: 'Time'},\r\n                {key: 'transactionId', label: 'Transaction ID'},\r\n                {key: 'amount', label: 'Amount', classes: 'currency-column'},\r\n                {key: 'status', label: 'Status'},\r\n            ];\r\n            let rejectedCounter = 0;\r\n            if(checkRenderPermissions(permissions.CAN_SEE_CLAIM_TRANSACTION_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n                if(paymentHistoryTableRows && paymentHistoryTableRows.length > 0) {\r\n                    paymentHistoryTableHeader.push({key: 'view', label: 'View Details'});\r\n                    paymentHistoryTableRows.forEach(row => {\r\n                        if(row.status === 'REJECTED') {\r\n                            rejectedCounter++;\r\n                        }\r\n                        row.view = <a onClick={() => this.handlePaymentDetailClick(row)} className='claim-link'>View Details</a>\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            const {referenceNumber, serialNumber, barcode, ticketSerialNumber, ticketBarcode, prizeAmountInCents, taxWithholding,\r\n                offsetWithholding, status, netPaymentAmountInCents, rejectedCount} = selectedClaimDetails;\r\n            const canSeeESig = checkRenderPermissions(permissions.CAN_SEE_E_SIGNATURE,\r\n                JSON.parse(localStorage.getItem('userpolicies')));\r\n            const canSeeW2G = checkRenderPermissions(permissions.CAN_SEE_CLAIM_W2G,\r\n                JSON.parse(localStorage.getItem('userpolicies')));\r\n\r\n            const isResubmitDisabled = checkRenderPermissions(permissions.CAN_RESUBMIT_PAYMENT,\r\n                JSON.parse(localStorage.getItem('userpolicies')));\r\n\r\n            // claimHistoryTableRows.forEach(row => row.view = <a onClick={() => this.handleClaimHistoryDetailClick()} className='claim-link'>View Details</a>);\r\n\r\n            const isButtonEnabled = !(status === 'READY_FOR_PAYMENT' && rejectedCounter === 1);\r\n            return(\r\n                <div className='claim-container container-fluid'>\r\n                    {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={'No Signature found for Claim'}\r\n                              isSuccessMessage={false}\r\n                              handleClose={null}/>\r\n                    : null\r\n                }\r\n                    <div className='claim-panel'>\r\n                        <div className='claim-top-row'>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Reference #\r\n                                </div>\r\n                                <div>\r\n                                    {referenceNumber}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column big-column'>\r\n                                <div>\r\n                                    Ticket Serial #\r\n                                </div>\r\n                                <div>\r\n                                    {serialNumber}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column big-column'>\r\n                                <div>\r\n                                    Ticket Barcode\r\n                                </div>\r\n                                <div>\r\n                                    {barcode}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Prize Amount\r\n                                </div>\r\n                                <div>\r\n                                    ${prizeAmountInCents ?  (prizeAmountInCents/100).toFixed(2) : 0}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Tax Withholding\r\n                                </div>\r\n                                <div>\r\n                                    ${taxWithholding}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Offset Withholding\r\n                                </div>\r\n                                <div>\r\n                                    ${offsetWithholding}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Net Amount\r\n                                </div>\r\n                                <div>\r\n                                    ${netPaymentAmountInCents && netPaymentAmountInCents/100}\r\n                                </div>\r\n                            </div>\r\n                            <div className='claim-top-column'>\r\n                                <div>\r\n                                    Status\r\n                                </div>\r\n                                <div>\r\n                                    {status}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal size='lg' show={showSigModal} className={`${``} role-modal`}>\r\n                        <Modal.Header>\r\n                            <h5>{'E-Signature'}</h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <SigContainer/>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onClose(e)}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    {\r\n                        claimHistoryTableHeader && claimHistoryTableRows\r\n                            ? <ReactTable tableHeader={claimHistoryTableHeader} rowData={claimHistoryTableRows}\r\n                                          className='claim-panel' header='Claim History'/>\r\n                            : null\r\n                    }\r\n                    {\r\n                        paymentHistoryTableHeader && paymentHistoryTableRows\r\n                            ? <ReactTable tableHeader={paymentHistoryTableHeader} rowData={paymentHistoryTableRows}\r\n                                          className='claim-panel' header='Payment History'/>\r\n                            : null\r\n                    }\r\n                    {\r\n                        canSeeESig\r\n                            ? <Button className='view-sig-button' onClick={() => this.handleESigFormButtonClick()}>\r\n                                View E-Signature\r\n                            </Button>\r\n                            : null\r\n                    }\r\n                    {\r\n                        canSeeW2G\r\n                            ? <Button className='view-pdf-button' onClick={() => this.handleW2GFormButtonClick()}>\r\n                                View W2G\r\n                            </Button>\r\n                            : null\r\n                    }\r\n                    {\r\n                        isResubmitDisabled\r\n                            ? <Button\r\n                                disabled={isButtonEnabled}\r\n                                className='resubmit-button'\r\n                                onClick={() => this.handleRepaymentButtonClick()}>\r\n                                Resubmit Payment\r\n                            </Button>\r\n                            : null\r\n                    }\r\n\r\n                    <Modal show={showModal} centered={true}>\r\n                        <Modal.Header>\r\n                            Resubmit Payment\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Routing Number'\r\n                                            value={routingNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            maxlength={9}\r\n                                            onChange={(e) => this.handleRoutingInputChange(e, 'routingNumber')}\r\n                                />\r\n                                {\r\n                                    routingNumber && bankName === null\r\n                                        ? <div className='warning-message'>Does Not Match Known Banks</div>\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    bankName ? <div className='bank-name'>{bankName}</div> : null\r\n                                }\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Re-Enter Routing Number'\r\n                                            value={confirmRoutingNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            maxlength={9}\r\n                                            onChange={(e) => this.handleInputChange(e, 'confirmRoutingNumber')}\r\n                                />\r\n                                {\r\n                                    routingNumber && confirmRoutingNumber && routingNumber !== confirmRoutingNumber\r\n                                        ? <div className='warning-message'>Routing Numbers Do Not Match</div>\r\n                                        : null\r\n                                }\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Account Number'\r\n                                            value={accountNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            onChange={(e) => this.handleInputChange(e, 'accountNumber')}\r\n                                />\r\n                                <AppTextbox controlId='formGroupRoleName'\r\n                                            placeholder='Re-Enter Account Number'\r\n                                            value={confirmAccountNumber}\r\n                                            disabled={isSpinnerLoading}\r\n                                            onChange={(e) => this.handleInputChange(e, 'confirmAccountNumber')}\r\n                                />\r\n                                {\r\n                                    accountNumber && confirmAccountNumber && accountNumber !== confirmAccountNumber\r\n                                        ? <div className='warning-message'>Account Numbers Do Not Match</div>\r\n                                        : null\r\n                                }\r\n                                <div className='account-type-label'>Account Type</div>\r\n                                <select className='form-control account-select' value={selectedAccount} onChange={this.onAccountTypeChange}>\r\n                                    {\r\n                                        accountTypes.map(account => {\r\n                                            return <option value={account}>{account}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onCancel(e)}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant='primary' disabled={isSubmitDisabled}\r\n                                    onClick={(e) => this.onSubmit(e)}>\r\n                                Submit\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={showConfirmModal} centered={true}>\r\n                        <Modal.Body>\r\n                            <div className='player-details-label'>\r\n                                Are you sure you wish to submit this Payment?\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onNo(e)}>No</Button>\r\n                            <Button variant='primary' onClick={() => this.onYes(referenceNumber)}>Yes</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className='claim-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        let renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_SEE_CLAIMS, JSON.parse(localStorage.getItem('userpolicies')))\r\n            && checkRenderPermissions(permissions.CAN_SEE_CLAIM_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderClaimDetails();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ClaimDetails;"]},"metadata":{},"sourceType":"module"}