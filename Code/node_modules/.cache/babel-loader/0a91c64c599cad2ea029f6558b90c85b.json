{"ast":null,"code":"import { create } from 'mobx-persist';\nimport { PlayerStore } from \"./PlayerStore\";\nimport { AuthStore } from \"./AuthStore\";\nimport { SettingsStore } from \"./SettingsStore\";\nimport { ClaimStore } from \"./ClaimStore\";\nimport { MiscellaneousStore } from \"./MiscellaneousStore\";\nconst hydrate = create({\n  storage: localStorage\n});\n\nclass RootStore {\n  constructor() {\n    this.playerStore = null;\n    this.authStore = null;\n    this.settingsStore = null;\n    this.claimStore = null;\n    this.miscellaneousStore = null;\n    this.playerStore = new PlayerStore(this);\n    this.authStore = new AuthStore(this);\n    this.settingsStore = new SettingsStore(this);\n    this.claimStore = new ClaimStore(this);\n    this.miscellaneousStore = new MiscellaneousStore(this);\n    Promise.all([hydrate('auth', this.authStore), hydrate('player', this.playerStore), hydrate('settings', this.settingsStore), hydrate('claim', this.claimStore), hydrate('miscellaneous', this.miscellaneousStore)]).then(() => console.log('All Stores Hydrated.'));\n  }\n\n}\n\nexport const rootStore = new RootStore();","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/store/RootStore.js"],"names":["create","PlayerStore","AuthStore","SettingsStore","ClaimStore","MiscellaneousStore","hydrate","storage","localStorage","RootStore","constructor","playerStore","authStore","settingsStore","claimStore","miscellaneousStore","Promise","all","then","console","log","rootStore"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,cAArB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AAEA,MAAMC,OAAO,GAAGN,MAAM,CAAC;AACnBO,EAAAA,OAAO,EAAEC;AADU,CAAD,CAAtB;;AAIA,MAAMC,SAAN,CAAgB;AAQZC,EAAAA,WAAW,GAAG;AAAA,SANdC,WAMc,GANA,IAMA;AAAA,SALdC,SAKc,GALF,IAKE;AAAA,SAJdC,aAIc,GAJE,IAIF;AAAA,SAHdC,UAGc,GAHD,IAGC;AAAA,SAFdC,kBAEc,GAFO,IAEP;AAEV,SAAKJ,WAAL,GAAmB,IAAIV,WAAJ,CAAgB,IAAhB,CAAnB;AACA,SAAKW,SAAL,GAAiB,IAAIV,SAAJ,CAAc,IAAd,CAAjB;AACA,SAAKW,aAAL,GAAqB,IAAIV,aAAJ,CAAkB,IAAlB,CAArB;AACA,SAAKW,UAAL,GAAkB,IAAIV,UAAJ,CAAe,IAAf,CAAlB;AACA,SAAKW,kBAAL,GAA0B,IAAIV,kBAAJ,CAAuB,IAAvB,CAA1B;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAY,CACRX,OAAO,CAAC,MAAD,EAAS,KAAKM,SAAd,CADC,EAERN,OAAO,CAAC,QAAD,EAAW,KAAKK,WAAhB,CAFC,EAGRL,OAAO,CAAC,UAAD,EAAa,KAAKO,aAAlB,CAHC,EAIRP,OAAO,CAAC,OAAD,EAAU,KAAKQ,UAAf,CAJC,EAKRR,OAAO,CAAC,eAAD,EAAkB,KAAKS,kBAAvB,CALC,CAAZ,EAOKG,IAPL,CAOU,MAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAPhB;AAQH;;AAxBW;;AA4BhB,OAAO,MAAMC,SAAS,GAAG,IAAIZ,SAAJ,EAAlB","sourcesContent":["import {create} from 'mobx-persist';\r\nimport {PlayerStore} from \"./PlayerStore\";\r\nimport {AuthStore} from \"./AuthStore\";\r\nimport {SettingsStore} from \"./SettingsStore\";\r\nimport {ClaimStore} from \"./ClaimStore\";\r\nimport {MiscellaneousStore} from \"./MiscellaneousStore\";\r\n\r\nconst hydrate = create({\r\n    storage: localStorage\r\n});\r\n\r\nclass RootStore {\r\n\r\n    playerStore = null;\r\n    authStore = null;\r\n    settingsStore = null;\r\n    claimStore = null;\r\n    miscellaneousStore = null;\r\n\r\n    constructor() {\r\n\r\n        this.playerStore = new PlayerStore(this);\r\n        this.authStore = new AuthStore(this);\r\n        this.settingsStore = new SettingsStore(this);\r\n        this.claimStore = new ClaimStore(this);\r\n        this.miscellaneousStore = new MiscellaneousStore(this);\r\n\r\n        Promise.all([\r\n            hydrate('auth', this.authStore),\r\n            hydrate('player', this.playerStore),\r\n            hydrate('settings', this.settingsStore),\r\n            hydrate('claim', this.claimStore),\r\n            hydrate('miscellaneous', this.miscellaneousStore)\r\n        ])\r\n            .then(() => console.log('All Stores Hydrated.'));\r\n    }\r\n\r\n}\r\n\r\nexport const rootStore = new RootStore()\r\n"]},"metadata":{},"sourceType":"module"}