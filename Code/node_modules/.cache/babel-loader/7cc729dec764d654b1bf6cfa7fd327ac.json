{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Claims\\\\rejectedClaim\\\\rejectClaim.js\";\n\nimport React from 'react';\nimport { checkRenderPermissions } from \"../../helpers\";\nimport { permissions } from \"../../constants\";\nimport { inject, observer } from \"mobx-react\";\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\nimport { toJS } from \"mobx\";\nimport AppToast from \"../../toast\";\nimport Spinner from \"../../Spinner\";\nimport { UserAction, UserActionCategory } from \"../../UserActionCategory\";\nimport './rejectClaim.css';\nlet RejectClaim = (_dec = inject('playerStore', 'claimStore'), _dec(_class = observer(_class = (_temp = class RejectClaim extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleViewDetailClick = data => {\n      this.props.playerStore.setSelectedClaim(data, this.navigateToClaimDetails, true); // this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SHOW_BATCH_FILE_PII, 'Transaction ID: '+target, 'User Name: '+userName);\n    };\n\n    this.navigateToClaimDetails = data => {\n      const id = this.props.playerStore.selectedClaimId;\n      this.props.history.push(`/claim/${id}`);\n    };\n\n    this.renderView = () => {\n      const {\n        rejectedClaimsDetails\n      } = this.props.claimStore;\n\n      if (rejectedClaimsDetails === null) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"search-claim-container container-fluid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      const {\n        tableHeader,\n        tableRows\n      } = rejectedClaimsDetails;\n      const rows = toJS(JSON.parse(JSON.stringify(tableRows)));\n      const headers = toJS(JSON.parse(JSON.stringify(tableHeader)));\n\n      if (headers.length > 0 && rows.length > 0 && checkRenderPermissions(permissions.CAN_SEE_REJECT_CLAIMS_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\n        headers.push({\n          key: 'view',\n          label: ''\n        });\n        rows.forEach(row => {\n          row.view = /*#__PURE__*/React.createElement(\"a\", {\n            onClick: () => this.handleViewDetailClick(row),\n            className: \"reject-link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 28\n            }\n          }, \"View\");\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reject-claim-container container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reject-claim-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, headers && headers.length > 0 ? /*#__PURE__*/React.createElement(ReactTable, {\n        tableHeader: headers,\n        rowData: rows,\n        className: \"search-claim-data-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }\n      }) : null));\n    };\n  }\n\n  componentDidMount() {\n    const userName = localStorage.getItem('loggedInUserFullName') || '';\n    this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.VIEW_REJECTED_CLAIMS, '', '');\n    const isClaimCheck = window.location.href.indexOf('claim/check') !== -1;\n    this.props.claimStore.fetchRejectClaims(isClaimCheck);\n  }\n\n  render() {\n    let renderObj;\n\n    if (checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) && checkRenderPermissions(permissions.CAN_SEE_REJECT_CLAIMS, JSON.parse(localStorage.getItem('userpolicies')))) {\n      renderObj = this.renderView();\n    } else {\n      renderObj = /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"unauthorized-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"You do not have permission to view this page! Please contact your System Administrator!\");\n    }\n\n    return renderObj;\n  }\n\n}, _temp)) || _class) || _class);\nexport default RejectClaim;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Claims/rejectedClaim/rejectClaim.js"],"names":["React","checkRenderPermissions","permissions","inject","observer","ReactTable","toJS","AppToast","Spinner","UserAction","UserActionCategory","RejectClaim","Component","handleViewDetailClick","data","props","playerStore","setSelectedClaim","navigateToClaimDetails","id","selectedClaimId","history","push","renderView","rejectedClaimsDetails","claimStore","tableHeader","tableRows","rows","JSON","parse","stringify","headers","length","CAN_SEE_REJECT_CLAIMS_DETAILS","localStorage","getItem","key","label","forEach","row","view","componentDidMount","userName","logAction","PAGE_VIEW","VIEW_REJECTED_CLAIMS","isClaimCheck","window","location","href","indexOf","fetchRejectClaims","render","renderObj","SEE_CLAIM_SUPPORT","CAN_SEE_REJECT_CLAIMS"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\nimport {toJS} from \"mobx\";\r\nimport AppToast from \"../../toast\";\r\nimport Spinner from \"../../Spinner\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\n\r\nimport './rejectClaim.css';\r\n\r\n@inject('playerStore', 'claimStore')\r\n@observer\r\nclass RejectClaim extends  React.Component {\r\n\r\n    componentDidMount() {\r\n        const userName = localStorage.getItem('loggedInUserFullName') || '';\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.VIEW_REJECTED_CLAIMS, '', '');\r\n        const isClaimCheck = window.location.href.indexOf('claim/check') !== -1;\r\n        this.props.claimStore.fetchRejectClaims(isClaimCheck);\r\n    }\r\n\r\n    handleViewDetailClick = (data) => {\r\n        this.props.playerStore.setSelectedClaim(data, this.navigateToClaimDetails, true);\r\n        // this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SHOW_BATCH_FILE_PII, 'Transaction ID: '+target, 'User Name: '+userName);\r\n    }\r\n    navigateToClaimDetails = (data) => {\r\n        const id  = this.props.playerStore.selectedClaimId;\r\n        this.props.history.push(`/claim/${id}`);\r\n    }\r\n\r\n    renderView = () => {\r\n        const {rejectedClaimsDetails} = this.props.claimStore;\r\n        if(rejectedClaimsDetails === null) {\r\n            return (\r\n                <div className='search-claim-container container-fluid'>\r\n                    <Spinner />\r\n                </div>\r\n            )\r\n        }\r\n        const {tableHeader, tableRows} = rejectedClaimsDetails;\r\n        const rows = toJS(JSON.parse(JSON.stringify(tableRows)));\r\n        const headers = toJS(JSON.parse(JSON.stringify(tableHeader)));\r\n        if(headers.length > 0 && rows.length > 0 &&\r\n            checkRenderPermissions(permissions.CAN_SEE_REJECT_CLAIMS_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            headers.push({key: 'view', label: ''});\r\n            rows.forEach(row => {\r\n                row.view = <a onClick={() => this.handleViewDetailClick(row)} className='reject-link'>View</a>\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className='reject-claim-container container-fluid'>\r\n                <div className='reject-claim-panel'>\r\n                    {\r\n                        headers && headers.length > 0\r\n                            ? <ReactTable tableHeader={headers} rowData={rows} className='search-claim-data-table'/>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        let renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.SEE_CLAIM_SUPPORT, JSON.parse(localStorage.getItem('userpolicies'))) &&\r\n            checkRenderPermissions(permissions.CAN_SEE_REJECT_CLAIMS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderView();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n}\r\n\r\nexport default RejectClaim;\r\n"]},"metadata":{},"sourceType":"module"}