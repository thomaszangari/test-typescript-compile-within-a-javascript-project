{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\users\\\\ActionAudit\\\\ActionAudit.js\";\n\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport AppToast from \"../../toast\";\nimport AuditSearch from \"../AuditSearch\";\nimport config from \"../../config\";\nimport { UserAction, UserActionCategory } from \"../../UserActionCategory\";\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\nlet ActionAudit = (_dec = inject('playerStore', 'authStore'), _dec(_class = observer(_class = (_temp = class ActionAudit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToastClose = () => {\n      this.props.playerStore.setToast(false);\n    };\n\n    this.onSearchClick = (startDate = '', endDate = '', action = '') => {\n      startDate.setHours(0, 0, 0, 0);\n      startDate = new Date(startDate).toUTCString();\n      endDate.setHours(0, 0, 0, 0);\n      endDate = new Date(endDate).toUTCString();\n      let queryParams = '?';\n\n      if (startDate && startDate !== '') {\n        queryParams += `startDate=${startDate}`;\n      }\n\n      if (endDate && endDate !== '') {\n        if (queryParams.endsWith(\"?\")) queryParams += `endDate=${endDate}`;else queryParams += `&endDate=${endDate}`;\n      }\n\n      if (action && action !== '') {\n        if (queryParams.endsWith(\"?\")) queryParams += `action=${action}`;else queryParams += `&action=${action}`;\n      }\n\n      this.props.playerStore.searchUserAuditActions(queryParams);\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const username = this.props.playerStore.selectedBackofficeUserName;\n    this.props.playerStore.AuditActionsTableHeader = null;\n    this.props.playerStore.AuditActionsTableRows = null;\n    fetch(`${config.SERVER_BASE_URL}/v1/user/${id}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(res => {\n      if (res) {\n        const {\n          firstname,\n          lastname\n        } = res;\n        this.props.playerStore.UserNameTitleText = `User: ${firstname} ${lastname}`;\n      }\n    }).catch(error => {\n      let errorMessage = error.toString();\n    });\n    this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.USER_AUDIT_HISTORY_PAGE, username);\n  }\n\n  renderActionAudit() {\n    const {\n      AuditActionsTableHeader,\n      AuditActionsTableRows,\n      showToast,\n      successMessage,\n      errorMessage\n    } = this.props.playerStore;\n    let Timestamp;\n    const rows = AuditActionsTableRows && AuditActionsTableRows.map((d, index) => {\n      d.idField = index + 1;\n      Timestamp = `${d.timestamp}`;\n      d.date = Timestamp.substring(0, 10);\n      d.time = Timestamp.substring(11, 19);\n      d.actions = `${d.category} : ${d.action}`;\n      d.data = d.comments ? `${d.result} : ${d.comments}` : `${d.result}`;\n      return d;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-container container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-panel player-search-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AuditSearch, Object.assign({\n      tableHeader: AuditActionsTableHeader,\n      userList: rows,\n      handleSearchClick: this.onSearchClick\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }))), AuditActionsTableHeader && rows ? /*#__PURE__*/React.createElement(ReactTable, {\n      tableHeader: AuditActionsTableHeader,\n      rowData: rows,\n      className: \"update-user-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }\n    }) : null, showToast ? /*#__PURE__*/React.createElement(AppToast, {\n      showToast: showToast,\n      message: successMessage ? successMessage : errorMessage,\n      isSuccessMessage: successMessage !== null,\n      handleClose: () => this.handleToastClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }) : null);\n  }\n\n  render() {\n    let renderObj;\n\n    if (true) {\n      renderObj = this.renderActionAudit();\n    } else {\n      renderObj = /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"unauthorized-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, \"You do not have permission to view this page! Please contact your System Administrator!\");\n    }\n\n    return renderObj;\n  }\n\n}, _temp)) || _class) || _class);\nexport default ActionAudit;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/users/ActionAudit/ActionAudit.js"],"names":["React","inject","observer","AppToast","AuditSearch","config","UserAction","UserActionCategory","ReactTable","ActionAudit","Component","constructor","props","handleToastClose","playerStore","setToast","onSearchClick","startDate","endDate","action","setHours","Date","toUTCString","queryParams","endsWith","searchUserAuditActions","componentDidMount","id","match","params","username","selectedBackofficeUserName","AuditActionsTableHeader","AuditActionsTableRows","fetch","SERVER_BASE_URL","method","headers","localStorage","getItem","then","response","json","res","firstname","lastname","UserNameTitleText","catch","error","errorMessage","toString","logAction","PAGE_VIEW","USER_AUDIT_HISTORY_PAGE","renderActionAudit","showToast","successMessage","Timestamp","rows","map","d","index","idField","timestamp","date","substring","time","actions","category","data","comments","result","render","renderObj"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport AppToast from \"../../toast\";\r\nimport AuditSearch from \"../AuditSearch\";\r\nimport config from \"../../config\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore', 'authStore')\r\n@observer\r\nclass ActionAudit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = (this.props.match.params.id);\r\n        const username = this.props.playerStore.selectedBackofficeUserName;\r\n        this.props.playerStore.AuditActionsTableHeader = null;\r\n        this.props.playerStore.AuditActionsTableRows = null;\r\n        fetch(`${config.SERVER_BASE_URL}/v1/user/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res) {\r\n                    const {firstname, lastname} = res;\r\n                    this.props.playerStore.UserNameTitleText = `User: ${firstname} ${lastname}`;\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                let errorMessage = error.toString();\r\n            });\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.USER_AUDIT_HISTORY_PAGE, username);\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.playerStore.setToast(false);\r\n    }\r\n\r\n    onSearchClick = (startDate='', endDate='', action='') => {\r\n\r\n        startDate.setHours(0,0,0,0);\r\n        startDate = new Date(startDate).toUTCString();\r\n        endDate.setHours(0,0,0,0);\r\n        endDate = new Date(endDate).toUTCString();\r\n\r\n        let queryParams = '?';\r\n        if (startDate && startDate !== '') {\r\n            queryParams += `startDate=${startDate}`\r\n        }\r\n        if (endDate && endDate !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `endDate=${endDate}`\r\n            else\r\n                queryParams += `&endDate=${endDate}`\r\n        }\r\n        if (action && action !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `action=${action}`\r\n            else\r\n                queryParams += `&action=${action}`\r\n        }\r\n\r\n        this.props.playerStore.searchUserAuditActions(queryParams);\r\n    }\r\n\r\n    renderActionAudit() {\r\n        const {AuditActionsTableHeader, AuditActionsTableRows, showToast, successMessage, errorMessage} = this.props.playerStore;\r\n        let Timestamp;\r\n        const rows = AuditActionsTableRows && AuditActionsTableRows.map((d, index) => {\r\n            d.idField = index + 1;\r\n            Timestamp = `${d.timestamp}`\r\n            d.date = Timestamp.substring(0, 10)\r\n            d.time = Timestamp.substring(11, 19)\r\n            d.actions = `${d.category} : ${d.action}`\r\n            d.data =  d.comments ? `${d.result} : ${d.comments}` : `${d.result}`\r\n            return d;\r\n        });\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                <div className='player-search-panel player-search-child'>\r\n                    <AuditSearch tableHeader={AuditActionsTableHeader} userList={rows} handleSearchClick={this.onSearchClick} {...this.props}/>\r\n                </div>\r\n                {\r\n                    AuditActionsTableHeader && rows\r\n                        ? <ReactTable tableHeader={AuditActionsTableHeader} rowData={rows} className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n        if (true) {\r\n            renderObj = this.renderActionAudit();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ActionAudit;\r\n"]},"metadata":{},"sourceType":"module"}