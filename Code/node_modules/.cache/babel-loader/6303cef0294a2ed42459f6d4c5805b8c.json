{"ast":null,"code":"const axios = require('axios');\n\nconst makeHttpCall = async options => {\n  try {\n    let response = await axios(options);\n    console.log(response);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getImageType = event => {\n  console.log(event.target.value);\n};\nexport const getDocumentType = event => {\n  console.log(event.target.value);\n};\nexport const toggleHideShow = (setToggle, toggle) => {\n  setToggle(!toggle);\n};\nexport const imageZoom = (imgID, resultID) => {\n  var img, lens, result, cx, cy;\n  img = document.getElementById(imgID);\n  result = document.getElementById(resultID);\n  /*calculate the ratio between result DIV and lens:*/\n\n  cx = result.offsetWidth / lens.offsetWidth;\n  cy = result.offsetHeight / lens.offsetHeight;\n  /*set background properties for the result DIV:*/\n\n  result.style.backgroundImage = \"url('\" + img.src + \"')\";\n  result.style.backgroundSize = img.width * cx + \"px \" + img.height * cy + \"px\";\n  /*execute a function when someone moves the cursor over the image, or the lens:*/\n\n  lens.addEventListener(\"mousemove\", moveLens);\n  img.addEventListener(\"mousemove\", moveLens);\n  /*and also for touch screens:*/\n\n  lens.addEventListener(\"touchmove\", moveLens);\n  img.addEventListener(\"touchmove\", moveLens);\n};","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/components/DisplayDocument/functions.js"],"names":["axios","require","makeHttpCall","options","response","console","log","e","getImageType","event","target","value","getDocumentType","toggleHideShow","setToggle","toggle","imageZoom","imgID","resultID","img","lens","result","cx","cy","document","getElementById","offsetWidth","offsetHeight","style","backgroundImage","src","backgroundSize","width","height","addEventListener","moveLens"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,MAAMC,YAAY,GAAG,MAAOC,OAAP,IAAkB;AAEpC,MAAG;AACH,QAAIC,QAAQ,GAAG,MAAMJ,KAAK,CAACG,OAAD,CAA1B;AACIE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACF,GAHF,CAIC,OAAMG,CAAN,EAAQ;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH;AACJ,CATD;;AAWA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAClCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,MAAN,CAAaC,KAAzB;AAEH,CAHM;AAKP,OAAO,MAAMC,eAAe,GAAIH,KAAD,IAAU;AACrCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,MAAN,CAAaC,KAAzB;AAEH,CAHM;AAIP,OAAO,MAAME,cAAc,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAEjDD,EAAAA,SAAS,CAAC,CAACC,MAAF,CAAT;AACH,CAHM;AAIP,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1C,MAAIC,GAAJ,EAASC,IAAT,EAAeC,MAAf,EAAuBC,EAAvB,EAA2BC,EAA3B;AACAJ,EAAAA,GAAG,GAAGK,QAAQ,CAACC,cAAT,CAAwBR,KAAxB,CAAN;AACAI,EAAAA,MAAM,GAAGG,QAAQ,CAACC,cAAT,CAAwBP,QAAxB,CAAT;AACG;;AACHI,EAAAA,EAAE,GAAGD,MAAM,CAACK,WAAP,GAAqBN,IAAI,CAACM,WAA/B;AACAH,EAAAA,EAAE,GAAGF,MAAM,CAACM,YAAP,GAAsBP,IAAI,CAACO,YAAhC;AACA;;AACAN,EAAAA,MAAM,CAACO,KAAP,CAAaC,eAAb,GAA+B,UAAUV,GAAG,CAACW,GAAd,GAAoB,IAAnD;AACAT,EAAAA,MAAM,CAACO,KAAP,CAAaG,cAAb,GAA+BZ,GAAG,CAACa,KAAJ,GAAYV,EAAb,GAAmB,KAAnB,GAA4BH,GAAG,CAACc,MAAJ,GAAaV,EAAzC,GAA+C,IAA7E;AACA;;AACAH,EAAAA,IAAI,CAACc,gBAAL,CAAsB,WAAtB,EAAmCC,QAAnC;AACAhB,EAAAA,GAAG,CAACe,gBAAJ,CAAqB,WAArB,EAAkCC,QAAlC;AACA;;AACAf,EAAAA,IAAI,CAACc,gBAAL,CAAsB,WAAtB,EAAmCC,QAAnC;AACAhB,EAAAA,GAAG,CAACe,gBAAJ,CAAqB,WAArB,EAAkCC,QAAlC;AAED,CAjBI","sourcesContent":["const axios = require('axios');\r\n\r\n\r\nconst makeHttpCall = async (options) =>{\r\n\r\n   try{ \r\n   let response = await axios(options);\r\n       console.log(response);\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const getImageType = (event) =>{\r\n    console.log(event.target.value);\r\n\r\n}\r\n\r\nexport const getDocumentType = (event) =>{\r\n    console.log(event.target.value);\r\n\r\n}\r\nexport const toggleHideShow = (setToggle, toggle) => {\r\n\r\n    setToggle(!toggle);\r\n}\r\nexport const imageZoom = (imgID, resultID) => {\r\n    var img, lens, result, cx, cy;\r\n    img = document.getElementById(imgID);\r\n    result = document.getElementById(resultID);\r\n       /*calculate the ratio between result DIV and lens:*/\r\n    cx = result.offsetWidth / lens.offsetWidth;\r\n    cy = result.offsetHeight / lens.offsetHeight;\r\n    /*set background properties for the result DIV:*/\r\n    result.style.backgroundImage = \"url('\" + img.src + \"')\";\r\n    result.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\r\n    /*execute a function when someone moves the cursor over the image, or the lens:*/\r\n    lens.addEventListener(\"mousemove\", moveLens);\r\n    img.addEventListener(\"mousemove\", moveLens);\r\n    /*and also for touch screens:*/\r\n    lens.addEventListener(\"touchmove\", moveLens);\r\n    img.addEventListener(\"touchmove\", moveLens);\r\n    \r\n  }"]},"metadata":{},"sourceType":"module"}