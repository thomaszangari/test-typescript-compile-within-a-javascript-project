{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Admin\\\\MFAPolicy\\\\MFAPolicy.js\";\n\nimport React from 'react';\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"./MFAPolicy.css\";\nimport AppTextbox from \"../../AppTextbox\";\nimport { inject, observer } from \"mobx-react\";\nimport AppToast from \"../../toast\";\nimport { checkRenderPermissions } from \"../../helpers\";\nimport { permissions } from \"../../constants\";\nlet MFAPolicy = (_dec = inject('settingsStore'), _dec(_class = observer(_class = (_temp = class MFAPolicy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToastClose = () => {\n      this.props.settingsStore.setToast(false);\n      this.props.history.goBack();\n    };\n\n    this.deleteRule = id => {\n      this.props.settingsStore.deleteMFABypassRule(id);\n      this.setState({\n        isFieldsEdited: true\n      }, () => this.callbackToParent());\n    };\n\n    this.addRule = () => {\n      this.props.settingsStore.addMFABypassRule('Test1', 'Descr1');\n      this.setState({\n        isFieldsEdited: true\n      }, () => this.callbackToParent());\n    };\n\n    this.callbackToParent = () => {\n      const {\n        isFieldsEdited\n      } = this.state;\n      const flag = isFieldsEdited;\n      this.props.onUpdate(flag);\n    };\n\n    this.handleInputChange = (e, stateName, id) => {\n      e.preventDefault();\n      let {\n        inboundRules\n      } = this.props.settingsStore;\n      let inboundRule = inboundRules.find(rule => rule.id === id);\n\n      if (stateName === 'ip') {\n        if (inboundRule) {\n          inboundRule.ip = e.target.value;\n        }\n      } else if (stateName === 'description') {\n        if (inboundRule) {\n          inboundRule.description = e.target.value;\n        }\n      }\n\n      this.props.settingsStore.setMFABypassRules(inboundRules);\n      this.setState({\n        isFieldsEdited: true\n      }, () => this.callbackToParent());\n    };\n\n    this.handleSelectChange = (e, stateName, id) => {\n      e.preventDefault();\n      let {\n        inboundRules\n      } = this.props.settingsStore;\n      let inboundRule = inboundRules.find(rule => rule.id === id);\n\n      if (stateName === 'source') {\n        if (inboundRule) {\n          inboundRule.source = e.target.value;\n\n          if (e.target.value === 'My IP') {\n            inboundRule.ip = this.props.settingsStore.getMyIPAddress();\n          }\n        }\n      }\n\n      this.props.settingsStore.setMFABypassRules(inboundRules);\n      this.setState({\n        isFieldsEdited: true\n      }, () => this.callbackToParent());\n    };\n\n    this.onYes = () => {\n      this.props.settingsStore.saveMFABypassRules();\n    };\n\n    this.handleSubmit = () => {\n      this.props.settingsStore.setShowConfirmSaveModal(true);\n    };\n\n    this.onSubmitCancel = () => {\n      this.props.settingsStore.setShowConfirmSaveModal(false);\n    };\n\n    this.onRejectCancel = () => {\n      this.setState({\n        showCancelPopup: false\n      }, () => this.props.handlePopup(false));\n    };\n\n    this.onCancel = e => {\n      e.preventDefault();\n      this.props.settingsStore.discardMFABypassRuleChanges();\n      this.props.history.goBack();\n    };\n\n    this.handleCancel = () => {\n      if (this.state.isFieldsEdited) this.setState({\n        showCancelPopup: true\n      });else this.props.history.goBack();\n    };\n\n    this.isIPAddressValid = IPAddress => {\n      let blocks = IPAddress.split(\".\");\n\n      if (blocks.length === 4 && blocks[3] !== '') {\n        for (let i = 0; i < blocks.length; i++) {\n          if (Number(blocks[i]) < 0 || Number(blocks[i]) > 255) {\n            return false;\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.isDescriptionValid = description => {\n      return description && description.trim().length > 0;\n    };\n\n    this.state = {\n      sources: ['Custom', 'My IP'],\n      isFieldsEdited: false,\n      showCancelPopup: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.settingsStore.getMFABypassRules();\n  }\n\n  renderMFAPolicy() {\n    const {\n      sources,\n      showCancelPopup\n    } = this.state;\n    const {\n      showBackConfirm\n    } = this.props;\n    const {\n      inboundRules,\n      showConfirmSaveModal,\n      showToast,\n      successMessage,\n      errorMessage\n    } = this.props.settingsStore; // Disable [Save Rules] if needed\n\n    let isDisabled = true;\n    let rule;\n\n    for (rule of inboundRules) {\n      isDisabled = !this.isIPAddressValid(rule.ip) || !this.isDescriptionValid(rule.description);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-details-container container-fluid \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, showToast ? /*#__PURE__*/React.createElement(AppToast, {\n      showToast: showToast,\n      message: successMessage ? successMessage : errorMessage,\n      isSuccessMessage: successMessage !== null,\n      handleClose: () => this.handleToastClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(Modal, {\n      show: showCancelPopup || showBackConfirm,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-details-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, \"Are you sure you would like to cancel? All unsaved changes will be lost.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => this.onRejectCancel(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => this.onCancel(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Yes\"))), /*#__PURE__*/React.createElement(Modal, {\n      show: showConfirmSaveModal,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-details-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, \"Are you sure you would like to Save?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => this.onSubmitCancel(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.onYes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, \"Yes\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-details-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inbound-rule-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 inbound-rule-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, \"Source\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 inbound-rule-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, \"IP Address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 inbound-rule-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, \"Description\")), inboundRules.map(rule => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 rule-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        value: rule.source,\n        className: \"form-control\",\n        onChange: e => this.handleSelectChange(e, 'source', rule.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 41\n        }\n      }, sources.map(source => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: source,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 60\n          }\n        }, source);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AppTextbox, {\n        controlId: \"description\",\n        value: rule.ip || '',\n        disabled: rule.source === 'My IP',\n        onChange: e => this.handleInputChange(e, 'ip', rule.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 41\n        }\n      }), !this.isIPAddressValid(rule.ip) ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-invalid-email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 51\n        }\n      }, \"Invalid IP Address\") : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AppTextbox, {\n        controlId: \"description\",\n        value: rule.description,\n        onChange: e => this.handleInputChange(e, 'description', rule.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 41\n        }\n      }), !this.isDescriptionValid(rule.description) ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-invalid-email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 51\n        }\n      }, \"Enter a description\") : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: e => this.deleteRule(rule.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 41\n        }\n      }, \"Delete\")));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => this.addRule(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 33\n      }\n    }, \"Add Rule\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 button-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      onClick: e => this.handleCancel(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      disabled: isDisabled,\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 33\n      }\n    }, \"Save Rules\"))))));\n  }\n\n  render() {\n    var renderObj;\n\n    if (checkRenderPermissions(permissions.CAN_EDIT_MFA_BYPASS_RULES, JSON.parse(localStorage.getItem('userpolicies')))) {\n      renderObj = this.renderMFAPolicy();\n    } else {\n      renderObj = /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"unauthorized-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, \"You do not have permission to view this page! Please contact your System Administrator!\");\n    }\n\n    return renderObj;\n  }\n\n}, _temp)) || _class) || _class);\nexport default MFAPolicy;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Admin/MFAPolicy/MFAPolicy.js"],"names":["React","Button","Modal","AppTextbox","inject","observer","AppToast","checkRenderPermissions","permissions","MFAPolicy","Component","constructor","props","handleToastClose","settingsStore","setToast","history","goBack","deleteRule","id","deleteMFABypassRule","setState","isFieldsEdited","callbackToParent","addRule","addMFABypassRule","state","flag","onUpdate","handleInputChange","e","stateName","preventDefault","inboundRules","inboundRule","find","rule","ip","target","value","description","setMFABypassRules","handleSelectChange","source","getMyIPAddress","onYes","saveMFABypassRules","handleSubmit","setShowConfirmSaveModal","onSubmitCancel","onRejectCancel","showCancelPopup","handlePopup","onCancel","discardMFABypassRuleChanges","handleCancel","isIPAddressValid","IPAddress","blocks","split","length","i","Number","isDescriptionValid","trim","sources","componentDidMount","getMFABypassRules","renderMFAPolicy","showBackConfirm","showConfirmSaveModal","showToast","successMessage","errorMessage","isDisabled","map","render","renderObj","CAN_EDIT_MFA_BYPASS_RULES","JSON","parse","localStorage","getItem"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport \"./MFAPolicy.css\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport AppToast from \"../../toast\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions} from \"../../constants\";\r\n\r\n@inject('settingsStore')\r\n@observer\r\nclass MFAPolicy extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sources: ['Custom', 'My IP'],\r\n            isFieldsEdited: false,\r\n            showCancelPopup: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.settingsStore.getMFABypassRules();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.settingsStore.setToast(false);\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    deleteRule = (id) => {\r\n        this.props.settingsStore.deleteMFABypassRule(id);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    addRule = () => {\r\n        this.props.settingsStore.addMFABypassRule('Test1', 'Descr1')\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    callbackToParent = () => {\r\n        const {isFieldsEdited} = this.state;\r\n        const flag = isFieldsEdited;\r\n        this.props.onUpdate(flag);\r\n    }\r\n\r\n    handleInputChange = (e, stateName, id) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let {inboundRules} = this.props.settingsStore;\r\n\r\n        let inboundRule = inboundRules.find(rule => rule.id === id);\r\n\r\n        if (stateName === 'ip') {\r\n            if (inboundRule) {\r\n                inboundRule.ip = e.target.value;\r\n            }\r\n        } else if (stateName === 'description') {\r\n            if (inboundRule) {\r\n                inboundRule.description = e.target.value;\r\n            }\r\n        }\r\n\r\n        this.props.settingsStore.setMFABypassRules(inboundRules);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    handleSelectChange = (e, stateName, id) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let {inboundRules} = this.props.settingsStore;\r\n\r\n        let inboundRule = inboundRules.find(rule => rule.id === id);\r\n\r\n        if (stateName === 'source') {\r\n            if (inboundRule) {\r\n                inboundRule.source = e.target.value;\r\n                if (e.target.value === 'My IP') {\r\n                    inboundRule.ip = this.props.settingsStore.getMyIPAddress();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.props.settingsStore.setMFABypassRules(inboundRules);\r\n        this.setState({isFieldsEdited: true}, () => this.callbackToParent());\r\n    }\r\n\r\n    /**\r\n     * Saves all the Bypass Rules\r\n     */\r\n    onYes = () => {\r\n        this.props.settingsStore.saveMFABypassRules();\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.settingsStore.setShowConfirmSaveModal(true);\r\n    }\r\n\r\n    onSubmitCancel = () => {\r\n        this.props.settingsStore.setShowConfirmSaveModal(false)\r\n    }\r\n\r\n    onRejectCancel = () => {\r\n        this.setState({showCancelPopup: false}, () => this.props.handlePopup(false));\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        e.preventDefault();\r\n        this.props.settingsStore.discardMFABypassRuleChanges();\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleCancel = () => {\r\n        if (this.state.isFieldsEdited)\r\n            this.setState({showCancelPopup: true});\r\n        else\r\n            this.props.history.goBack();\r\n    }\r\n\r\n    isIPAddressValid = (IPAddress) => {\r\n        let blocks = IPAddress.split(\".\");\r\n        if (blocks.length === 4 && blocks[3] !== '') {\r\n            for (let i = 0; i < blocks.length; i++) {\r\n                if (Number(blocks[i]) < 0 || Number(blocks[i]) > 255) {\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isDescriptionValid = (description) => {\r\n        return description && description.trim().length > 0;\r\n    }\r\n\r\n    renderMFAPolicy() {\r\n\r\n        const {sources, showCancelPopup} = this.state;\r\n        const {showBackConfirm} = this.props;\r\n        const {inboundRules, showConfirmSaveModal, showToast, successMessage, errorMessage} = this.props.settingsStore;\r\n\r\n        // Disable [Save Rules] if needed\r\n        let isDisabled = true;\r\n        let rule;\r\n        for (rule of inboundRules) {\r\n            isDisabled = !this.isIPAddressValid(rule.ip) || !this.isDescriptionValid(rule.description)\r\n        }\r\n\r\n        return (\r\n\r\n            <div className='player-details-container container-fluid '>\r\n                {showToast\r\n                    ?\r\n                    <AppToast showToast={showToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }\r\n                <Modal show={showCancelPopup || showBackConfirm} centered={true}>\r\n                    <Modal.Body>\r\n                        <div className='player-details-label'>\r\n                            Are you sure you would like to cancel? All unsaved changes will be lost.\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={(e) => this.onRejectCancel(e)}>No</Button>\r\n                        <Button variant='primary' onClick={(e) => this.onCancel(e)}>Yes</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={showConfirmSaveModal} centered={true}>\r\n                    <Modal.Body>\r\n                        <div className='player-details-label'>\r\n                            Are you sure you would like to Save?\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={(e) => this.onSubmitCancel(e)}>No</Button>\r\n                        <Button variant='primary' onClick={() => this.onYes()}>Yes</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <div className='player-details-panel'>\r\n                    <div className='inbound-rule-container'>\r\n                        <div className='row'>\r\n                            <div className='col-3 inbound-rule-label'>Source</div>\r\n                            <div className='col-4 inbound-rule-label'>IP Address</div>\r\n                            <div className='col-4 inbound-rule-label'>Description</div>\r\n                        </div>\r\n                        {\r\n                            inboundRules.map(rule => {\r\n                                return <div className='row'>\r\n                                    <div className='col-3 rule-select'>\r\n                                        <select value={rule.source} className='form-control'\r\n                                                onChange={(e) => this.handleSelectChange(e, 'source', rule.id)}>\r\n                                            {\r\n                                                sources.map(source => {\r\n                                                    return <option value={source}>{source}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <AppTextbox controlId='description' value={rule.ip || ''}\r\n                                                    disabled={(rule.source === 'My IP')}\r\n                                                    onChange={(e) => this.handleInputChange(e, 'ip', rule.id)}/>\r\n                                        {\r\n                                            !this.isIPAddressValid(rule.ip)\r\n                                                ? <div className='player-invalid-email'>Invalid IP Address</div>\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <AppTextbox controlId='description' value={rule.description}\r\n                                                    onChange={(e) => this.handleInputChange(e, 'description', rule.id)}/>\r\n                                        {\r\n                                            !this.isDescriptionValid(rule.description)\r\n                                                ? <div className='player-invalid-email'>Enter a description</div>\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className='col-1'>\r\n                                        <Button variant='danger' onClick={(e) => this.deleteRule(rule.id)}>\r\n                                            Delete\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <Button variant='primary' onClick={(e) => this.addRule(e)}>\r\n                                    Add Rule\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-3 button-panel'>\r\n                                <Button variant='warning' onClick={(e) => this.handleCancel(e)}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button variant='primary' disabled={isDisabled} onClick={(e) => this.handleSubmit(e)}>\r\n                                    Save Rules\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_EDIT_MFA_BYPASS_RULES, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderMFAPolicy();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MFAPolicy;\r\n"]},"metadata":{},"sourceType":"module"}