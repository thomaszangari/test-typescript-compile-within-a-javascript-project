{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Player\\\\SearchBar\\\\index.js\";\n\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport AppTextbox from \"../../AppTextbox\";\nimport { inject } from \"mobx-react\";\nlet PlayerSearch = (_dec = inject('playerStore'), _dec(_class = (_temp = class PlayerSearch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (e, stateName) => {\n      if (stateName === 'firstName' || stateName === 'lastName') {\n        const regExp = /^[A-Za-z]+$/;\n\n        if (e.target.value === '' || regExp.test(e.target.value)) {\n          this.setState({\n            [stateName]: e.target.value\n          });\n        }\n      } else if (stateName === 'email') {\n        const isValid = e.target.value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        this.setState({\n          [stateName]: e.target.value,\n          isValidEmail: !!isValid\n        });\n      } else if (stateName === 'phone') {\n        const regExp = /^[0-9\\b]+$/;\n\n        if (e.target.value === '' || regExp.test(e.target.value)) {\n          this.setState({\n            [stateName]: e.target.value,\n            isValidPhone: e.target.value.length === 10\n          });\n        }\n      } else {\n        this.setState({\n          [stateName]: e.target.value\n        });\n      }\n    };\n\n    this.onSearch = () => {\n      const {\n        firstName,\n        lastName,\n        email,\n        phone,\n        playerId\n      } = this.state;\n      localStorage.setItem('searchFirstName', firstName);\n      localStorage.setItem('searchLastName', lastName);\n      localStorage.setItem('searchPhone', phone);\n      localStorage.setItem('searchEmail', email);\n      localStorage.setItem('playerId', playerId);\n      this.props.handleSearchClick(firstName, lastName, phone, email, playerId);\n    };\n\n    this.onClear = () => {\n      this.setState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        playerId: ''\n      }, () => this.props.playerStore.clearPlayerSearchResults());\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      DOB: '',\n      isValidEmail: false,\n      isValidPhone: false,\n      isValidZip: false,\n      startDate: null,\n      playerId: ''\n    };\n  }\n\n  componentDidMount() {\n    const firstName = localStorage.getItem('searchFirstName');\n    const lastName = localStorage.getItem('searchLastName');\n    const phone = localStorage.getItem('phone');\n    const email = localStorage.getItem('email');\n    const playerId = localStorage.getItem('playerId');\n\n    if (firstName || lastName || phone || email || playerId) {\n      localStorage.removeItem('searchFirstName');\n      localStorage.removeItem('searchLastName');\n      localStorage.removeItem('phone');\n      localStorage.removeItem('email');\n      localStorage.removeItem('playerId');\n      this.setState({\n        firstName: firstName || '',\n        lastName: lastName || '',\n        email: email || '',\n        phone: phone || '',\n        playerId: playerId || ''\n      }, () => this.onSearch());\n    }\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      phone,\n      isValidEmail,\n      isValidZip,\n      isValidPhone,\n      playerId\n    } = this.state;\n    let isDisabled = true; // if((firstName || lastName || ssn || zipcode || email || startDate) && isValidEmail && (zipcode.length === 4 || zipcode.length === 0)) {\n\n    if (email) {\n      isDisabled = !isValidEmail;\n    } else if (phone) {\n      isDisabled = !isValidPhone;\n    } else if (firstName || lastName || playerId) {\n      isDisabled = false;\n    }\n\n    const {\n      tableHeader,\n      userList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-criteria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"First Name \",\n      value: firstName,\n      onChange: e => this.handleInputChange(e, 'firstName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"Last Name \",\n      value: lastName,\n      onChange: e => this.handleInputChange(e, 'lastName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"Phone\",\n      value: phone,\n      maxlength: \"10\",\n      onChange: e => this.handleInputChange(e, 'phone'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }), !isValidPhone && phone.length ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-invalid-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 35\n      }\n    }, \"Phone should be 10 digit\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => this.handleInputChange(e, 'email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), !isValidEmail && email.length ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-invalid-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 35\n      }\n    }, \"Invalid Email\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: isDisabled,\n      className: \"player-search-btn\",\n      onClick: () => this.onSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"player-search-btn\",\n      onClick: () => this.onClear(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Player ID\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"Player ID\",\n      value: playerId,\n      onChange: e => this.handleInputChange(e, 'playerId'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}, _temp)) || _class);\nexport default PlayerSearch;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Player/SearchBar/index.js"],"names":["React","Button","AppTextbox","inject","PlayerSearch","Component","constructor","props","handleInputChange","e","stateName","regExp","target","value","test","setState","isValid","match","isValidEmail","isValidPhone","length","onSearch","firstName","lastName","email","phone","playerId","state","localStorage","setItem","handleSearchClick","onClear","playerStore","clearPlayerSearchResults","DOB","isValidZip","startDate","componentDidMount","getItem","removeItem","render","isDisabled","tableHeader","userList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport {inject} from \"mobx-react\";\r\n\r\n@inject('playerStore')\r\nclass PlayerSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            DOB: '',\r\n            isValidEmail: false,\r\n            isValidPhone: false,\r\n            isValidZip: false,\r\n            startDate: null,\r\n            playerId: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const firstName = localStorage.getItem('searchFirstName');\r\n        const lastName = localStorage.getItem('searchLastName');\r\n        const phone = localStorage.getItem('phone');\r\n        const email = localStorage.getItem('email');\r\n        const playerId = localStorage.getItem('playerId');\r\n\r\n        if(firstName || lastName || phone || email || playerId) {\r\n\r\n            localStorage.removeItem('searchFirstName');\r\n            localStorage.removeItem('searchLastName');\r\n            localStorage.removeItem('phone');\r\n            localStorage.removeItem('email');\r\n            localStorage.removeItem('playerId');\r\n            this.setState({\r\n                    firstName: firstName || '',\r\n                    lastName: lastName || '',\r\n                    email: email || '',\r\n                    phone: phone || '',\r\n                    playerId: playerId || ''\r\n                }, () =>this.onSearch()\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else if (stateName === 'email') {\r\n            const isValid = e.target.value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n            this.setState({[stateName]: e.target.value, isValidEmail: !!isValid});\r\n        } else if (stateName === 'phone') {\r\n            const regExp = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value, isValidPhone: e.target.value.length === 10})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {firstName, lastName, email, phone, playerId} = this.state;\r\n\r\n        localStorage.setItem('searchFirstName', firstName);\r\n        localStorage.setItem('searchLastName', lastName);\r\n        localStorage.setItem('searchPhone', phone);\r\n        localStorage.setItem('searchEmail', email);\r\n        localStorage.setItem('playerId', playerId);\r\n\r\n        this.props.handleSearchClick(firstName, lastName, phone, email, playerId);\r\n    }\r\n\r\n    onClear = () => {\r\n        this.setState({firstName: '',  lastName: '', email: '', phone: '', playerId: ''},() => this.props.playerStore.clearPlayerSearchResults());\r\n    }\r\n\r\n    render() {\r\n        const {firstName, lastName, email, phone, isValidEmail, isValidZip, isValidPhone, playerId} = this.state;\r\n        let isDisabled = true;\r\n        // if((firstName || lastName || ssn || zipcode || email || startDate) && isValidEmail && (zipcode.length === 4 || zipcode.length === 0)) {\r\n        if (email) {\r\n            isDisabled = !isValidEmail;\r\n        } else if (phone) {\r\n            isDisabled = !(isValidPhone);\r\n        } else if ((firstName || lastName) || playerId) {\r\n            isDisabled = false\r\n        }\r\n        const {tableHeader, userList} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='player-search-label'>First Name</div>\r\n                        <AppTextbox type='text' placeholder='First Name ' value={firstName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='player-search-label'>Last Name</div>\r\n                        <AppTextbox type='text' placeholder='Last Name ' value={lastName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='player-search-label'>Phone</div>\r\n                        <AppTextbox type='text' placeholder='Phone' value={phone} maxlength='10'\r\n                                    onChange={(e) => this.handleInputChange(e, 'phone')}/>\r\n                        {\r\n                            !isValidPhone && phone.length\r\n                                ? <div className='player-invalid-email'>Phone should be 10 digit</div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <div className='player-search-label'>Email</div>\r\n                        <AppTextbox type='text' placeholder='Email' value={email}\r\n                                    onChange={(e) => this.handleInputChange(e, 'email')}/>\r\n                        {\r\n                            !isValidEmail && email.length\r\n                                ? <div className='player-invalid-email'>Invalid Email</div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <Button disabled={isDisabled} className='player-search-btn' onClick={() => this.onSearch()}>\r\n                            Search\r\n                        </Button>\r\n                        <Button className='player-search-btn' onClick={() => this.onClear()}>\r\n                            Clear\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className='player-search-id'>\r\n                    <div className='player-search-label'>Player ID</div>\r\n                    <AppTextbox type='text' placeholder='Player ID' value={playerId}\r\n                                onChange={(e) => this.handleInputChange(e, 'playerId')}/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerSearch;\r\n\r\n"]},"metadata":{},"sourceType":"module"}