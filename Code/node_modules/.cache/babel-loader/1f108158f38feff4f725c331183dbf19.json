{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport React from \"react\";\nimport { toJS, observable } from 'mobx';\nexport let MiscellaneousStore = (_class = (_temp = class MiscellaneousStore {\n  // Cron JOB error data\n  constructor(rootStore) {\n    this.rootStore = null;\n\n    _initializerDefineProperty(this, \"notificationErrorList\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"showNotificationToast\", _descriptor2, this);\n\n    this.rootStore = rootStore;\n  }\n\n  setFailedJobDetails(data) {\n    if (this.notificationErrorList) {\n      this.notificationErrorList.push(data);\n    } else {\n      this.notificationErrorList = [data];\n    }\n\n    this.showNotificationToast = true;\n  }\n\n  toggleNotification(data) {\n    debugger;\n\n    if (this.notificationErrorList) {\n      const cronJobData = JSON.parse(JSON.stringify(toJS(this.notificationErrorList)));\n      const index = cronJobData.findIndex(d => d.id === data.id);\n      cronJobData.splice(index, 1);\n      this.notificationErrorList = cronJobData;\n      this.showNotificationToast = cronJobData.length !== 0;\n    }\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"notificationErrorList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"showNotificationToast\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n})), _class);","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/store/MiscellaneousStore.js"],"names":["React","toJS","observable","MiscellaneousStore","constructor","rootStore","setFailedJobDetails","data","notificationErrorList","push","showNotificationToast","toggleNotification","cronJobData","JSON","parse","stringify","index","findIndex","d","id","splice","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,MAA/B;AAEA,WAAaC,kBAAb,sBAAO,MAAMA,kBAAN,CAAyB;AAI5B;AAIAC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SANvBA,SAMuB,GANX,IAMW;;AAAA;;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AAEDC,EAAAA,mBAAmB,CAACC,IAAD,EAAO;AACtB,QAAG,KAAKC,qBAAR,EAA+B;AAC3B,WAAKA,qBAAL,CAA2BC,IAA3B,CAAgCF,IAAhC;AACH,KAFD,MAEO;AACH,WAAKC,qBAAL,GAA6B,CAACD,IAAD,CAA7B;AACH;;AACD,SAAKG,qBAAL,GAA6B,IAA7B;AACH;;AAEDC,EAAAA,kBAAkB,CAACJ,IAAD,EAAO;AACrB;;AACA,QAAG,KAAKC,qBAAR,EAA+B;AAC3B,YAAMI,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAed,IAAI,CAAC,KAAKO,qBAAN,CAAnB,CAAX,CAApB;AACA,YAAMQ,KAAK,GAAGJ,WAAW,CAACK,SAAZ,CAAsBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASZ,IAAI,CAACY,EAAzC,CAAd;AACAP,MAAAA,WAAW,CAACQ,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACA,WAAKR,qBAAL,GAA6BI,WAA7B;AACA,WAAKF,qBAAL,GAA6BE,WAAW,CAACS,MAAZ,KAAuB,CAApD;AACH;AACJ;;AA9B2B,CAAhC,+FAKKnB,UALL;AAAA;AAAA;AAAA;AAAA;AAAA,WAKwC,EALxC;AAAA;AAAA,yFAMKA,UANL;AAAA;AAAA;AAAA;AAAA;AAAA,WAMwC,KANxC;AAAA;AAAA","sourcesContent":["import React from \"react\";\r\nimport {toJS, observable} from 'mobx';\r\n\r\nexport class MiscellaneousStore {\r\n\r\n    rootStore = null;\r\n\r\n    // Cron JOB error data\r\n    @observable notificationErrorList = [];\r\n    @observable showNotificationToast = false;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    setFailedJobDetails(data) {\r\n        if(this.notificationErrorList) {\r\n            this.notificationErrorList.push(data)\r\n        } else {\r\n            this.notificationErrorList = [data];\r\n        }\r\n        this.showNotificationToast = true;\r\n    }\r\n\r\n    toggleNotification(data) {\r\n        debugger\r\n        if(this.notificationErrorList) {\r\n            const cronJobData = JSON.parse(JSON.stringify(toJS(this.notificationErrorList)));\r\n            const index = cronJobData.findIndex(d => d.id === data.id);\r\n            cronJobData.splice(index, 1);\r\n            this.notificationErrorList = cronJobData;\r\n            this.showNotificationToast = cronJobData.length !== 0;\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}