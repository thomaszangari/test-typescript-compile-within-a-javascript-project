{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Player\\\\Tabs\\\\EventHistory.js\";\n\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport './Tabs.css';\nimport EventSearch from \"../../Event/SearchBar\";\nimport moment from \"moment\";\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\nlet EventHistory = (_dec = inject('playerStore'), _dec(_class = observer(_class = (_temp = class EventHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearchClick = (queryDateRangeStart = '', queryDateRangeEnd = '') => {\n      const startDate = new Date(queryDateRangeStart);\n      const momentStartDate = moment(startDate).format();\n      const endDate = new Date(queryDateRangeEnd);\n      endDate.setHours(23, 59, 59);\n      const momentEndDate = moment(endDate).format();\n      let queryParams = '?';\n\n      if (queryDateRangeStart && queryDateRangeStart !== '') {\n        queryParams += `queryDateRangeStart=${momentStartDate}`;\n      }\n\n      if (queryDateRangeEnd && queryDateRangeEnd !== '') {\n        if (queryParams.endsWith(\"?\")) queryParams += `queryDateRangeEnd=${momentEndDate}`;else queryParams += `&queryDateRangeEnd=${momentEndDate}`;\n      }\n\n      this.props.playerStore.searchEvents(queryParams);\n    };\n\n    this.onFilterClick = () => {\n      this.props.playerStore.filterEventHistoryResult();\n    };\n\n    this.handleToastClose = () => {\n      this.props.playerStore.setEventHistoryToast(false);\n    };\n\n    this.state = {\n      eventHistoryList: [],\n      tableHeader: [],\n      showToast: false\n    };\n  }\n  /*    componentDidMount() {\r\n          /!*let startDate = new Date();\r\n          startDate.setDate(startDate.getDate() - 31)\r\n          this.onSearchClick(startDate, new Date());*!/\r\n      }*/\n\n\n  render() {\n    const {\n      eventHistoryTableHeader,\n      eventHistoryTableRows,\n      showEventHistoryToast,\n      successMessage,\n      errorMessage\n    } = this.props.playerStore;\n    let Timestamp;\n    let rows = eventHistoryTableRows && eventHistoryTableRows.map((d, index) => {\n      d.idField = index + 1;\n      Timestamp = `${d.eventTimestamp}`;\n      d.date = Timestamp.substring(0, 10);\n      d.time = Timestamp.substring(11, 19);\n      return d;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-container container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-search-panel player-search-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EventSearch, Object.assign({\n      tableHeader: eventHistoryTableHeader,\n      userList: rows,\n      handleSearchClick: this.onSearchClick,\n      handleFilterClick: this.onFilterClick\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }))), eventHistoryTableHeader && rows ? /*#__PURE__*/React.createElement(ReactTable, {\n      tableHeader: eventHistoryTableHeader,\n      rowData: rows,\n      className: \"update-user-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }\n    }) : null);\n  }\n\n}, _temp)) || _class) || _class);\nexport default EventHistory;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Player/Tabs/EventHistory.js"],"names":["React","inject","observer","EventSearch","moment","ReactTable","EventHistory","Component","constructor","props","onSearchClick","queryDateRangeStart","queryDateRangeEnd","startDate","Date","momentStartDate","format","endDate","setHours","momentEndDate","queryParams","endsWith","playerStore","searchEvents","onFilterClick","filterEventHistoryResult","handleToastClose","setEventHistoryToast","state","eventHistoryList","tableHeader","showToast","render","eventHistoryTableHeader","eventHistoryTableRows","showEventHistoryToast","successMessage","errorMessage","Timestamp","rows","map","d","index","idField","eventTimestamp","date","substring","time"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './Tabs.css';\r\nimport EventSearch from \"../../Event/SearchBar\";\r\nimport moment from \"moment\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass EventHistory extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            eventHistoryList: [],\r\n            tableHeader: [],\r\n            showToast: false\r\n        }\r\n    }\r\n\r\n/*    componentDidMount() {\r\n        /!*let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 31)\r\n        this.onSearchClick(startDate, new Date());*!/\r\n    }*/\r\n\r\n    onSearchClick = (queryDateRangeStart = '', queryDateRangeEnd = '') => {\r\n\r\n        const startDate = new Date(queryDateRangeStart);\r\n        const momentStartDate = moment(startDate).format();\r\n        const endDate = new Date(queryDateRangeEnd);\r\n        endDate.setHours(23, 59, 59);\r\n        const momentEndDate = moment(endDate).format();\r\n        \r\n        let queryParams = '?';\r\n        if (queryDateRangeStart && queryDateRangeStart !== '') {\r\n            queryParams += `queryDateRangeStart=${momentStartDate}`\r\n        }\r\n        if (queryDateRangeEnd && queryDateRangeEnd !== '') {\r\n            if (queryParams.endsWith(\"?\"))\r\n                queryParams += `queryDateRangeEnd=${momentEndDate}`\r\n            else\r\n                queryParams += `&queryDateRangeEnd=${momentEndDate}`\r\n        }\r\n\r\n        this.props.playerStore.searchEvents(queryParams);\r\n    }\r\n\r\n    onFilterClick = () => {\r\n        this.props.playerStore.filterEventHistoryResult();\r\n    }\r\n\r\n    handleToastClose = () => {\r\n        this.props.playerStore.setEventHistoryToast(false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {eventHistoryTableHeader, eventHistoryTableRows, showEventHistoryToast, successMessage, errorMessage} = this.props.playerStore;\r\n        let Timestamp;\r\n        let rows = eventHistoryTableRows && eventHistoryTableRows.map((d, index) => {\r\n            d.idField = index + 1;\r\n            Timestamp = `${d.eventTimestamp}`\r\n            d.date = Timestamp.substring(0, 10)\r\n            d.time = Timestamp.substring(11, 19)\r\n            return d;\r\n        });\r\n        return (\r\n            <div className='player-search-container container-fluid'>\r\n                <div className='player-search-panel player-search-child'>\r\n                    <EventSearch tableHeader={eventHistoryTableHeader} userList={rows}\r\n                                  handleSearchClick={this.onSearchClick} handleFilterClick={this.onFilterClick} {...this.props}/>\r\n                </div>\r\n                {\r\n                    eventHistoryTableHeader && rows\r\n                        ? <ReactTable tableHeader={eventHistoryTableHeader} rowData={rows}\r\n                                          className='update-user-table'/>\r\n                        : null\r\n                }\r\n                {/*{showEventHistoryToast\r\n                    ?\r\n                    <AppToast showToast={showEventHistoryToast}\r\n                              message={successMessage ? successMessage : errorMessage}\r\n                              isSuccessMessage={successMessage !== null}\r\n                              handleClose={() => this.handleToastClose()}/>\r\n                    : null\r\n                }*/}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default EventHistory;\r\n"]},"metadata":{},"sourceType":"module"}