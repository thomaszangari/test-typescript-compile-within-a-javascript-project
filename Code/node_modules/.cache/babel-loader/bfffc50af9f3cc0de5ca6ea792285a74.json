{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\Finance\\\\ACHActivityBatchDetail\\\\ACHActivityBatchDetail.js\";\n\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { UserAction, UserActionCategory } from \"../../UserActionCategory\";\nimport { toJS } from \"mobx\";\nimport moment from \"moment\";\nimport { checkRenderPermissions } from \"../../helpers\";\nimport { permissions, timeOfDayFormat } from \"../../constants\";\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\nimport './ACHActivityBatchDetail.css';\nlet ACHActivityBatchDetail = (_dec = inject('claimStore', 'playerStore'), _dec(_class = observer(_class = (_temp = class ACHActivityBatchDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePaymentDetailClick = paymentData => {\n      this.props.claimStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: ' + paymentData.transactionId, '');\n      this.props.claimStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\n    };\n\n    this.navigateToPaymentDetails = () => {\n      const id = this.props.claimStore.selectedClaimId;\n      this.props.history.push(`/claim/${id}/paymenthistory`);\n    };\n\n    this.handleViewDetailClick = row => {\n      const target = row.transactionid;\n      const playerName = `${row.playerfirstname} ${row.playerlastname}`;\n      this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SHOW_BATCH_FILE_PII, 'Transaction ID: ' + target, 'Player Name: ' + playerName);\n      this.setState({\n        showPopup: true,\n        selectedBatch: row\n      });\n    };\n\n    this.onModalClose = () => {\n      this.setState({\n        showPopup: false,\n        selectedBatch: null\n      });\n    };\n\n    this.state = {\n      showPopup: false,\n      selectedBatch: null\n    };\n  }\n\n  componentDidMount() {\n    if (checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\n      this.props.claimStore.fetchBatchDetails();\n    }\n  }\n\n  renderBatchDetails() {\n    const {\n      batchDetails,\n      selectedBatchId\n    } = this.props.claimStore;\n    const {\n      showPopup,\n      selectedBatch\n    } = this.state;\n\n    if (batchDetails && selectedBatchId) {\n      const data = toJS(this.props.claimStore.batchDetails);\n      const {\n        selectedBatchDetails,\n        batchDetailsTableHeader,\n        batchDetailsTableRows\n      } = data;\n      const {\n        filecreationdatetime,\n        filesubmissiondatetime,\n        effectiveentrydate,\n        settlementdate,\n        status,\n        amount\n      } = selectedBatchDetails;\n\n      if (checkRenderPermissions(permissions.CAN_SEE_BATCH_MASKED_DETAIL, JSON.parse(localStorage.getItem('userpolicies')))) {\n        batchDetailsTableHeader.push({\n          key: 'view',\n          label: ''\n        });\n        batchDetailsTableRows.forEach((row, index) => {\n          row.view = /*#__PURE__*/React.createElement(\"a\", {\n            key: index,\n            className: \"batch-detail-link\",\n            onClick: () => this.handleViewDetailClick(row),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 32\n            }\n          }, \"Show Details\");\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-container container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, \"File Creation Date #\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }\n      }, moment(filecreationdatetime).format('MM-DD-YYYY'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, \"File Creation Time\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, moment(filecreationdatetime).format(timeOfDayFormat))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, \"Date Submitted\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, moment(filesubmissiondatetime).format('MM-DD-YYYY'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, \"Time Submitted\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }, moment(filesubmissiondatetime).format(timeOfDayFormat))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, \"Effective Entry Date\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, effectiveentrydate && moment(effectiveentrydate).format(timeOfDayFormat))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      }, \"Settlement Date\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }, settlementdate && moment(settlementdate).format(timeOfDayFormat))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }, status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"batch-detail-top-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, \"$\", amount)))), batchDetailsTableHeader && batchDetailsTableRows ? /*#__PURE__*/React.createElement(ReactTable, {\n        tableHeader: batchDetailsTableHeader,\n        rowData: batchDetailsTableRows,\n        className: \"batch-detail-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 31\n        }\n      }) : null, /*#__PURE__*/React.createElement(Modal, {\n        show: showPopup,\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, \" Account Information \")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-unmasked-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }, \"Routing Number: \", selectedBatch && selectedBatch.routingnumber), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-unmasked-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, \"Account Number: \", selectedBatch && selectedBatch.accountnumber)), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: e => this.onModalClose(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      }, \"Close\"))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"batch-detail-container container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-data-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, \"Error loading data...go back\"));\n  }\n\n  render() {\n    let renderObj;\n\n    if (checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\n      renderObj = this.renderBatchDetails();\n    } else {\n      renderObj = /*#__PURE__*/React.createElement(\"h3\", {\n        class: \"unauthorized-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, \"You do not have permission to view this page! Please contact your System Administrator!\");\n    }\n\n    return renderObj;\n  }\n\n}, _temp)) || _class) || _class);\nexport default ACHActivityBatchDetail;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/Finance/ACHActivityBatchDetail/ACHActivityBatchDetail.js"],"names":["React","inject","observer","Button","Modal","UserAction","UserActionCategory","toJS","moment","checkRenderPermissions","permissions","timeOfDayFormat","ReactTable","ACHActivityBatchDetail","Component","constructor","props","handlePaymentDetailClick","paymentData","claimStore","logAction","API_CALL","VIEW_PAYMENT_DETAILS","transactionId","setPaymentDetails","navigateToPaymentDetails","id","selectedClaimId","history","push","handleViewDetailClick","row","target","transactionid","playerName","playerfirstname","playerlastname","playerStore","PAGE_VIEW","SHOW_BATCH_FILE_PII","setState","showPopup","selectedBatch","onModalClose","state","componentDidMount","CAN_SEE_BATCH_REJECT_FILE_DETAILS","JSON","parse","localStorage","getItem","fetchBatchDetails","renderBatchDetails","batchDetails","selectedBatchId","data","selectedBatchDetails","batchDetailsTableHeader","batchDetailsTableRows","filecreationdatetime","filesubmissiondatetime","effectiveentrydate","settlementdate","status","amount","CAN_SEE_BATCH_MASKED_DETAIL","key","label","forEach","index","view","format","routingnumber","accountnumber","e","render","renderObj"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\nimport {toJS} from \"mobx\";\r\nimport moment from \"moment\";\r\nimport {checkRenderPermissions} from \"../../helpers\";\r\nimport {permissions, timeOfDayFormat} from \"../../constants\";\r\nimport ReactTable from \"../../PaginatedTable/ReactTable\";\r\n\r\nimport './ACHActivityBatchDetail.css';\r\n\r\n@inject('claimStore', 'playerStore')\r\n@observer\r\nclass ACHActivityBatchDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPopup: false,\r\n            selectedBatch: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            this.props.claimStore.fetchBatchDetails();\r\n        }\r\n    }\r\n\r\n    handlePaymentDetailClick = (paymentData) => {\r\n        this.props.claimStore.logAction(UserActionCategory.API_CALL, UserAction.VIEW_PAYMENT_DETAILS, 'Transaction ID: '+paymentData.transactionId, '');\r\n        this.props.claimStore.setPaymentDetails(paymentData, this.navigateToPaymentDetails);\r\n    }\r\n\r\n    navigateToPaymentDetails = () => {\r\n        const id  = this.props.claimStore.selectedClaimId;\r\n        this.props.history.push(`/claim/${id}/paymenthistory`);\r\n    }\r\n\r\n    handleViewDetailClick = (row) => {\r\n        const target = row.transactionid;\r\n        const playerName = `${row.playerfirstname} ${row.playerlastname}`;\r\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.SHOW_BATCH_FILE_PII, 'Transaction ID: '+target, 'Player Name: '+playerName);\r\n        this.setState({showPopup: true, selectedBatch: row});\r\n    }\r\n\r\n    onModalClose = () => {\r\n        this.setState({showPopup: false, selectedBatch: null});\r\n    }\r\n\r\n    renderBatchDetails() {\r\n        const {batchDetails, selectedBatchId} = this.props.claimStore;\r\n        const {showPopup, selectedBatch} = this.state;\r\n        if(batchDetails && selectedBatchId) {\r\n\r\n            const data = toJS(this.props.claimStore.batchDetails)\r\n            const {selectedBatchDetails, batchDetailsTableHeader, batchDetailsTableRows} = data;\r\n            const {filecreationdatetime, filesubmissiondatetime, effectiveentrydate,\r\n                settlementdate, status, amount} = selectedBatchDetails;\r\n            if(checkRenderPermissions(permissions.CAN_SEE_BATCH_MASKED_DETAIL, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n                batchDetailsTableHeader.push({key: 'view', label: ''});\r\n                batchDetailsTableRows.forEach((row, index) => {\r\n                    row.view = <a key={index} className='batch-detail-link' onClick={() => this.handleViewDetailClick(row)}>\r\n                        Show Details\r\n                    </a>;\r\n                });\r\n            }\r\n            return(\r\n                <div className='batch-detail-container container-fluid'>\r\n                    <div className='batch-detail-panel'>\r\n                        <div className='batch-detail-top-row'>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    File Creation Date #\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filecreationdatetime).format('MM-DD-YYYY')}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    File Creation Time\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filecreationdatetime).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Date Submitted\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filesubmissiondatetime).format('MM-DD-YYYY')}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Time Submitted\r\n                                </div>\r\n                                <div>\r\n                                    {moment(filesubmissiondatetime).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Effective Entry Date\r\n                                </div>\r\n                                <div>\r\n                                    {effectiveentrydate && moment(effectiveentrydate).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Settlement Date\r\n                                </div>\r\n                                <div>\r\n                                    {settlementdate && moment(settlementdate).format(timeOfDayFormat)}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Status\r\n                                </div>\r\n                                <div>\r\n                                    {status}\r\n                                </div>\r\n                            </div>\r\n                            <div className='batch-detail-top-column'>\r\n                                <div>\r\n                                    Amount\r\n                                </div>\r\n                                <div>\r\n                                    ${amount}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        batchDetailsTableHeader && batchDetailsTableRows\r\n                            ? <ReactTable tableHeader={batchDetailsTableHeader} rowData={batchDetailsTableRows}\r\n                                          className='batch-detail-panel'/>\r\n                            : null\r\n                    }\r\n                    <Modal show={showPopup} centered={true}>\r\n                        <Modal.Header>\r\n                            <h5> Account Information </h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className='modal-unmasked-detail'>\r\n                                Routing Number: {selectedBatch && selectedBatch.routingnumber}\r\n                            </div>\r\n                            <div className='modal-unmasked-detail'>\r\n                                Account Number: {selectedBatch && selectedBatch.accountnumber}\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.onModalClose(e)}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className='batch-detail-container container-fluid'>\r\n                <div className='no-data-message'>Error loading data...go back</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n\r\n        if(checkRenderPermissions(permissions.CAN_SEE_BATCH_REJECT_FILE_DETAILS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderBatchDetails();\r\n        } else {\r\n            renderObj =\r\n                <h3 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h3>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ACHActivityBatchDetail;\r\n"]},"metadata":{},"sourceType":"module"}