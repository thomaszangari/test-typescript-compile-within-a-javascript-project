{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\users\\\\usermanagement.js\";\n\nimport React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport EditIcon from \"../components/Icons/editIcon\";\nimport LockIcon from \"../components/Icons/LockIcon\";\nimport UnlockIcon from \"../components/Icons/UnlockIcon\";\nimport './usermanagement.css';\nimport AppTextbox from \"../AppTextbox\";\nimport config from \"../config\";\nimport ResetPasswordIcon from \"../icons/ResetPasswordIcon\";\nimport { checkRenderPermissions } from \"../helpers\";\nimport { permissions } from \"../constants\";\nimport { UserAction, UserActionCategory } from \"../UserActionCategory\";\nimport MyToast from \"../MyToast\";\nimport { inject } from \"mobx-react\";\nimport ReactTable from \"../PaginatedTable/ReactTable\";\nlet AddUser = (_dec = inject('playerStore', 'authStore'), _dec(_class = (_temp = class AddUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (event, stateName) => {\n      this.props.onInputChange(stateName, event.target.value);\n    };\n\n    this.handleRoleChange = e => {\n      const value = e.target.value;\n      this.props.onRoleChange(value);\n    };\n\n    this.state = {\n      roles: []\n    };\n  }\n\n  render() {\n    const {\n      roles,\n      selectedId\n    } = this.state;\n    const {\n      rolesList\n    } = this.props;\n    const {\n      showEmailError,\n      userName,\n      confirmUserName,\n      lastName,\n      firstName,\n      middleName,\n      role,\n      roleId,\n      isEditUser\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppTextbox, {\n      controlId: \"userName\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: userName,\n      disabled: isEditUser,\n      onChange: e => this.handleInputChange(e, 'userName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), showEmailError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }\n    }, \"Invalid email\") : null, !isEditUser ? /*#__PURE__*/React.createElement(AppTextbox, {\n      controlId: \"confirmUserName\",\n      type: \"text\",\n      placeholder: \"Confirm Email\",\n      value: confirmUserName,\n      disabled: isEditUser,\n      onChange: e => this.handleInputChange(e, 'confirmUserName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }\n    }) : null, /*#__PURE__*/React.createElement(AppTextbox, {\n      controlId: \"firstName\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: e => this.handleInputChange(e, 'firstName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AppTextbox, {\n      controlId: \"middleName\",\n      type: \"text\",\n      placeholder: \"Middle Name\",\n      value: middleName,\n      onChange: e => this.handleInputChange(e, 'middleName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AppTextbox, {\n      controlId: \"lastName\",\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChange: e => this.handleInputChange(e, 'lastName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control user-dropdown\",\n      id: \"role\",\n      onChange: e => this.handleRoleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Select a Role\"), rolesList.map((role, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        selected: role.roleid === roleId,\n        value: role.roleid,\n        key: index,\n        id: role.roleid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 36\n        }\n      }, role.rolename);\n    })));\n  }\n\n}, _temp)) || _class);\n\nclass UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllUsers = () => {\n      fetch(`${config.SERVER_BASE_URL}/v1/users/allusers`, {\n        method: 'get',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(res => {\n        this.setUsers(res);\n      }).catch(error => {\n        this.setState({\n          showError: true,\n          errorMessage: error.toString()\n        });\n      });\n    };\n\n    this.setRoles = roles => {\n      this.setState({\n        rolesList: roles\n      });\n    };\n\n    this.cancelUnlock = user => {\n      this.setState({\n        showUnlockModal: false,\n        lockedUser: null\n      });\n    };\n\n    this.showUnlockModal = user => {\n      this.setState({\n        showUnlockModal: true,\n        lockedUser: user\n      });\n    };\n\n    this.unlockUser = user => {\n      const {\n        lockedUser\n      } = this.state;\n      this.setState({\n        showUnlockModal: false,\n        lockedUser: null\n      }, () => this.props.playerStore.unlockUser(lockedUser, this.fetchAllUsers));\n    };\n\n    this.setUsers = users => {\n      const _users = users.filter(user => user.username !== localStorage.getItem('userName'));\n\n      let _tableHeader = JSON.parse(JSON.stringify(this.state.tableHeader));\n\n      if (checkRenderPermissions(permissions.CAN_EDIT_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies')))) {\n        if (_tableHeader.findIndex(row => row.key === 'edit') === -1) {\n          _tableHeader.push({\n            key: 'edit',\n            label: 'Edit'\n          });\n        }\n\n        _users.forEach(user => {\n          user.edit = /*#__PURE__*/React.createElement(EditIcon, {\n            color: \"#FFFFFF\",\n            onclick: () => this.handleEditUser(user.username),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }\n          });\n        });\n      }\n\n      if (checkRenderPermissions(permissions.CAN_RESET_USER_PASSWORD, JSON.parse(localStorage.getItem('userpolicies')))) {\n        if (_tableHeader.findIndex(row => row.key === 'password') === -1) {\n          _tableHeader.push({\n            key: 'password',\n            label: 'Password'\n          });\n        }\n\n        _users.forEach(user => {\n          user.password = /*#__PURE__*/React.createElement(ResetPasswordIcon, {\n            color: \"#FFFFFF\",\n            onclick: () => this.handleResetPassword(user.username),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }\n          });\n        });\n      }\n\n      if (checkRenderPermissions(permissions.CAN_UNLOCK_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies')))) {\n        if (_tableHeader.findIndex(row => row.key === 'account') === -1) {\n          _tableHeader.push({\n            key: 'account',\n            label: 'Account'\n          });\n        }\n\n        _users.forEach(user => {\n          user.account = user.islocked ? /*#__PURE__*/React.createElement(LockIcon, {\n            onclick: () => this.showUnlockModal(user),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 48\n            }\n          }) : /*#__PURE__*/React.createElement(UnlockIcon, {\n            isDisabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 105\n            }\n          });\n        });\n      }\n\n      if (checkRenderPermissions(permissions.CAN_SEE_USER_AUDIT_ACTIONS, JSON.parse(localStorage.getItem('userpolicies')))) {\n        if (_tableHeader.findIndex(row => row.key === 'audit') === -1) {\n          _tableHeader.push({\n            key: 'audit',\n            label: 'Audit'\n          });\n        }\n\n        _users.forEach(user => {\n          user.audit = /*#__PURE__*/React.createElement(\"a\", {\n            onClick: e => this.handleAuditClick(e, user.id, user.username),\n            href: \"\",\n            className: \"select-link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }\n          }, \"Audit\");\n        });\n      }\n\n      this.setState({\n        userList: _users,\n        tableHeader: _tableHeader\n      });\n    };\n\n    this.showAddUserModal = () => {\n      this.setState({\n        showModal: true,\n        isEditUser: false,\n        firstName: '',\n        lastName: '',\n        middleName: '',\n        userName: '',\n        confirmUserName: '',\n        role: '',\n        roleId: 0\n      });\n    };\n\n    this.onAddUserClick = e => {\n      e.preventDefault();\n      const {\n        firstName,\n        middleName,\n        lastName,\n        userName,\n        confirmUserName,\n        roleId,\n        isEditUser,\n        id,\n        isValidEmail\n      } = this.state;\n\n      if (!isValidEmail && !isEditUser) {\n        this.setState({\n          showEmailError: true\n        });\n      } else {\n        const newUser = {\n          username: userName,\n          confirmUserName: confirmUserName,\n          roleid: roleId,\n          firstname: firstName,\n          middlename: middleName,\n          lastname: lastName\n        };\n        let url = `${config.SERVER_BASE_URL}/v1/users/register`;\n\n        if (isEditUser) {\n          newUser.id = id;\n          url = `${config.SERVER_BASE_URL}/v1/user/update`;\n        }\n\n        const message = isEditUser ? 'User updated successfully.' : 'Email with instructions to setup a password is sent to the user';\n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        }).then(response => response.json()).then(res => {\n          if (res.error) {\n            this.setState({\n              showModal: false,\n              errorMessage: res.error,\n              showError: true\n            });\n          } else {\n            this.setState({\n              isEditUser: false,\n              showModal: false,\n              successMessage: message,\n              showSuccess: true\n            }, () => this.fetchAllUsers());\n          }\n        }).catch(error => {\n          this.setState({\n            showError: true,\n            errorMessage: error.toString()\n          });\n        });\n      }\n    };\n\n    this.onCancel = e => {\n      e.preventDefault();\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.onDelete = e => {\n      e.preventDefault();\n      this.setState({\n        showConfirmPopup: true,\n        isDeleteProcess: true,\n        isDeactivateProcess: false\n      });\n    };\n\n    this.onDeactivate = e => {\n      e.preventDefault();\n      this.setState({\n        showConfirmPopup: true,\n        isDeleteProcess: false,\n        isDeactivateProcess: true\n      });\n    };\n\n    this.handleInputChange = (stateName, value) => {\n      let _isValidEmail = this.state.isValidEmail;\n\n      if (stateName === 'userName') {\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n          _isValidEmail = true;\n        } else {\n          _isValidEmail = false;\n        }\n      }\n\n      this.setState({\n        [stateName]: value,\n        isValidEmail: _isValidEmail,\n        showEmailError: false\n      });\n    };\n\n    this.handleRoleChange = role => {\n      this.setState({\n        roleId: role\n      });\n    };\n\n    this.resetPassword = e => {\n      // CALL RESET API /v1/users/resetpassword\n      e.preventDefault();\n      const data = {\n        username: this.state.selectedUserName\n      };\n      fetch(`${config.SERVER_BASE_URL}/v1/users/resetpassword`, {\n        method: 'POST',\n        // or 'PUT'\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(res => {\n        if (res && res.error) {\n          this.setState({\n            errorMessage: res.error,\n            showError: true\n          });\n        } else {\n          this.setState({\n            showSuccess: true,\n            successMessage: 'Email has been sent with instructions to reset the password.'\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          errorMessage: error.toString(),\n          showError: true\n        });\n      });\n      this.setState({\n        showResetPasswordPopup: false,\n        selectedUserName: null\n      });\n    };\n\n    this.hideResetPassword = () => {\n      this.setState({\n        showResetPasswordPopup: false,\n        selectedUserName: null\n      });\n    };\n\n    this.handleResetPassword = username => {\n      this.setState({\n        showResetPasswordPopup: true,\n        selectedUserName: username\n      });\n    };\n\n    this.handleAuditClick = (event, userid, username) => {\n      event.preventDefault();\n      this.props.playerStore.setSelectedBackOfficeUserID(userid);\n      this.props.playerStore.setSelectedBackOfficeUserName(username);\n      this.props.history.push(`/user/audit/${userid}`);\n    };\n\n    this.handleEditUser = username => {\n      const selectedUser = this.state.userList.find(user => user.username === username);\n\n      if (selectedUser) {\n        const {\n          firstname,\n          middlename,\n          lastname,\n          username,\n          roleid,\n          id\n        } = selectedUser;\n        this.setState({\n          id: id,\n          firstName: firstname,\n          lastName: lastname,\n          middleName: middlename,\n          userName: username,\n          roleId: roleid,\n          showModal: true,\n          isEditUser: true,\n          successMessage: 'test'\n        });\n        this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.EDIT_USER, username);\n      }\n    };\n\n    this.cancelDeleteUser = () => {\n      this.setState({\n        showConfirmPopup: false\n      });\n    };\n\n    this.deleteOrDeactivateUser = () => {\n      const {\n        id,\n        isDeactivateProcess,\n        userName\n      } = this.state; // let _userList = userList;\n      // _userList = _userList.filter(user => user.userName !== userName);\n      // this.setState({userList: _userList, showConfirmPopup: false, showModal: false});\n\n      let url = `${config.SERVER_BASE_URL}/v1/user/delete`;\n      let method = 'DELETE';\n\n      if (isDeactivateProcess) {\n        url = `${config.SERVER_BASE_URL}/v1/users/deactivate`;\n        method = 'POST';\n      }\n\n      fetch(url, {\n        method: method,\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userid: id,\n          username: userName\n        })\n      }).then(response => response.json()).then(res => {\n        if (res.error) {\n          this.setState({\n            isEditUser: false,\n            showModal: false,\n            showConfirmPopup: false\n          });\n        } else {\n          this.setState({\n            isEditUser: false,\n            showModal: false,\n            showConfirmPopup: false,\n            successMessage: res.message,\n            showSuccess: true\n          }, () => this.fetchAllUsers());\n        }\n      }).catch(error => {\n        this.setState({\n          showError: true,\n          errorMessage: error.toString()\n        });\n      });\n    };\n\n    this.addNewUser = () => {\n      this.setState({\n        isEditUser: false,\n        showModal: true,\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        userName: '',\n        confirmUserName: '',\n        roleId: ''\n      });\n    };\n\n    this.getTableHeader = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-table-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 17\n        }\n      }, \"User Management\"), checkRenderPermissions(permissions.CAN_CREATE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ? /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.addNewUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }\n      }, \"Add User\") : null);\n    };\n\n    this.handleToastClose = stateName => {\n      this.setState({\n        [stateName]: false\n      });\n    };\n\n    this.state = {\n      role: '',\n      userList: [],\n      tableHeader: [{\n        key: 'id',\n        label: 'User ID'\n      }, {\n        key: 'username',\n        label: 'User Name'\n      }, {\n        key: 'rolename',\n        label: 'Role'\n      }],\n      showModal: false,\n      selectedId: 0,\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      userName: '',\n      roleId: '',\n      isEditUser: false,\n      showConfirmPopup: false,\n      rolesList: [],\n      id: '',\n      showEmailError: false,\n      isValidEmail: false,\n      showResetPasswordPopup: false,\n      confirmUserName: null,\n      selectedUserName: null,\n      successMessage: null,\n      showSuccess: false,\n      showError: false,\n      isDeleteProcess: false,\n      isDeactivateProcess: false,\n      showUnlockModal: false,\n      lockedUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllUsers();\n    fetch(`${config.SERVER_BASE_URL}/v1/users/allroles`, {\n      method: 'get',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(res => {\n      this.setRoles(res);\n    }).catch(error => {\n      this.setState({\n        showError: true,\n        errorMessage: error.toString()\n      });\n    });\n  }\n\n  renderUserManagement() {\n    const {\n      showEmailError,\n      showModal,\n      roleId,\n      role,\n      firstName,\n      middleName,\n      lastName,\n      userName,\n      userList,\n      tableHeader,\n      isEditUser,\n      showConfirmPopup,\n      rolesList,\n      showResetPasswordPopup,\n      confirmUserName,\n      showSuccess,\n      successMessage,\n      showError,\n      errorMessage,\n      isDeactivateProcess,\n      isDeleteProcess,\n      showUnlockModal,\n      lockedUser\n    } = this.state;\n    const deleteConfirmMessage = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }\n    }, `Do you really want to ${isDeleteProcess ? 'delete' : 'deactivate'}`, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 88\n      }\n    }), userName);\n    const resetPasswordConfirmMessage = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 45\n      }\n    }, \"Are you sure you want to reset this User\\u2019s password?\");\n    let isDisabled = true;\n\n    if (!isEditUser && firstName.trim() && lastName.trim() && userName.trim() && confirmUserName && roleId && userName === confirmUserName) {\n      isDisabled = false;\n    } else if (isEditUser && firstName.trim() && lastName.trim() && userName && roleId) {\n      isDisabled = false;\n    }\n\n    const customHeight = `${window.innerHeight - 162}px`;\n\n    const _header = this.getTableHeader();\n\n    const customStyle = {\n      height: customHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-management app-center-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }\n    }, showSuccess ? /*#__PURE__*/React.createElement(MyToast, {\n      showToast: showSuccess,\n      message: successMessage,\n      isSuccessMessage: true,\n      handleClose: () => this.handleToastClose('showSuccess'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 27\n      }\n    }) : null, errorMessage && showError ? /*#__PURE__*/React.createElement(MyToast, {\n      showToast: showError,\n      message: errorMessage,\n      isSuccessMessage: false,\n      handleClose: () => this.handleToastClose('showError'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 27\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-management-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactTable, {\n      header: _header,\n      tableHeader: tableHeader,\n      rowData: userList,\n      handleColumnCLick: this.handleEditUser,\n      className: \"fixed_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: showModal,\n      className: showConfirmPopup ? 'hide-user-popup' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 29\n      }\n    }, isEditUser ? 'Edit User' : 'Add User')), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AddUser, {\n      userName: userName,\n      confirmUserName: confirmUserName,\n      lastName: lastName,\n      firstName: firstName,\n      middleName: middleName,\n      showEmailError: showEmailError,\n      rolesList: rolesList,\n      role: role,\n      roleId: roleId,\n      onInputChange: this.handleInputChange,\n      onRoleChange: this.handleRoleChange,\n      isEditUser: isEditUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 25\n      }\n    }, isEditUser ? /*#__PURE__*/React.createElement(React.Fragment, null, checkRenderPermissions(permissions.CAN_DEACTIVATE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      onClick: e => this.onDeactivate(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 41\n      }\n    }, \"Deactivate User\") : null, checkRenderPermissions(permissions.CAN_DELETE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: e => this.onDelete(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 41\n      }\n    }, \"Delete User\") : null) : null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => this.onCancel(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      disabled: isDisabled,\n      variant: \"primary\",\n      onClick: e => this.onAddUserClick(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 29\n      }\n    }, isEditUser ? 'Update' : 'Add User'))), /*#__PURE__*/React.createElement(Modal, {\n      show: showConfirmPopup,\n      className: \"delete-popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 29\n      }\n    }, deleteConfirmMessage)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => this.cancelDeleteUser(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 29\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      disabled: isDisabled,\n      variant: \"danger\",\n      onClick: e => this.deleteOrDeactivateUser(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 29\n      }\n    }, \"Yes\"))), /*#__PURE__*/React.createElement(Modal, {\n      show: showResetPasswordPopup,\n      className: \"reset-password-popup\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 29\n      }\n    }, resetPasswordConfirmMessage)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => this.hideResetPassword(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 29\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: e => this.resetPassword(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 29\n      }\n    }, \"Yes\"))), /*#__PURE__*/React.createElement(Modal, {\n      show: showUnlockModal,\n      className: \"\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 29\n      }\n    }, \"Do you really want to unlock \", lockedUser && lockedUser.username, \"?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: e => this.cancelUnlock(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 29\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => this.unlockUser(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 29\n      }\n    }, \"Yes\")))));\n  }\n\n  render() {\n    let renderObj;\n\n    if (checkRenderPermissions(permissions.CAN_ACCESS_USER_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies')))) {\n      renderObj = this.renderUserManagement();\n    } else {\n      renderObj = /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"unauthorized-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 17\n        }\n      }, \"You do not have permission to view this page! Please contact your System Administrator!\");\n    }\n\n    return renderObj;\n  }\n\n}\n\nexport default UserManagement;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/users/usermanagement.js"],"names":["React","Button","Modal","EditIcon","LockIcon","UnlockIcon","AppTextbox","config","ResetPasswordIcon","checkRenderPermissions","permissions","UserAction","UserActionCategory","MyToast","inject","ReactTable","AddUser","Component","constructor","props","handleInputChange","event","stateName","onInputChange","target","value","handleRoleChange","e","onRoleChange","state","roles","render","selectedId","rolesList","showEmailError","userName","confirmUserName","lastName","firstName","middleName","role","roleId","isEditUser","map","index","roleid","rolename","UserManagement","fetchAllUsers","fetch","SERVER_BASE_URL","method","headers","localStorage","getItem","then","response","json","res","setUsers","catch","error","setState","showError","errorMessage","toString","setRoles","cancelUnlock","user","showUnlockModal","lockedUser","unlockUser","playerStore","users","_users","filter","username","_tableHeader","JSON","parse","stringify","tableHeader","CAN_EDIT_USER_ACCOUNT","findIndex","row","key","push","label","forEach","edit","handleEditUser","CAN_RESET_USER_PASSWORD","password","handleResetPassword","CAN_UNLOCK_USER_ACCOUNT","account","islocked","CAN_SEE_USER_AUDIT_ACTIONS","audit","handleAuditClick","id","userList","showAddUserModal","showModal","onAddUserClick","preventDefault","isValidEmail","newUser","firstname","middlename","lastname","url","message","body","successMessage","showSuccess","onCancel","onDelete","showConfirmPopup","isDeleteProcess","isDeactivateProcess","onDeactivate","_isValidEmail","test","resetPassword","data","selectedUserName","console","log","showResetPasswordPopup","hideResetPassword","userid","setSelectedBackOfficeUserID","setSelectedBackOfficeUserName","history","selectedUser","find","logAction","PAGE_VIEW","EDIT_USER","cancelDeleteUser","deleteOrDeactivateUser","addNewUser","getTableHeader","CAN_CREATE_USER_ACCOUNT","handleToastClose","componentDidMount","renderUserManagement","deleteConfirmMessage","resetPasswordConfirmMessage","isDisabled","trim","customHeight","window","innerHeight","_header","customStyle","height","CAN_DEACTIVATE_USER_ACCOUNT","CAN_DELETE_USER_ACCOUNT","renderObj","CAN_ACCESS_USER_MANAGEMENT"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport EditIcon from \"../components/Icons/editIcon\";\r\nimport LockIcon from \"../components/Icons/LockIcon\";\r\nimport UnlockIcon from \"../components/Icons/UnlockIcon\";\r\nimport './usermanagement.css';\r\nimport AppTextbox from \"../AppTextbox\";\r\nimport config from \"../config\";\r\nimport ResetPasswordIcon from \"../icons/ResetPasswordIcon\";\r\nimport {checkRenderPermissions} from \"../helpers\";\r\nimport {permissions} from \"../constants\";\r\nimport {UserAction, UserActionCategory} from \"../UserActionCategory\";\r\nimport MyToast from \"../MyToast\";\r\nimport {inject} from \"mobx-react\";\r\nimport ReactTable from \"../PaginatedTable/ReactTable\";\r\n\r\n@inject('playerStore', 'authStore')\r\nclass AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: []\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event, stateName) => {\r\n        this.props.onInputChange(stateName, event.target.value)\r\n    }\r\n    handleRoleChange = (e) => {\r\n        const value = e.target.value;\r\n        this.props.onRoleChange(value);\r\n    }\r\n\r\n    render() {\r\n        const {roles, selectedId} = this.state;\r\n        const {rolesList} = this.props;\r\n        const {showEmailError, userName, confirmUserName, lastName, firstName, middleName, role, roleId, isEditUser} = this.props;\r\n        return (\r\n            <div className='container'>\r\n                <AppTextbox controlId='userName'\r\n                            type=\"email\" placeholder='Email' value={userName} disabled={isEditUser}\r\n                            onChange={(e) => this.handleInputChange(e, 'userName')}/>\r\n                {\r\n                    showEmailError ? <div className='invalid-email'>Invalid email</div> : null\r\n                }\r\n\r\n                {\r\n                    !isEditUser\r\n                        ? <AppTextbox controlId='confirmUserName' type=\"text\" placeholder='Confirm Email'\r\n                                      value={confirmUserName}\r\n                                      disabled={isEditUser}\r\n                                      onChange={(e) => this.handleInputChange(e, 'confirmUserName')}/>\r\n                        : null\r\n                }\r\n\r\n\r\n                <AppTextbox controlId='firstName'\r\n                            type=\"text\" placeholder='First Name' value={firstName}\r\n                            onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"First Name\"\r\n                           value={firstName}\r\n                           onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                </div>*/}\r\n\r\n                <AppTextbox controlId='middleName'\r\n                            type=\"text\" placeholder='Middle Name' value={middleName}\r\n                            onChange={(e) => this.handleInputChange(e, 'middleName')}/>\r\n\r\n                {/*<div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"middleName\" placeholder=\"Middle Name\"\r\n                           value={middleName}\r\n                           onChange={(e) => this.handleInputChange(e, 'middleName')}/>\r\n                </div>*/}\r\n\r\n                <AppTextbox controlId='lastName'\r\n                            type=\"text\" placeholder='Last Name' value={lastName}\r\n                            onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n\r\n                {/*<div className=\"form-group\">*/}\r\n                {/*    <input type=\"text\" className=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" value={lastName}*/}\r\n                {/*           onChange={(e) => this.handleInputChange(e, 'lastName')}/>*/}\r\n                {/*</div>*/}\r\n                <select className=\"form-control user-dropdown\" id=\"role\" onChange={(e) => this.handleRoleChange(e)}>\r\n                    <option value=''>Select a Role</option>\r\n                    {\r\n                        rolesList.map((role, index) => {\r\n                            return <option selected={role.roleid === roleId} value={role.roleid} key={index}\r\n                                           id={role.roleid}>{role.rolename}</option>\r\n                        })\r\n                    }\r\n                </select>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nclass UserManagement extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: '',\r\n            userList: [],\r\n            tableHeader: [\r\n                {key: 'id', label: 'User ID'},\r\n                {key: 'username', label: 'User Name'},\r\n                {key: 'rolename', label: 'Role'}\r\n            ],\r\n            showModal: false,\r\n            selectedId: 0,\r\n            firstName: '',\r\n            middleName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            roleId: '',\r\n            isEditUser: false,\r\n            showConfirmPopup: false,\r\n            rolesList: [],\r\n            id: '',\r\n            showEmailError: false,\r\n            isValidEmail: false,\r\n            showResetPasswordPopup: false,\r\n            confirmUserName: null,\r\n            selectedUserName: null,\r\n            successMessage: null,\r\n            showSuccess: false,\r\n            showError: false,\r\n            isDeleteProcess: false,\r\n            isDeactivateProcess: false,\r\n            showUnlockModal: false,\r\n            lockedUser: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.fetchAllUsers();\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/allroles`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setRoles(res);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n    }\r\n\r\n    fetchAllUsers = () => {\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/allusers`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.setUsers(res);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n    }\r\n\r\n    setRoles = (roles) => {\r\n        this.setState({rolesList: roles});\r\n    }\r\n\r\n    cancelUnlock = (user) => {\r\n        this.setState({showUnlockModal: false, lockedUser: null});\r\n    }\r\n    showUnlockModal = (user) => {\r\n        this.setState({showUnlockModal: true, lockedUser: user});\r\n    }\r\n    unlockUser = (user) => {\r\n        const {lockedUser} = this.state;\r\n        this.setState({showUnlockModal: false, lockedUser: null},\r\n            () => this.props.playerStore.unlockUser(lockedUser, this.fetchAllUsers)\r\n        );\r\n    }\r\n\r\n    setUsers = (users) => {\r\n\r\n        const _users = users.filter(user => user.username !== localStorage.getItem('userName'));\r\n        let _tableHeader = JSON.parse(JSON.stringify(this.state.tableHeader));\r\n\r\n        if (checkRenderPermissions(permissions.CAN_EDIT_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'edit') === -1) {\r\n                _tableHeader.push({key: 'edit', label: 'Edit'})\r\n            }\r\n            _users.forEach(user => {\r\n                user.edit = <EditIcon color='#FFFFFF' onclick={() => this.handleEditUser(user.username)}/>\r\n            });\r\n        }\r\n\r\n        if (checkRenderPermissions(permissions.CAN_RESET_USER_PASSWORD, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'password') === -1) {\r\n                _tableHeader.push({key: 'password', label: 'Password'})\r\n            }\r\n            _users.forEach(user => {\r\n                user.password =\r\n                    <ResetPasswordIcon color='#FFFFFF' onclick={() => this.handleResetPassword(user.username)}/>\r\n            });\r\n        }\r\n\r\n        if (checkRenderPermissions(permissions.CAN_UNLOCK_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'account') === -1) {\r\n                _tableHeader.push({key: 'account', label: 'Account'});\r\n            }\r\n            _users.forEach(user => {\r\n                user.account = user.islocked ? <LockIcon onclick={() => this.showUnlockModal(user)}/> : <UnlockIcon isDisabled={true}/>;\r\n            });\r\n        }\r\n\r\n        if (checkRenderPermissions(permissions.CAN_SEE_USER_AUDIT_ACTIONS, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            if (_tableHeader.findIndex(row => row.key === 'audit') === -1) {\r\n                _tableHeader.push({key: 'audit', label: 'Audit'})\r\n            }\r\n            _users.forEach(user => {\r\n                user.audit =\r\n                    <a onClick={(e) => this.handleAuditClick(e, user.id, user.username)} href=''\r\n                       className='select-link'>Audit</a>\r\n            });\r\n        }\r\n\r\n        this.setState({userList: _users, tableHeader: _tableHeader});\r\n    }\r\n\r\n    showAddUserModal = () => {\r\n        this.setState({\r\n            showModal: true,\r\n            isEditUser: false,\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            userName: '',\r\n            confirmUserName: '',\r\n            role: '',\r\n            roleId: 0,\r\n        });\r\n    }\r\n\r\n    onAddUserClick = (e) => {\r\n        e.preventDefault();\r\n        const {firstName, middleName, lastName, userName, confirmUserName, roleId, isEditUser, id, isValidEmail} = this.state;\r\n        if (!isValidEmail && !isEditUser) {\r\n            this.setState({showEmailError: true});\r\n        } else {\r\n\r\n            const newUser = {\r\n                username: userName,\r\n                confirmUserName: confirmUserName,\r\n                roleid: roleId,\r\n                firstname: firstName,\r\n                middlename: middleName,\r\n                lastname: lastName,\r\n            };\r\n            let url = `${config.SERVER_BASE_URL}/v1/users/register`;\r\n            if (isEditUser) {\r\n                newUser.id = id;\r\n                url = `${config.SERVER_BASE_URL}/v1/user/update`;\r\n            }\r\n            const message = isEditUser ? 'User updated successfully.' : 'Email with instructions to setup a password is sent to the user'\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newUser),\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        this.setState({showModal: false, errorMessage: res.error, showError: true})\r\n                    } else {\r\n                        this.setState({\r\n                            isEditUser: false,\r\n                            showModal: false,\r\n                            successMessage: message,\r\n                            showSuccess: true\r\n                        }, () => this.fetchAllUsers());\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({showError: true, errorMessage: error.toString()})\r\n                });\r\n        }\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    onDelete = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showConfirmPopup: true, isDeleteProcess: true, isDeactivateProcess: false});\r\n    }\r\n    onDeactivate = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showConfirmPopup: true, isDeleteProcess: false, isDeactivateProcess: true});\r\n    }\r\n\r\n    handleInputChange = (stateName, value) => {\r\n        let _isValidEmail = this.state.isValidEmail;\r\n        if (stateName === 'userName') {\r\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\r\n                _isValidEmail = true;\r\n            } else {\r\n                _isValidEmail = false\r\n            }\r\n        }\r\n        this.setState({[stateName]: value, isValidEmail: _isValidEmail, showEmailError: false});\r\n    }\r\n\r\n    handleRoleChange = (role) => {\r\n        this.setState({roleId: role})\r\n    }\r\n\r\n\r\n    resetPassword = (e) => {\r\n        // CALL RESET API /v1/users/resetpassword\r\n        e.preventDefault();\r\n        const data = {username: this.state.selectedUserName};\r\n        fetch(`${config.SERVER_BASE_URL}/v1/users/resetpassword`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res && res.error) {\r\n                    this.setState({errorMessage: res.error, showError: true});\r\n                } else {\r\n                    this.setState({\r\n                        showSuccess: true,\r\n                        successMessage: 'Email has been sent with instructions to reset the password.'\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.setState({errorMessage: error.toString(), showError: true});\r\n            });\r\n        this.setState({showResetPasswordPopup: false, selectedUserName: null});\r\n    }\r\n    hideResetPassword = () => {\r\n        this.setState({showResetPasswordPopup: false, selectedUserName: null});\r\n    }\r\n    handleResetPassword = (username) => {\r\n        this.setState({showResetPasswordPopup: true, selectedUserName: username});\r\n    }\r\n\r\n    handleAuditClick = (event, userid, username) => {\r\n        event.preventDefault();\r\n        this.props.playerStore.setSelectedBackOfficeUserID(userid);\r\n        this.props.playerStore.setSelectedBackOfficeUserName(username);\r\n        this.props.history.push(`/user/audit/${userid}`);\r\n    }\r\n\r\n    handleEditUser = (username) => {\r\n\r\n        const selectedUser = this.state.userList.find(user => user.username === username);\r\n        if (selectedUser) {\r\n            const {firstname, middlename, lastname, username, roleid, id} = selectedUser;\r\n            this.setState({\r\n                id: id,\r\n                firstName: firstname,\r\n                lastName: lastname,\r\n                middleName: middlename,\r\n                userName: username,\r\n                roleId: roleid,\r\n                showModal: true,\r\n                isEditUser: true,\r\n                successMessage: 'test'\r\n            })\r\n            this.props.playerStore.logAction(UserActionCategory.PAGE_VIEW, UserAction.EDIT_USER, username);\r\n        }\r\n    }\r\n    cancelDeleteUser = () => {\r\n        this.setState({showConfirmPopup: false});\r\n    }\r\n    deleteOrDeactivateUser = () => {\r\n\r\n        const {id, isDeactivateProcess, userName} = this.state;\r\n        // let _userList = userList;\r\n        // _userList = _userList.filter(user => user.userName !== userName);\r\n        // this.setState({userList: _userList, showConfirmPopup: false, showModal: false});\r\n\r\n        let url = `${config.SERVER_BASE_URL}/v1/user/delete`;\r\n        let method = 'DELETE';\r\n        if (isDeactivateProcess) {\r\n            url = `${config.SERVER_BASE_URL}/v1/users/deactivate`;\r\n            method = 'POST';\r\n        }\r\n        fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({userid: id, username: userName}),\r\n        })\r\n            .then(response => response.json())\r\n            .then((res) => {\r\n                if (res.error) {\r\n                    this.setState({isEditUser: false, showModal: false, showConfirmPopup: false});\r\n                } else {\r\n                    this.setState({\r\n                        isEditUser: false,\r\n                        showModal: false,\r\n                        showConfirmPopup: false,\r\n                        successMessage: res.message,\r\n                        showSuccess: true\r\n                    }, () => this.fetchAllUsers());\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({showError: true, errorMessage: error.toString()})\r\n            });\r\n\r\n\r\n    }\r\n    addNewUser = () => {\r\n        this.setState({\r\n            isEditUser: false, showModal: true, firstName: '', middleName: '', lastName: '',\r\n            userName: '', confirmUserName: '', roleId: ''\r\n        });\r\n    }\r\n    getTableHeader = () => {\r\n        return (\r\n            <div className='user-table-header'>\r\n                <div>User Management</div>\r\n                {checkRenderPermissions(permissions.CAN_CREATE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                    <Button variant='primary' onClick={this.addNewUser}>Add User</Button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleToastClose = (stateName) => {\r\n        this.setState({[stateName]: false})\r\n    }\r\n\r\n    renderUserManagement() {\r\n\r\n        const {\r\n            showEmailError, showModal, roleId, role, firstName, middleName, lastName, userName, userList, tableHeader,\r\n            isEditUser, showConfirmPopup, rolesList, showResetPasswordPopup, confirmUserName,\r\n            showSuccess, successMessage, showError, errorMessage, isDeactivateProcess, isDeleteProcess, showUnlockModal,\r\n            lockedUser } = this.state;\r\n        const deleteConfirmMessage =\r\n            <div>{`Do you really want to ${isDeleteProcess ? 'delete' : 'deactivate'}`}<br/>{userName}</div>;\r\n        const resetPasswordConfirmMessage = <div>Are you sure you want to reset this User’s password?</div>;\r\n        let isDisabled = true;\r\n        if (!isEditUser && firstName.trim() && lastName.trim() && userName.trim() && confirmUserName && roleId && userName === confirmUserName) {\r\n            isDisabled = false;\r\n        } else if (isEditUser && firstName.trim() && lastName.trim() && userName && roleId) {\r\n            isDisabled = false;\r\n        }\r\n        const customHeight = `${window.innerHeight - 162}px`;\r\n        const _header = this.getTableHeader();\r\n        const customStyle = {height: customHeight}\r\n        return (\r\n            <div className='user-management app-center-body'>\r\n                {\r\n                    showSuccess\r\n                        ? <MyToast showToast={showSuccess} message={successMessage} isSuccessMessage={true}\r\n                                   handleClose={() => this.handleToastClose('showSuccess')}/>\r\n                        : null\r\n                }\r\n                {\r\n                    errorMessage && showError\r\n                        ? <MyToast showToast={showError} message={errorMessage} isSuccessMessage={false}\r\n                                   handleClose={() => this.handleToastClose('showError')}/>\r\n                        : null\r\n                }\r\n                <div className='user-management-child'>\r\n                    <ReactTable header={_header} tableHeader={tableHeader} rowData={userList}\r\n                                handleColumnCLick={this.handleEditUser} className='fixed_header'/>\r\n                    <Modal show={showModal} className={showConfirmPopup ? 'hide-user-popup' : ''}>\r\n                        <Modal.Header>\r\n                            <h5>{isEditUser ? 'Edit User' : 'Add User'}</h5>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <AddUser\r\n                                userName={userName}\r\n                                confirmUserName={confirmUserName}\r\n                                lastName={lastName}\r\n                                firstName={firstName}\r\n                                middleName={middleName}\r\n                                showEmailError={showEmailError}\r\n                                rolesList={rolesList}\r\n                                role={role}\r\n                                roleId={roleId}\r\n                                onInputChange={this.handleInputChange}\r\n                                onRoleChange={this.handleRoleChange}\r\n                                isEditUser={isEditUser}\r\n                            />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            {isEditUser\r\n                                ? <>\r\n                                    {checkRenderPermissions(permissions.CAN_DEACTIVATE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                        <Button variant='warning' onClick={(e) => this.onDeactivate(e)}>Deactivate\r\n                                            User</Button> : null}\r\n                                    {checkRenderPermissions(permissions.CAN_DELETE_USER_ACCOUNT, JSON.parse(localStorage.getItem('userpolicies'))) ?\r\n                                        <Button variant='danger' onClick={(e) => this.onDelete(e)}>Delete\r\n                                            User</Button> : null}\r\n                                </>\r\n                                : null\r\n                            }\r\n                            <Button variant='secondary' onClick={(e) => this.onCancel(e)}>Cancel</Button>\r\n                            <Button disabled={isDisabled} variant='primary' onClick={(e) => this.onAddUserClick(e)}>\r\n                                {isEditUser ? 'Update' : 'Add User'}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n\r\n                    <Modal show={showConfirmPopup} className='delete-popup'>\r\n                        <Modal.Header>\r\n                            <strong>{deleteConfirmMessage}</strong>\r\n                        </Modal.Header>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.cancelDeleteUser(e)}>No</Button>\r\n                            <Button disabled={isDisabled} variant='danger'\r\n                                    onClick={(e) => this.deleteOrDeactivateUser(e)}>\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={showResetPasswordPopup} className='reset-password-popup' centered={true}>\r\n                        <Modal.Header>\r\n                            <strong>{resetPasswordConfirmMessage}</strong>\r\n                        </Modal.Header>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.hideResetPassword(e)}>No</Button>\r\n                            <Button variant='danger' onClick={(e) => this.resetPassword(e)}>\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={showUnlockModal} className='' centered={true}>\r\n                        <Modal.Header>\r\n                            <div>Do you really want to unlock {lockedUser && lockedUser.username}?</div>\r\n                        </Modal.Header>\r\n                        <Modal.Footer>\r\n                            <Button variant='secondary' onClick={(e) => this.cancelUnlock(e)}>No</Button>\r\n                            <Button variant='primary' onClick={(e) => this.unlockUser(e)}>\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let renderObj;\r\n\r\n        if (checkRenderPermissions(permissions.CAN_ACCESS_USER_MANAGEMENT, JSON.parse(localStorage.getItem('userpolicies')))) {\r\n            renderObj = this.renderUserManagement();\r\n        } else {\r\n            renderObj =\r\n                <h1 class='unauthorized-header'>You do not have permission to view this page! Please contact your System\r\n                    Administrator!</h1>\r\n        }\r\n\r\n        return (\r\n            renderObj\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserManagement;"]},"metadata":{},"sourceType":"module"}