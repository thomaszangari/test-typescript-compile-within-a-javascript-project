{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\Capstone\\\\lottery\\\\mslc-backoffice-client\\\\v1\\\\Code\\\\src\\\\components\\\\sigcontainer\\\\sigcontainer.js\";\n\nimport React from \"react\";\nimport './sigcontainer.css';\nimport { inject, observer } from \"mobx-react\";\nimport { toJS } from \"mobx\";\nimport { UserAction, UserActionCategory } from \"../../UserActionCategory\";\nlet SigContainer = (_dec = inject('playerStore'), _dec(_class = observer(_class = class SigContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.addDefaultSrc = this.addDefaultSrc.bind(this);\n  }\n\n  addDefaultSrc(ev) {\n    this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE_EXPIRED, 'Claim ID: ' + this.props.playerStore.selectedClaimId, 'Failed to load signature, likely expired');\n    ev.target.src = '/images/failed-signature.png';\n  }\n\n  render() {\n    const {\n      eSignatureURL\n    } = this.props.playerStore;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"sig-img\",\n      src: eSignatureURL,\n      onError: this.addDefaultSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}) || _class) || _class);\nexport default SigContainer;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/Capstone/lottery/mslc-backoffice-client/v1/Code/src/components/sigcontainer/sigcontainer.js"],"names":["React","inject","observer","toJS","UserAction","UserActionCategory","SigContainer","Component","constructor","props","state","addDefaultSrc","bind","ev","playerStore","logAction","BUTTON_CLICK","VIEW_ESIGNAURE_EXPIRED","selectedClaimId","target","src","render","eSignatureURL"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,SAAQC,UAAR,EAAoBC,kBAApB,QAA6C,0BAA7C;IAIMC,Y,WAFLL,MAAM,CAAC,aAAD,C,gBACNC,Q,UADD,MAEMI,YAFN,SAE2BN,KAAK,CAACO,SAFjC,CAE2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,CAACE,EAAD,EAAK;AACd,SAAKJ,KAAL,CAAWK,WAAX,CAAuBC,SAAvB,CAAiCV,kBAAkB,CAACW,YAApD,EAAkEZ,UAAU,CAACa,sBAA7E,EAAqG,eAAc,KAAKR,KAAL,CAAWK,WAAX,CAAuBI,eAA1I,EAA2J,0CAA3J;AACAL,IAAAA,EAAE,CAACM,MAAH,CAAUC,GAAV,GAAgB,8BAAhB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAkB,KAAKb,KAAL,CAAWK,WAAnC;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAEQ,aAA9B;AAA6C,MAAA,OAAO,EAAE,KAAKX,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AApBsC,C;AAuB3C,eAAeL,YAAf","sourcesContent":["import React from \"react\";\r\nimport './sigcontainer.css';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {toJS} from \"mobx\";\r\nimport {UserAction, UserActionCategory} from \"../../UserActionCategory\";\r\n\r\n@inject('playerStore')\r\n@observer\r\nclass SigContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.addDefaultSrc = this.addDefaultSrc.bind(this);\r\n    }\r\n\r\n    addDefaultSrc(ev) { \r\n        this.props.playerStore.logAction(UserActionCategory.BUTTON_CLICK, UserAction.VIEW_ESIGNAURE_EXPIRED, 'Claim ID: '+ this.props.playerStore.selectedClaimId, 'Failed to load signature, likely expired');\r\n        ev.target.src = '/images/failed-signature.png';\r\n    }\r\n    \r\n    render() {\r\n        const {eSignatureURL} = this.props.playerStore;\r\n        return (\r\n            <div>\r\n                <img className='sig-img' src={eSignatureURL} onError={this.addDefaultSrc}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SigContainer;"]},"metadata":{},"sourceType":"module"}