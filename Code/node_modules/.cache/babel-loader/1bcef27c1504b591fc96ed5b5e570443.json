{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\pages\\\\src\\\\components\\\\component\\\\PrescriptionDetailedForm\\\\index.tsx\";\nimport React from \"react\"; //import styles from '../../../../../styles/PrescriptionDetailedForm.module.scss';// for version 1 with wire frames\n\n/**\r\n * @COMPONENT\r\n * Displays the details of the prescription selected\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language // the languages selected English|Spanish\r\n * @param disabled // for making the selects editable\r\n * @param dataFromServer //Prescription comming from the server\r\n * @param prescriptionFromRoute // the prescription passed in when using the route function\r\n * @useState setPrescriptionDetails // sets the prescription chosen \r\n */\nconst PrescriptionDetailedForm = ({\n  language,\n  disabled = false,\n  coupons,\n  prescriptionName,\n  setValuesForFilterCoupons,\n  filterCoupons\n}) => {\n  let manufacturer = \"\";\n  let form = !Array.isArray(coupons['forms']['locatedDrugForm']) ? [coupons['forms']['locatedDrugForm']] : coupons['forms']['locatedDrugForm'][0];\n  let dosage = !Array.isArray(coupons['strengths']['locatedDrugStrength']) ? [coupons['strengths']['locatedDrugStrength']] : coupons['strengths']['locatedDrugStrength'].sort((a, b) => a.strength._text.toUpperCase().localeCompare(b.strength._text.toUpperCase()));\n  let quantity = !Array.isArray(coupons['quantities']['locatedDrugQty']) ? [coupons['quantities']['locatedDrugQty']] : coupons['quantities']['locatedDrugQty'].sort((a, b) => parseFloat(a.quantity._text) - parseFloat(b.quantity._text));\n  let val = {\n    form: form[0].form._text,\n    dosage: dosage[0].strength._text,\n    quantity: quantity[0].quantity._text\n  };\n  setValuesForFilterCoupons(val);\n  /**\r\n   * Sets the values from the select tag\r\n   * \r\n   * @useState setPrescriptionsDetails\r\n   * @param e \r\n   */\n\n  const onChange = e => {\n    let val = {\n      [e.target.name]: e.target.value\n    };\n    setValuesForFilterCoupons(val);\n    filterCoupons();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null,\n  /**@param disabled used when passed by Choose your coupon component*/\n  !disabled && /*#__PURE__*/React.createElement(React.Fragment, null, (language === 'english' || language === undefined) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 74\n    }\n  }, \"Adjust the information below so it matches your exact prescription. You can also adjust the details later.\")), language === 'spanish' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 46\n    }\n  }, '<Spanish>', \"Adjust the information below so it matches your exact prescription. You can also adjust the details later.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"rx\",\n    className: \"rx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" \", prescriptionName.search_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, (language === 'english' || language === undefined) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mfg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 78\n    }\n  }, \"Manufacturer\")), language === 'spanish' && /*#__PURE__*/React.createElement(React.Fragment, null, '<Spanish>', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mfg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 63\n    }\n  }, \"Manufacturer\")), /*#__PURE__*/React.createElement(\"select\", {\n    disabled: disabled,\n    name: \"mfg\",\n    onChange: onChange,\n    defaultValue: manufacturer,\n    id: \"mfg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, (language === 'english' || language === undefined) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 78\n    }\n  }, \"Form\")), language === 'spanish' && /*#__PURE__*/React.createElement(React.Fragment, null, '<Spanish>', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 63\n    }\n  }, \"Form\")), /*#__PURE__*/React.createElement(\"select\", {\n    disabled: disabled,\n    name: \"form\",\n    onChange: onChange,\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, form.map((e, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: e.form._text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 77\n    }\n  }, e.form._text)))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, (language === 'english' || language === undefined) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dosage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 78\n    }\n  }, \"Dosage\")), language === 'spanish' && /*#__PURE__*/React.createElement(React.Fragment, null, '<Spanish>', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dosage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 63\n    }\n  }, \"Dosage\")), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"dosage\",\n    id: \"dosage\",\n    disabled: disabled,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, dosage.map((e, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: e.strength._text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 88\n    }\n  }, e.strength._text)))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, (language === 'english' || language === undefined) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"qty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 78\n    }\n  }, \"Quantity\")), language === 'spanish' && /*#__PURE__*/React.createElement(React.Fragment, null, '<Spanish>', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"qty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 63\n    }\n  }, \"Quantity\")), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"quantity\",\n    id: \"qty\",\n    disabled: disabled,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, quantity.map((e, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: e.quantity._text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 80\n    }\n  }, e.quantity._text))))));\n};\n\nexport default PrescriptionDetailedForm;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/pages/src/components/component/PrescriptionDetailedForm/index.tsx"],"names":["React","PrescriptionDetailedForm","language","disabled","coupons","prescriptionName","setValuesForFilterCoupons","filterCoupons","manufacturer","form","Array","isArray","dosage","sort","a","b","strength","_text","toUpperCase","localeCompare","quantity","parseFloat","val","onChange","e","target","name","value","undefined","search_name","map","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//import styles from '../../../../../styles/PrescriptionDetailedForm.module.scss';// for version 1 with wire frames\r\n\r\nimport { GetLocatedDrugFormInterface, GetLocatedDrugQtyInterface, GetLocatedDrugStrengthInterface, LocatedDrugStrengthInterface } from \"../../Home/ChooseYourCoupon\";\r\n\r\n/**\r\n * @COMPONENT\r\n * Displays the details of the prescription selected\r\n * \r\n * refrencing version of: 1/28/2021\r\n * source: https://github.com/emilynorton?tab=repositories\r\n * \r\n * @param language // the languages selected English|Spanish\r\n * @param disabled // for making the selects editable\r\n * @param dataFromServer //Prescription comming from the server\r\n * @param prescriptionFromRoute // the prescription passed in when using the route function\r\n * @useState setPrescriptionDetails // sets the prescription chosen \r\n */\r\n\r\nconst PrescriptionDetailedForm = ({ language, disabled = false, coupons, prescriptionName, setValuesForFilterCoupons,filterCoupons }:any) => {\r\n       \r\n    let manufacturer = \"\";\r\n    let form:GetLocatedDrugFormInterface[] = !Array.isArray(coupons['forms']['locatedDrugForm']) ? [coupons['forms']['locatedDrugForm']] : coupons['forms']['locatedDrugForm'][0];\r\n    let dosage:GetLocatedDrugStrengthInterface[] =  !Array.isArray(coupons['strengths']['locatedDrugStrength']) ? [coupons['strengths']['locatedDrugStrength']] : coupons['strengths']['locatedDrugStrength'].sort((a,b)=> a.strength._text.toUpperCase().localeCompare(b.strength._text.toUpperCase()));\r\n    let quantity:GetLocatedDrugQtyInterface[] = !Array.isArray(coupons['quantities']['locatedDrugQty']) ? [coupons['quantities']['locatedDrugQty']]: coupons['quantities']['locatedDrugQty'].sort((a,b)=> parseFloat(a.quantity._text) - parseFloat(b.quantity._text));\r\n    \r\n    let val={\r\n        form:form[0].form._text,\r\n        dosage:dosage[0].strength._text,\r\n        quantity:quantity[0].quantity._text                 \r\n    }\r\n    setValuesForFilterCoupons(val);\r\n      \r\n    /**\r\n     * Sets the values from the select tag\r\n     * \r\n     * @useState setPrescriptionsDetails\r\n     * @param e \r\n     */\r\n    const onChange = (e:any) => {\r\n        let val = {\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setValuesForFilterCoupons(val);\r\n        filterCoupons();\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                /**\r\n                * refrencing version of: 1/28/2021\r\n                * source: https://github.com/emilynorton?tab=repositories\r\n                */\r\n            }\r\n\r\n            {/**@param disabled used when passed by Choose your coupon component*/\r\n            !disabled && <>\r\n                {(language === 'english' || language === undefined) && <><p className=\"instructions\">Adjust the information below so it matches your exact prescription. You can also adjust the details later.</p></>}\r\n                {language === 'spanish' && <><p className=\"instructions\">{'<Spanish>'}Adjust the information below so it matches your exact prescription. You can also adjust the details later.</p></>}\r\n                \r\n                </>\r\n            }\r\n            <div id=\"rx\" className=\"rx\">\r\n                <h4> {prescriptionName.search_name}</h4>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"mfg\">Manufacturer</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"mfg\">Manufacturer</label></>}\r\n\r\n                    <select\r\n                        disabled={disabled}\r\n                        name=\"mfg\"\r\n                        onChange={onChange}\r\n                        defaultValue={manufacturer}\r\n                        id=\"mfg\"\r\n                    >\r\n                       \r\n                    \r\n                    </select>\r\n                </p>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"form\">Form</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"form\">Form</label></>}\r\n\r\n                    <select\r\n                        disabled={disabled}\r\n                        name=\"form\"\r\n                        onChange={onChange}\r\n                        id=\"form\"\r\n                    >\r\n                       {form.map((e:GetLocatedDrugFormInterface,i:number)=> <option key={i} value={e.form._text} >{e.form._text}</option>)}\r\n                    \r\n                    </select>\r\n                </p>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"dosage\">Dosage</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"dosage\">Dosage</label></>}\r\n\r\n                    <select\r\n                        name=\"dosage\"\r\n                        id=\"dosage\"\r\n                        disabled={disabled}\r\n                        onChange={onChange}\r\n                        \r\n                    >                        \r\n                        {\r\n                            dosage.map((e:GetLocatedDrugStrengthInterface,i:number) => <option key={i} value={e.strength._text} >{e.strength._text}</option>)   \r\n                        }\r\n                        \r\n                    \r\n                    </select>\r\n                </p>\r\n\r\n                <p>\r\n                    {(language === 'english' || language === undefined) && <><label htmlFor=\"qty\">Quantity</label></>}\r\n                    {language === 'spanish' && <>{'<Spanish>'}<label htmlFor=\"qty\">Quantity</label></>}\r\n\r\n                    <select\r\n                        name=\"quantity\"\r\n                        id=\"qty\"\r\n                        disabled={disabled}\r\n                        onChange={onChange}\r\n                        \r\n                    >\r\n                     {  quantity.map((e:GetLocatedDrugQtyInterface,i:number)=> <option key={i} value={e.quantity._text} >{e.quantity._text}</option>)}   \r\n                      \r\n                    </select>\r\n                </p>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* \r\n            \r\n             \r\n             // version 1 from wire frames\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=25%3A1&viewport=520%2C440%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=102%3A1390&viewport=212%2C389%2C0.5&scaling=min-zoom\r\n            // https://www.figma.com/proto/f1Af0b6joE7OVyo4R4hb7i/FirstRx-Design?node-id=349%3A797&viewport=317%2C508%2C0.5&scaling=scale-down \r\n\r\n\r\n            <div className={styles.prescription_detailed_form_container}>\r\n                <div className={styles.main_desktop_left_prescription_form_description}>\r\n\r\n                    {language === 'english' || language === undefined && `Does this match your prescription? Make adjustments below\r\n                so that we can accurately compare prices. Don't worry, you will be\r\n                able to adjust this again.`}\r\n                    {language === 'spanish' && `<Spanish> Does this match your prescription? Make adjustments below\r\n                so that we can accurately compare prices. Don't worry, you will be\r\n                able to adjust this again.`}\r\n\r\n                </div>\r\n\r\n                <div className={styles.main_desktop_left_prescription_form_title_container}>\r\n                    <div\r\n                        className={styles.main_desktop_left_prescription_form_title}>\r\n                        {(prescriptionFromRoute !== undefined ? prescriptionFromRoute.search_name : (dataFromServer === undefined ? \"\" : dataFromServer[0].search_name))}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.main_desktop_left_prescription_form_description_container}>\r\n                    <div className={styles.manufactor_container} >\r\n                        <div className={`${styles.main_desktop_left_prescription_form_manufacturer_label} ${styles.main_desktop_left_prescription_form_label}`} >\r\n                            {(language === 'english' || language === undefined) && 'Manufacture'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                        </div>\r\n                        \r\n                            <select\r\n                                disabled={disabled}\r\n                                name=\"manufactor\"\r\n                                onChange={onChange}\r\n                                defaultValue={prescriptionFromRoute && manufacturer}\r\n                                className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_manufacturer_select} ${styles.main_desktop_left_prescription_form_select}`}>\r\n                                {\r\n                                    dataFromServer && dataFromServer.map((element, index) =>\r\n                                        <option key={`manufactor${index}`} value={element.manufacturer}>{element.manufacturer}</option>\r\n\r\n                                    )\r\n                                }\r\n                                {dataFromServer === undefined && <option value={manufacturer}>{manufacturer}</option>}\r\n                            </select>\r\n                        \r\n                    </div>\r\n                    <div className={styles.form_container}>\r\n                        <div className={`${styles.main_desktop_left_prescription_form_label} ${styles.main_desktop_left_prescription_form_format_label}`}>\r\n                        {(language === 'english' || language === undefined) && 'Format'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                            \r\n                        </div>\r\n                        \r\n                        <select\r\n                            disabled={disabled}\r\n                            name=\"form\"\r\n                            onChange={onChange}\r\n                            defaultValue={prescriptionFromRoute && form}\r\n                            className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_format_select} ${styles.main_desktop_left_prescription_form_select} `}>\r\n                            {\r\n                                dataFromServer && dataFromServer.map(element =>\r\n                                    element.form.map((e, index) =>\r\n                                        <option key={`form${index}`} value={e}>{e}</option>\r\n\r\n                                    )\r\n\r\n\r\n                                )\r\n                            }\r\n                            {dataFromServer === undefined && <option value={form} >{form} </option>}\r\n                        </select>\r\n                        \r\n                    </div>\r\n                    <div className={styles.dosage_container}>\r\n                        <div className={` ${styles.main_desktop_left_prescription_form_label} ${styles.main_desktop_left_prescription_form_dosage_label}`} >\r\n                        {(language === 'english' || language === undefined) && 'Dosage'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                          \r\n                            \r\n                        </div>\r\n\r\n                        <select\r\n                            disabled={disabled}\r\n                            name=\"dosage\"\r\n                            onChange={onChange}\r\n                            defaultValue={prescriptionFromRoute && dosage}\r\n                            className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_select} ${styles.main_desktop_left_prescription_form_dosage_select}`}>\r\n                            {\r\n                                dataFromServer && dataFromServer.map(element =>\r\n                                    element.dosage.map((e, index) =>\r\n                                        <option key={`dosage${index}`} value={e.dosage}>{e.dosage}</option>\r\n\r\n                                    )\r\n\r\n                                )\r\n                            }\r\n                            {dataFromServer === undefined && <option value={dosage} > {dosage} </option>}\r\n                        </select>\r\n                    </div>\r\n                    <div className={styles.quantity_container}>\r\n                        <div className={`${styles.main_desktop_left_prescription_form_label} ${styles.main_desktop_left_prescription_form_quantity_label}`}>\r\n                        {(language === 'english' || language === undefined) && 'Quantity'}\r\n                            {language === 'spanish' && '<Spanish>'}\r\n                          \r\n                            \r\n                        </div>\r\n                        <select\r\n                            disabled={disabled}\r\n                            name=\"quantity\"\r\n                            onChange={onChange}\r\n                            defaultValue={prescriptionFromRoute && quantity}\r\n                            className={(disabled ? styles.disabled_fonts_weight : \"\") + ` ${styles.main_desktop_left_prescription_form_select} ${styles.main_desktop_left_prescription_form_quantity_select}`}>\r\n                            {\r\n                                dataFromServer && dataFromServer.map(element =>\r\n                                    element.quantity.map((e, index) =>\r\n                                        <option key={`quantity${index}`} value={e.quantity}>{e.quantity}</option>\r\n\r\n                                    )\r\n\r\n                                )\r\n                            }\r\n                            {dataFromServer === undefined && <option value={quantity}>{quantity}</option>}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n\r\n    );\r\n}\r\nexport default PrescriptionDetailedForm;"]},"metadata":{},"sourceType":"module"}