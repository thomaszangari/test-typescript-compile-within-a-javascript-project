{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsa\\\\OneDrive\\\\Desktop\\\\ReactExampleCode\\\\test-typescript-compile-within-a-javascript-project\\\\Code\\\\src\\\\Claims\\\\claimsearch\\\\index.js\";\nimport React from \"react\";\nimport AppTextbox from \"../../AppTextbox\";\nimport DatePicker from \"react-datepicker\";\nimport { Button } from \"react-bootstrap\";\n\nclass ClaimSearch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (e, stateName) => {\n      if (stateName === 'firstName' || stateName === 'lastName') {\n        const regExp = /^[A-Za-z]+$/;\n\n        if (e.target.value === '' || regExp.test(e.target.value)) {\n          this.setState({\n            [stateName]: e.target.value\n          });\n        }\n      } else {\n        this.setState({\n          [stateName]: e.target.value\n        });\n      }\n    };\n\n    this.handleSelectChange = (e, stateName) => {\n      const val = Number(e.target.value);\n      this.setState({\n        [stateName]: val\n      });\n    };\n\n    this.onSearch = () => {\n      const {\n        firstName,\n        lastName,\n        drawDate,\n        ticketStatus,\n        paymentStatus\n      } = this.state;\n      this.props.handleSearchClick(firstName, lastName, drawDate, ticketStatus, paymentStatus);\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      drawDate: null,\n      ticketStatus: '',\n      paymentStatus: '',\n      ticketStatuses: [{\n        id: 0,\n        value: 'Select'\n      }, {\n        id: 1,\n        value: 'TicketStatus1'\n      }, {\n        id: 2,\n        value: 'TicketStatus2'\n      }, {\n        id: 3,\n        value: 'TicketStatus3'\n      }, {\n        id: 4,\n        value: 'TicketStatus4'\n      }, {\n        id: 5,\n        value: 'TicketStatus5'\n      }],\n      paymentStatuses: [{\n        id: 0,\n        value: 'Select'\n      }, {\n        id: 1,\n        value: 'PaymentStatus1'\n      }, {\n        id: 2,\n        value: 'PaymentStatus2'\n      }, {\n        id: 3,\n        value: 'PaymentStatus3'\n      }, {\n        id: 4,\n        value: 'PaymentStatus4'\n      }, {\n        id: 5,\n        value: 'PaymentStatus5'\n      }]\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      drawDate,\n      ticketStatus,\n      paymentStatus,\n      ticketStatuses,\n      paymentStatuses\n    } = this.state; // Conditions to activate the [Search]\n\n    let isDisabled = true;\n\n    if (paymentStatus) {\n      isDisabled = false;\n    } else if (ticketStatus) {\n      isDisabled = false;\n    } else if (drawDate) {\n      isDisabled = false;\n    } else if (lastName) {\n      isDisabled = false;\n    } else if (firstName) {\n      if (lastName || drawDate || ticketStatus || paymentStatus) {\n        isDisabled = false;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-criteria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"claim-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"First Name \",\n      value: firstName,\n      onChange: e => this.handleInputChange(e, 'firstName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"claim-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(AppTextbox, {\n      type: \"text\",\n      placeholder: \"Last Name \",\n      value: lastName,\n      onChange: e => this.handleInputChange(e, 'lastName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"claim-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"Draw Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      maxDate: new Date(),\n      isClearable: false,\n      placeholderText: \"Draw Date\",\n      selected: drawDate,\n      onChange: date => this.setState({\n        drawDate: date\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"claim-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Ticket Status\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: ticketStatus,\n      onChange: e => this.handleSelectChange(e, 'ticketStatus'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, ticketStatuses.map(identifier => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: identifier.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 44\n        }\n      }, identifier.value);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"claim-search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Payment Status\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: paymentStatus,\n      onChange: e => this.handleSelectChange(e, 'paymentStatus'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, paymentStatuses.map(identifier => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: identifier.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 44\n        }\n      }, identifier.value);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: isDisabled,\n      className: \"claim-search-btn\",\n      onClick: () => this.onSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, \"Search\"))));\n  }\n\n}\n\nexport default ClaimSearch;","map":{"version":3,"sources":["C:/Users/tomsa/OneDrive/Desktop/ReactExampleCode/test-typescript-compile-within-a-javascript-project/Code/src/Claims/claimsearch/index.js"],"names":["React","AppTextbox","DatePicker","Button","ClaimSearch","Component","constructor","props","handleInputChange","e","stateName","regExp","target","value","test","setState","handleSelectChange","val","Number","onSearch","firstName","lastName","drawDate","ticketStatus","paymentStatus","state","handleSearchClick","ticketStatuses","id","paymentStatuses","componentDidMount","render","isDisabled","Date","date","map","identifier"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqDnBC,iBArDmB,GAqDC,CAACC,CAAD,EAAIC,SAAJ,KAAkB;AAClC,UAAIA,SAAS,KAAK,WAAd,IAA6BA,SAAS,KAAK,UAA/C,EAA2D;AACvD,cAAMC,MAAM,GAAG,aAAf;;AACA,YAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAAnB,IAA0BF,MAAM,CAACG,IAAP,CAAYL,CAAC,CAACG,MAAF,CAASC,KAArB,CAA9B,EAA4D;AACxD,eAAKE,QAAL,CAAc;AAAC,aAACL,SAAD,GAAaD,CAAC,CAACG,MAAF,CAASC;AAAvB,WAAd;AACH;AACJ,OALD,MAKO;AACH,aAAKE,QAAL,CAAc;AAAC,WAACL,SAAD,GAAaD,CAAC,CAACG,MAAF,CAASC;AAAvB,SAAd;AACH;AACJ,KA9DkB;;AAAA,SAgEnBG,kBAhEmB,GAgEE,CAACP,CAAD,EAAIC,SAAJ,KAAkB;AACnC,YAAMO,GAAG,GAAGC,MAAM,CAACT,CAAC,CAACG,MAAF,CAASC,KAAV,CAAlB;AACA,WAAKE,QAAL,CAAc;AAAC,SAACL,SAAD,GAAaO;AAAd,OAAd;AACH,KAnEkB;;AAAA,SAqEnBE,QArEmB,GAqER,MAAM;AACb,YAAM;AAACC,QAAAA,SAAD;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA,QAAtB;AAAgCC,QAAAA,YAAhC;AAA8CC,QAAAA;AAA9C,UAA+D,KAAKC,KAA1E;AACA,WAAKlB,KAAL,CAAWmB,iBAAX,CAA6BN,SAA7B,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4DC,YAA5D,EAA0EC,aAA1E;AACH,KAxEkB;;AAEf,SAAKC,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,QAAQ,EAAE,IAHD;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,aAAa,EAAE,EALN;AAMTG,MAAAA,cAAc,EAAE,CAAC;AACbC,QAAAA,EAAE,EAAE,CADS;AAEbf,QAAAA,KAAK,EAAE;AAFM,OAAD,EAGb;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OAHa,EAMb;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OANa,EASb;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OATa,EAYb;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OAZa,EAeb;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OAfa,CANP;AAyBTgB,MAAAA,eAAe,EAAE,CAAC;AACdD,QAAAA,EAAE,EAAE,CADU;AAEdf,QAAAA,KAAK,EAAE;AAFO,OAAD,EAGd;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OAHc,EAMd;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OANc,EASd;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OATc,EAYd;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OAZc,EAed;AACCe,QAAAA,EAAE,EAAE,CADL;AAECf,QAAAA,KAAK,EAAE;AAFR,OAfc;AAzBR,KAAb;AA6CH;;AAEDiB,EAAAA,iBAAiB,GAAG,CAEnB;;AAuBDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACX,MAAAA,SAAD;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,QAAtB;AAAgCC,MAAAA,YAAhC;AAA8CC,MAAAA,aAA9C;AAA6DG,MAAAA,cAA7D;AAA6EE,MAAAA;AAA7E,QAAgG,KAAKJ,KAA3G,CADK,CAGL;;AACA,QAAIO,UAAU,GAAG,IAAjB;;AACA,QAAIR,aAAJ,EAAmB;AACfQ,MAAAA,UAAU,GAAG,KAAb;AACH,KAFD,MAEO,IAAIT,YAAJ,EAAkB;AACrBS,MAAAA,UAAU,GAAG,KAAb;AACH,KAFM,MAEA,IAAIV,QAAJ,EAAc;AACjBU,MAAAA,UAAU,GAAG,KAAb;AACH,KAFM,MAEA,IAAIX,QAAJ,EAAc;AACjBW,MAAAA,UAAU,GAAG,KAAb;AACH,KAFM,MAEA,IAAIZ,SAAJ,EAAe;AAClB,UAAIC,QAAQ,IAAIC,QAAZ,IAAwBC,YAAxB,IAAwCC,aAA5C,EAA2D;AACvDQ,QAAAA,UAAU,GAAG,KAAb;AACH;AACJ;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,WAAW,EAAC,aAApC;AAAkD,MAAA,KAAK,EAAEZ,SAAzD;AACY,MAAA,QAAQ,EAAGX,CAAD,IAAO,KAAKD,iBAAL,CAAuBC,CAAvB,EAA0B,WAA1B,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,WAAW,EAAC,YAApC;AAAiD,MAAA,KAAK,EAAEY,QAAxD;AACY,MAAA,QAAQ,EAAGZ,CAAD,IAAO,KAAKD,iBAAL,CAAuBC,CAAvB,EAA0B,UAA1B,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,IAAIwB,IAAJ,EAArB;AACY,MAAA,WAAW,EAAE,KADzB;AAEY,MAAA,eAAe,EAAC,WAF5B;AAGY,MAAA,QAAQ,EAAEX,QAHtB;AAIY,MAAA,QAAQ,EAAEY,IAAI,IAAI,KAAKnB,QAAL,CAAc;AAACO,QAAAA,QAAQ,EAAEY;AAAX,OAAd,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAQ,MAAA,KAAK,EAAEX,YAAf;AAA6B,MAAA,QAAQ,EAAGd,CAAD,IAAO,KAAKO,kBAAL,CAAwBP,CAAxB,EAA2B,cAA3B,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQkB,cAAc,CAACQ,GAAf,CAAmBC,UAAU,IAAI;AAC7B,0BAAO;AAAQ,QAAA,KAAK,EAAEA,UAAU,CAACR,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BQ,UAAU,CAACvB,KAA1C,CAAP;AACH,KAFD,CAFR,CAFJ,CAnBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAQ,MAAA,KAAK,EAAEW,aAAf;AAA8B,MAAA,QAAQ,EAAGf,CAAD,IAAO,KAAKO,kBAAL,CAAwBP,CAAxB,EAA2B,eAA3B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQoB,eAAe,CAACM,GAAhB,CAAoBC,UAAU,IAAI;AAC9B,0BAAO;AAAQ,QAAA,KAAK,EAAEA,UAAU,CAACR,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BQ,UAAU,CAACvB,KAA1C,CAAP;AACH,KAFD,CAFR,CAFJ,CA7BJ,eAuCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEmB,UAAlB;AAA8B,MAAA,SAAS,EAAC,kBAAxC;AAA2D,MAAA,OAAO,EAAE,MAAM,KAAKb,QAAL,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAvCJ,CADJ,CADJ;AAkDH;;AAjJqC;;AAqJ1C,eAAef,WAAf","sourcesContent":["import React from \"react\";\r\nimport AppTextbox from \"../../AppTextbox\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nclass ClaimSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            drawDate: null,\r\n            ticketStatus: '',\r\n            paymentStatus: '',\r\n            ticketStatuses: [{\r\n                id: 0,\r\n                value: 'Select'\r\n            }, {\r\n                id: 1,\r\n                value: 'TicketStatus1'\r\n            }, {\r\n                id: 2,\r\n                value: 'TicketStatus2'\r\n            }, {\r\n                id: 3,\r\n                value: 'TicketStatus3'\r\n            }, {\r\n                id: 4,\r\n                value: 'TicketStatus4'\r\n            }, {\r\n                id: 5,\r\n                value: 'TicketStatus5'\r\n            }],\r\n            paymentStatuses: [{\r\n                id: 0,\r\n                value: 'Select'\r\n            }, {\r\n                id: 1,\r\n                value: 'PaymentStatus1'\r\n            }, {\r\n                id: 2,\r\n                value: 'PaymentStatus2'\r\n            }, {\r\n                id: 3,\r\n                value: 'PaymentStatus3'\r\n            }, {\r\n                id: 4,\r\n                value: 'PaymentStatus4'\r\n            }, {\r\n                id: 5,\r\n                value: 'PaymentStatus5'\r\n            }]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleInputChange = (e, stateName) => {\r\n        if (stateName === 'firstName' || stateName === 'lastName') {\r\n            const regExp = /^[A-Za-z]+$/;\r\n            if (e.target.value === '' || (regExp.test(e.target.value))) {\r\n                this.setState({[stateName]: e.target.value})\r\n            }\r\n        } else {\r\n            this.setState({[stateName]: e.target.value});\r\n        }\r\n    }\r\n\r\n    handleSelectChange = (e, stateName) => {\r\n        const val = Number(e.target.value);\r\n        this.setState({[stateName]: val});\r\n    }\r\n\r\n    onSearch = () => {\r\n        const {firstName, lastName, drawDate, ticketStatus, paymentStatus} = this.state;\r\n        this.props.handleSearchClick(firstName, lastName, drawDate, ticketStatus, paymentStatus);\r\n    }\r\n\r\n    render() {\r\n        const {firstName, lastName, drawDate, ticketStatus, paymentStatus, ticketStatuses, paymentStatuses} = this.state;\r\n\r\n        // Conditions to activate the [Search]\r\n        let isDisabled = true;\r\n        if (paymentStatus) {\r\n            isDisabled = false\r\n        } else if (ticketStatus) {\r\n            isDisabled = false\r\n        } else if (drawDate) {\r\n            isDisabled = false\r\n        } else if (lastName) {\r\n            isDisabled = false\r\n        } else if (firstName) {\r\n            if (lastName || drawDate || ticketStatus || paymentStatus) {\r\n                isDisabled = false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='search-criteria'>\r\n                    <div>\r\n                        <div className='claim-search-label'>First Name</div>\r\n                        <AppTextbox type='text' placeholder='First Name ' value={firstName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'firstName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Last Name</div>\r\n                        <AppTextbox type='text' placeholder='Last Name ' value={lastName}\r\n                                    onChange={(e) => this.handleInputChange(e, 'lastName')}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Draw Date</div>\r\n                        <DatePicker maxDate={new Date()}\r\n                                    isClearable={false}\r\n                                    placeholderText=\"Draw Date\"\r\n                                    selected={drawDate}\r\n                                    onChange={date => this.setState({drawDate: date})}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Ticket Status</div>\r\n                        <select value={ticketStatus} onChange={(e) => this.handleSelectChange(e, 'ticketStatus')}>\r\n                            {\r\n                                ticketStatuses.map(identifier => {\r\n                                    return <option value={identifier.id}>{identifier.value}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className='claim-search-label'>Payment Status</div>\r\n                        <select value={paymentStatus} onChange={(e) => this.handleSelectChange(e, 'paymentStatus')}>\r\n                            {\r\n                                paymentStatuses.map(identifier => {\r\n                                    return <option value={identifier.id}>{identifier.value}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <Button disabled={isDisabled} className='claim-search-btn' onClick={() => this.onSearch()}>\r\n                            Search\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ClaimSearch;\r\n"]},"metadata":{},"sourceType":"module"}